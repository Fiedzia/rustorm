use chrono::datetime::DateTime;
use chrono::naive::datetime::NaiveDateTime;
use chrono::offset::utc::UTC;


#[derive(Debug)]
pub struct AAsset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: timestamp without time zone
    pub a_asset_createdate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_group_id:f64,
    /// db data type: timestamp without time zone
    pub a_asset_revaldate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub a_parent_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_qty_current:Option<f64>,
    /// db data type: numeric
    pub a_qty_original:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetdepreciationdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub assetdisposaldate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub assetservicedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartnersr_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub guaranteedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdepreciated:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisposed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfullydepreciated:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinposession:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isowned:String,
    /// db data type: timestamp without time zone
    pub lastmaintenancedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub lastmaintenancenote:Option<String>,
    /// db data type: numeric
    pub lastmaintenanceunit:Option<f64>,
    /// db data type: numeric
    pub lastmaintenanceuseunit:Option<f64>,
    /// db data type: timestamp without time zone
    pub lastmaintenencedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub lease_bpartner_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub leaseterminationdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub lifeuseunits:Option<f64>,
    /// db data type: character varying
    pub locationcomment:Option<String>,
    /// db data type: character varying
    pub lot:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub nextmaintenanceuseunit:Option<f64>,
    /// db data type: timestamp without time zone
    pub nextmaintenencedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub nextmaintenenceunit:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub uselifemonths:Option<f64>,
    /// db data type: numeric
    pub uselifeyears:Option<f64>,
    /// db data type: numeric
    pub useunits:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub versionno:Option<String>,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_bpartnersr:Option<CBpartner>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub lease_bpartner:Option<CBpartner>,
    /// has one, self referential
    pub a_parent_asset:Option<Box<AAsset>>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
    /// has many
    pub a_asset_addition:Option<Vec<AAssetAddition>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub a_asset_delivery:Option<Vec<AAssetDelivery>>,
    /// has many
    pub a_asset_disposed:Option<Vec<AAssetDisposed>>,
    /// has many
    pub a_asset_retirement:Option<Vec<AAssetRetirement>>,
    /// has many
    pub a_asset_use:Option<Vec<AAssetUse>>,
    /// has many
    pub a_depreciation_build:Option<Vec<ADepreciationBuild>>,
    /// has many
    pub a_depreciation_forecast:Option<Vec<ADepreciationForecast>>,
    /// has many
    pub a_registration:Option<Vec<ARegistration>>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub m_operationresource:Option<Vec<MOperationresource>>,
    /// has many
    pub pp_order_node_asset:Option<Vec<PpOrderNodeAsset>>,
    /// has many
    pub pp_wf_node_asset:Option<Vec<PpWfNodeAsset>>,
    /// has many
    pub r_issueproject:Option<Vec<RIssueproject>>,
    /// has many
    pub r_issuesystem:Option<Vec<RIssuesystem>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct AAssetAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_acct_id:f64,
    /// db data type: numeric
    pub a_accumdepreciation_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: numeric
    pub a_asset_spread_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_conv_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_id:f64,
    /// db data type: numeric
    pub a_depreciation_manual_amount:Option<f64>,
    /// default: 'PR'::character varying
    /// db data type: character varying
    pub a_depreciation_manual_period:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_method_id:f64,
    /// db data type: numeric
    pub a_depreciation_table_header_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_variable_perc:Option<f64>,
    /// db data type: character varying
    pub a_disposal_gain:Option<String>,
    /// db data type: character varying
    pub a_disposal_loss:Option<String>,
    /// db data type: character varying
    pub a_disposal_revenue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_period_end:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_start:f64,
    /// db data type: character varying
    pub a_reval_accumdep_offset_cur:Option<String>,
    /// db data type: character varying
    pub a_reval_accumdep_offset_prior:Option<String>,
    /// default: 'DFT'::character varying
    /// db data type: character varying
    pub a_reval_cal_method:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset_prior:Option<String>,
    /// db data type: character varying
    pub a_reval_depexp_offset:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_salvage_value:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_split_percent:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub a_depreciation:Option<ADepreciation>,
    /// has one
    pub a_depreciation_table_header:Option<ADepreciationTableHeader>,
    /// has one
    pub a_depreciation_method:Option<ADepreciationMethod>,
    /// has one
    pub a_depreciation_conv:Option<ADepreciationConvention>,
    /// has one
    pub a_asset_spread:Option<AAssetSpread>,
}


#[derive(Debug)]
pub struct AAssetAddition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_addition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: character varying
    pub a_capvsexp:Option<String>,
    /// db data type: numeric
    pub a_qty_current:Option<f64>,
    /// db data type: character varying
    pub a_sourcetype:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub assetvalueamt:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
}


#[derive(Debug)]
pub struct AAssetChange {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_change_id:f64,
    /// db data type: numeric
    pub a_accumdepreciation_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct_id:Option<f64>,
    /// db data type: numeric
    pub a_asset_addition_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub a_asset_createdate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: numeric
    pub a_asset_retirement_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub a_asset_revaldate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub a_asset_spread_type:Option<String>,
    /// db data type: numeric
    pub a_depreciation_acct:Option<f64>,
    /// db data type: character varying
    pub a_depreciation_calc_type:Option<String>,
    /// db data type: numeric
    pub a_depreciation_manual_amount:Option<f64>,
    /// db data type: character varying
    pub a_depreciation_manual_period:Option<String>,
    /// db data type: numeric
    pub a_depreciation_table_header_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_variable_perc:Option<f64>,
    /// db data type: character varying
    pub a_disposal_loss:Option<String>,
    /// db data type: character varying
    pub a_disposal_revenue:Option<String>,
    /// db data type: numeric
    pub a_parent_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_period_end:Option<f64>,
    /// db data type: numeric
    pub a_period_start:Option<f64>,
    /// db data type: numeric
    pub a_qty_current:Option<f64>,
    /// db data type: numeric
    pub a_qty_original:Option<f64>,
    /// db data type: numeric
    pub a_reval_accumdep_offset_cur:Option<f64>,
    /// db data type: numeric
    pub a_reval_accumdep_offset_prior:Option<f64>,
    /// db data type: character varying
    pub a_reval_cal_method:Option<String>,
    /// db data type: numeric
    pub a_reval_cost_offset:Option<f64>,
    /// db data type: numeric
    pub a_reval_cost_offset_prior:Option<f64>,
    /// db data type: numeric
    pub a_reval_depexp_offset:Option<f64>,
    /// db data type: numeric
    pub a_salvage_value:Option<f64>,
    /// db data type: numeric
    pub a_split_percent:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub assetaccumdepreciationamt:Option<f64>,
    /// db data type: numeric
    pub assetbookvalueamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetdepreciationdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub assetdisposaldate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub assetmarketvalueamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetservicedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub assetvalueamt:Option<f64>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_validcombination_id:Option<f64>,
    /// db data type: numeric
    pub changeamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub changedate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub changetype:String,
    /// db data type: character varying
    pub conventiontype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: character varying
    pub depreciationtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdepreciated:Option<String>,
    /// db data type: character
    pub isdisposed:Option<String>,
    /// db data type: character
    pub isfullydepreciated:Option<String>,
    /// db data type: character
    pub isinposession:Option<String>,
    /// db data type: character
    pub isowned:Option<String>,
    /// db data type: numeric
    pub lifeuseunits:Option<f64>,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: character varying
    pub postingtype:Option<String>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub textdetails:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub uselifemonths:Option<f64>,
    /// db data type: numeric
    pub uselifeyears:Option<f64>,
    /// db data type: numeric
    pub useunits:Option<f64>,
    /// db data type: character varying
    pub versionno:Option<String>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub a_asset_retirement:Option<AAssetRetirement>,
    /// has one
    pub a_asset_addition:Option<AAssetAddition>,
    /// has one
    pub a_parent_asset:Option<AAsset>,
    /// has one
    pub a_depreciation_table_header:Option<ADepreciationTableHeader>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has many
    pub a_asset_change_amt:Option<Vec<AAssetChangeAmt>>,
}


#[derive(Debug)]
pub struct AAssetChangeAmt {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_change_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetaccumdepreciationamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetbookvalueamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetmarketvalueamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetvalueamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset_change:Option<AAssetChange>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct AAssetDelivery {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_delivery_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub deliveryconfirmation:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_productdownload_id:Option<f64>,
    /// db data type: character varying
    pub messageid:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// db data type: character varying
    pub referrer:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub url:Option<String>,
    /// db data type: character varying
    pub versionno:Option<String>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub m_productdownload:Option<MProductdownload>,
}


#[derive(Debug)]
pub struct AAssetDisposed {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_disposed_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: numeric
    pub a_asset_trade_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub a_disposed_date:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub a_disposed_method:String,
    /// not nullable 
    /// db data type: character varying
    pub a_disposed_reason:String,
    /// db data type: numeric
    pub a_proceeds:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub a_asset_trade:Option<AAsset>,
}


#[derive(Debug)]
pub struct AAssetGroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreateasactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdepreciated:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isoneassetperuom:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isowned:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub istrackissues:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_group_acct:Option<Vec<AAssetGroupAcct>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub m_product_category:Option<Vec<MProductCategory>>,
}


#[derive(Debug)]
pub struct AAssetGroupAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_group_acct_id:f64,
    /// db data type: numeric
    pub a_accumdepreciation_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_group_id:f64,
    /// db data type: character varying
    pub a_asset_spread_type:Option<String>,
    /// db data type: numeric
    pub a_depreciation_acct:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_depreciation_calc_type:String,
    /// db data type: numeric
    pub a_depreciation_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_manual_amount:Option<f64>,
    /// default: 'PR'::character varying
    /// db data type: character varying
    pub a_depreciation_manual_period:Option<String>,
    /// db data type: numeric
    pub a_depreciation_table_header_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_variable_perc:Option<f64>,
    /// db data type: character varying
    pub a_disposal_gain:Option<String>,
    /// db data type: character varying
    pub a_disposal_loss:Option<String>,
    /// db data type: character varying
    pub a_disposal_revenue:Option<String>,
    /// db data type: character varying
    pub a_reval_accumdep_offset_cur:Option<String>,
    /// db data type: character varying
    pub a_reval_accumdep_offset_prior:Option<String>,
    /// default: 'DFT'::character varying
    /// db data type: character varying
    pub a_reval_cal_method:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset_prior:Option<String>,
    /// db data type: character varying
    pub a_reval_depexp_offset:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_split_percent:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub conventiontype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub depreciationtype:String,
    /// db data type: character
    pub isactive:Option<String>,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: numeric
    pub uselifemonths:Option<f64>,
    /// db data type: numeric
    pub uselifeyears:Option<f64>,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub a_depreciation:Option<ADepreciation>,
    /// has one
    pub a_depreciation_table_header:Option<ADepreciationTableHeader>,
}


#[derive(Debug)]
pub struct AAssetInfoFin {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_info_fin_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: timestamp without time zone
    pub a_contract_date:Option<NaiveDateTime>,
    /// db data type: character varying
    pub a_due_on:Option<String>,
    /// db data type: timestamp without time zone
    pub a_expired_date:Option<NaiveDateTime>,
    /// db data type: character varying
    pub a_finance_meth:Option<String>,
    /// db data type: numeric
    pub a_monthly_payment:Option<f64>,
    /// db data type: character
    pub a_purchase_option:Option<String>,
    /// db data type: numeric
    pub a_purchase_option_credit:Option<f64>,
    /// db data type: numeric
    pub a_purchase_option_credit_per:Option<f64>,
    /// db data type: numeric
    pub a_purchase_price:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetInfoIns {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_info_ins_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: numeric
    pub a_ins_premium:Option<f64>,
    /// db data type: numeric
    pub a_ins_value:Option<f64>,
    /// db data type: character varying
    pub a_insurance_co:Option<String>,
    /// db data type: character varying
    pub a_policy_no:Option<String>,
    /// db data type: timestamp without time zone
    pub a_renewal_date:Option<NaiveDateTime>,
    /// db data type: numeric
    pub a_replace_cost:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub text:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetInfoLic {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_info_lic_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: character varying
    pub a_issuing_agency:Option<String>,
    /// db data type: numeric
    pub a_license_fee:Option<f64>,
    /// db data type: character varying
    pub a_license_no:Option<String>,
    /// db data type: timestamp without time zone
    pub a_renewal_date:Option<NaiveDateTime>,
    /// db data type: character varying
    pub a_state:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub text:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetInfoOth {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_info_oth_id:f64,
    /// db data type: character varying
    pub a_user1:Option<String>,
    /// db data type: character varying
    pub a_user10:Option<String>,
    /// db data type: character varying
    pub a_user11:Option<String>,
    /// db data type: character varying
    pub a_user12:Option<String>,
    /// db data type: character varying
    pub a_user13:Option<String>,
    /// db data type: character varying
    pub a_user14:Option<String>,
    /// db data type: character varying
    pub a_user15:Option<String>,
    /// db data type: character varying
    pub a_user2:Option<String>,
    /// db data type: character varying
    pub a_user3:Option<String>,
    /// db data type: character varying
    pub a_user4:Option<String>,
    /// db data type: character varying
    pub a_user5:Option<String>,
    /// db data type: character varying
    pub a_user6:Option<String>,
    /// db data type: character varying
    pub a_user7:Option<String>,
    /// db data type: character varying
    pub a_user8:Option<String>,
    /// db data type: character varying
    pub a_user9:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub text:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetInfoTax {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_info_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: character varying
    pub a_finance_meth:Option<String>,
    /// db data type: numeric
    pub a_investment_cr:Option<f64>,
    /// db data type: character
    pub a_new_used:Option<String>,
    /// db data type: character varying
    pub a_state:Option<String>,
    /// db data type: character varying
    pub a_tax_entity:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetRetirement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_retirement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetmarketvalueamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub assetvalueamt:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
}


#[derive(Debug)]
pub struct AAssetRevalEntry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_reval_entry_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub a_effective_date:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub a_rev_code:String,
    /// not nullable 
    /// db data type: character varying
    pub a_reval_cal_method:String,
    /// not nullable 
    /// db data type: character varying
    pub a_reval_effective_date:String,
    /// not nullable 
    /// db data type: character varying
    pub a_reval_multiplier:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datedoc:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct AAssetRevalIndex {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_reval_index_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub a_effective_date:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub a_reval_code:String,
    /// not nullable 
    /// db data type: character varying
    pub a_reval_multiplier:String,
    /// not nullable 
    /// db data type: numeric
    pub a_reval_rate:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AAssetSplit {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_split_id:f64,
    /// db data type: numeric
    pub a_amount_split:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_acct_id:f64,
    /// db data type: numeric
    pub a_asset_cost:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: character varying
    pub a_asset_id_to:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_workfile_id:f64,
    /// db data type: numeric
    pub a_percent_original:Option<f64>,
    /// db data type: numeric
    pub a_percent_split:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_qty_current:f64,
    /// db data type: numeric
    pub a_qty_split:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_split_type:String,
    /// not nullable 
    /// db data type: character
    pub a_transfer_balance_is:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_period:Option<CPeriod>,
}


#[derive(Debug)]
pub struct AAssetSpread {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_spread_id:f64,
    /// db data type: character varying
    pub a_asset_spread_type:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_period_1:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_10:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_11:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_12:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_13:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_14:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_2:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_3:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_4:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_5:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_6:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_7:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_8:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_9:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
}


#[derive(Debug)]
pub struct AAssetTransfer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_transfer_id:f64,
    /// db data type: numeric
    pub a_accumdepreciation_acct:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_accumdepreciation_acct_new:String,
    /// db data type: character varying
    pub a_accumdepreciation_acct_str:Option<String>,
    /// db data type: numeric
    pub a_asset_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_asset_acct_new:String,
    /// db data type: character varying
    pub a_asset_acct_str:Option<String>,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_acct:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_depreciation_acct_new:String,
    /// db data type: character varying
    pub a_depreciation_acct_str:Option<String>,
    /// db data type: numeric
    pub a_disposal_loss:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_disposal_loss_new:String,
    /// db data type: character varying
    pub a_disposal_loss_str:Option<String>,
    /// db data type: numeric
    pub a_disposal_revenue:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub a_disposal_revenue_new:String,
    /// db data type: character varying
    pub a_disposal_revenue_str:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub a_period_end:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_period_start:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_split_percent:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub a_transfer_balance:String,
    /// not nullable 
    /// db data type: character
    pub a_transfer_balance_is:String,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub postingtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct AAssetUse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_asset_use_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub usedate:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub useunits:f64,
    /// has one
    pub a_asset:Option<AAsset>,
}


#[derive(Debug)]
pub struct ADepreciation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub depreciationtype:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub script:Option<String>,
    /// db data type: character varying
    pub text:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
    /// has many
    pub a_asset_group_acct:Option<Vec<AAssetGroupAcct>>,
}


#[derive(Debug)]
pub struct ADepreciationBuild {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_build_id:f64,
    /// db data type: numeric
    pub a_end_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_start_asset_id:Option<f64>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datedoc:Option<NaiveDateTime>,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: numeric
    pub periodno:Option<f64>,
    /// default: 'A'::bpchar
    /// db data type: character
    pub postingtype:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub a_end_asset:Option<AAsset>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub a_start_asset:Option<AAsset>,
}


#[derive(Debug)]
pub struct ADepreciationConvention {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_convention_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub conventiontype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
}


#[derive(Debug)]
pub struct ADepreciationEntry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_entry_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub a_entry_type:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// not nullable 
    /// db data type: numeric
    pub gl_category_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'A'::bpchar
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct ADepreciationExp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_exp_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub a_account_number:String,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub a_entry_type:String,
    /// not nullable 
    /// db data type: numeric
    pub a_period:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: numeric
    pub expense:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isdepreciated:String,
    /// db data type: character varying
    pub postingtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct ADepreciationForecast {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_forecast_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_end_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_start_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_end_asset:Option<AAsset>,
    /// has one
    pub a_start_asset:Option<AAsset>,
}


#[derive(Debug)]
pub struct ADepreciationMethod {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_method_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub depreciationtype:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub text:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
}


#[derive(Debug)]
pub struct ADepreciationTableDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_table_detail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_rate:f64,
    /// not nullable 
    /// db data type: character varying
    pub a_depreciation_table_code:String,
    /// not nullable 
    /// db data type: numeric
    pub a_period:f64,
    /// default: 'RT'::character varying
    /// db data type: character varying
    pub a_table_rate_type:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct ADepreciationTableHeader {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_table_header_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub a_depreciation_table_code:String,
    /// not nullable 
    /// db data type: character varying
    pub a_table_rate_type:String,
    /// not nullable 
    /// db data type: character varying
    pub a_term:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub a_asset_group_acct:Option<Vec<AAssetGroupAcct>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
}


#[derive(Debug)]
pub struct ADepreciationWorkfile {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_depreciation_workfile_id:f64,
    /// default: 0
    /// db data type: numeric
    pub a_accumulated_depr:Option<f64>,
    /// db data type: numeric
    pub a_asset_cost:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// db data type: numeric
    pub a_asset_life_current_year:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_life_years:f64,
    /// db data type: numeric
    pub a_base_amount:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub a_calc_accumulated_depr:Option<f64>,
    /// db data type: numeric
    pub a_curr_dep_exp:Option<f64>,
    /// db data type: numeric
    pub a_current_period:Option<f64>,
    /// db data type: numeric
    pub a_life_period:Option<f64>,
    /// db data type: numeric
    pub a_period_forecast:Option<f64>,
    /// db data type: numeric
    pub a_period_posted:Option<f64>,
    /// db data type: numeric
    pub a_prior_year_accumulated_depr:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub a_qty_current:f64,
    /// db data type: numeric
    pub a_salvage_value:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: timestamp without time zone
    pub assetdepreciationdate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdepreciated:Option<String>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct ARegistration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_registration_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetservicedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallowpublish:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinproduction:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isregistered:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub a_registrationvalue:Option<Vec<ARegistrationvalue>>,
}


#[derive(Debug)]
pub struct ARegistrationattribute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_registrationattribute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// db data type: character varying
    pub columnname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has many
    pub a_registrationproduct:Option<Vec<ARegistrationproduct>>,
    /// has many
    pub a_registrationvalue:Option<Vec<ARegistrationvalue>>,
}


#[derive(Debug)]
pub struct ARegistrationproduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_registrationattribute_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_registrationattribute:Option<ARegistrationattribute>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct ARegistrationvalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_registration_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub a_registrationattribute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_registration:Option<ARegistration>,
    /// has one
    pub a_registrationattribute:Option<ARegistrationattribute>,
}


#[derive(Debug)]
pub struct AdAccesslog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_accesslog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// db data type: character varying
    pub reply:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdAlert {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alert_id:f64,
    /// db data type: numeric
    pub ad_alertprocessor_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub alertmessage:String,
    /// not nullable 
    /// db data type: character varying
    pub alertsubject:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub enforceclientsecurity:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub enforcerolesecurity:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_alertprocessor:Option<AdAlertprocessor>,
    /// has many
    pub ad_alertrecipient:Option<Vec<AdAlertrecipient>>,
    /// has many
    pub ad_alertrule:Option<Vec<AdAlertrule>>,
}


#[derive(Debug)]
pub struct AdAlertprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alertprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one, extension table
    pub ad_alertprocessorlog:Option<Box<AdAlertprocessorlog>>,
    /// has many
    pub ad_alert:Option<Vec<AdAlert>>,
}


#[derive(Debug)]
pub struct AdAlertprocessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alertprocessor_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alertprocessorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_alertprocessor:Option<AdAlertprocessor>,
}


#[derive(Debug)]
pub struct AdAlertrecipient {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alertrecipient_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_alert_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_alert:Option<AdAlert>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct AdAlertrule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_alertrule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_alert_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub errormsg:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub fromclause:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub otherclause:Option<String>,
    /// db data type: character varying
    pub postprocessing:Option<String>,
    /// db data type: character varying
    pub preprocessing:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub selectclause:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_alert:Option<AdAlert>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdArchive {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_archive_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreport:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
}


#[derive(Debug)]
pub struct AdAttachment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_attachment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub title:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub ad_attachmentnote:Option<Vec<AdAttachmentnote>>,
}


#[derive(Debug)]
pub struct AdAttachmentnote {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_attachmentnote_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_attachment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub textmsg:String,
    /// not nullable 
    /// db data type: character varying
    pub title:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_attachment:Option<AdAttachment>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct AdAttribute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_attribute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// db data type: character varying
    pub callout:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub displaylength:Option<f64>,
    /// db data type: character varying
    pub displaylogic:Option<String>,
    /// db data type: numeric
    pub fieldlength:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isencrypted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfieldonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isheading:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatory:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issameline:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isupdateable:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub valuemax:Option<String>,
    /// db data type: character varying
    pub valuemin:Option<String>,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has one, extension table
    pub ad_attribute_value:Option<Box<AdAttributeValue>>,
}


#[derive(Debug)]
pub struct AdAttributeValue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_attribute_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: timestamp without time zone
    pub v_date:Option<NaiveDateTime>,
    /// db data type: numeric
    pub v_number:Option<f64>,
    /// db data type: character varying
    pub v_string:Option<String>,
    /// has one
    pub ad_attribute:Option<AdAttribute>,
}


#[derive(Debug)]
pub struct AdBrowse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_id:f64,
    /// default: '4'::bpchar
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_view_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isbetafunctionality:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iscollapsiblebydefault:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdeleteable:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isexecutedquerybydefault:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isselectedbydefault:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isshowtotal:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has many
    pub ad_browse_access:Option<Vec<AdBrowseAccess>>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_browse_trl:Option<Vec<AdBrowseTrl>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub pa_dashboardcontent:Option<Vec<PaDashboardcontent>>,
}


#[derive(Debug)]
pub struct AdBrowseAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has one
    pub ad_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct AdBrowseField {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_field_id:f64,
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_view_column_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub axis_column_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub axis_parent_column_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub defaultvalue2:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub displaylogic:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub fieldlength:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub infofactoryclass:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub iscentrallymaintained:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isdisplayed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isidentifier:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub iskey:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub ismandatory:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isorderby:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isquerycriteria:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isrange:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isreadonly:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub readonlylogic:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// db data type: numeric
    pub sortno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub valuemax:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub valuemin:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_element:Option<AdElement>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_view_column:Option<AdViewColumn>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has one
    pub axis_column:Option<AdViewColumn>,
    /// has one
    pub axis_parent_column:Option<AdViewColumn>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has many
    pub ad_browse_field_trl:Option<Vec<AdBrowseFieldTrl>>,
    /// has many
    pub pa_dashboardcontent:Option<Vec<PaDashboardcontent>>,
}


#[derive(Debug)]
pub struct AdBrowseFieldTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_field_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_browse_field:Option<AdBrowseField>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdBrowseTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_browse_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdChangelog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_changelog_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_session_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub eventchangelog:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscustomization:String,
    /// db data type: character varying
    pub newvalue:Option<String>,
    /// db data type: character varying
    pub oldvalue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character
    pub redo:Option<String>,
    /// db data type: character varying
    pub trxname:Option<String>,
    /// db data type: character
    pub undo:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_session:Option<AdSession>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdChart {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_chart_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'V'::bpchar
    /// not nullable 
    /// db data type: character
    pub chartorientation:String,
    /// not nullable 
    /// db data type: character varying
    pub charttype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub domainlabel:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplaylegend:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istimeseries:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub rangelabel:Option<String>,
    /// db data type: numeric
    pub timescope:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub timeunit:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub winheight:Option<f64>,
    /// has many
    pub ad_chartdatasource:Option<Vec<AdChartdatasource>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
}


#[derive(Debug)]
pub struct AdChartdatasource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_chartdatasource_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_chart_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: character varying
    pub categorycolumn:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub datecolumn:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: character varying
    pub fromclause:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub keycolumn:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub seriescolumn:Option<String>,
    /// db data type: numeric
    pub timeoffset:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub valuecolumn:String,
    /// default: 'WHERE ...'::character varying
    /// not nullable 
    /// db data type: character varying
    pub whereclause:String,
    /// has one
    pub ad_chart:Option<AdChart>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdClient {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_replicationstrategy_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub autoarchive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentdir:Option<String>,
    /// db data type: character
    pub emailtest:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscostimmediate:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismultilingualdocument:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispostimmediate:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isserveremail:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issmtpauthorization:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isuseasp:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isusebetafunctions:String,
    /// db data type: character varying
    pub ldapquery:Option<String>,
    /// default: 'F'::bpchar
    /// not nullable 
    /// db data type: character
    pub mmpolicy:String,
    /// db data type: character varying
    pub modelvalidationclasses:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub requestemail:Option<String>,
    /// db data type: character varying
    pub requestfolder:Option<String>,
    /// db data type: character varying
    pub requestuser:Option<String>,
    /// db data type: character varying
    pub requestuserpw:Option<String>,
    /// db data type: character varying
    pub smtphost:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub storearchiveonfilesystem:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub storeattachmentsonfilesystem:String,
    /// db data type: character varying
    pub unixarchivepath:Option<String>,
    /// db data type: character varying
    pub unixattachmentpath:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub windowsarchivepath:Option<String>,
    /// db data type: character varying
    pub windowsattachmentpath:Option<String>,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub ad_replicationstrategy:Option<AdReplicationstrategy>,
    /// has one, extension table
    pub ad_clientinfo:Option<Box<AdClientinfo>>,
    /// has many
    pub ad_clientshare:Option<Vec<AdClientshare>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_language:Option<Vec<AdLanguage>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_message:Option<Vec<AdMessage>>,
    /// has many
    pub ad_org:Option<Vec<AdOrg>>,
    /// has many
    pub ad_preference:Option<Vec<AdPreference>>,
    /// has many
    pub ad_printform:Option<Vec<AdPrintform>>,
    /// has many
    pub ad_process_access:Option<Vec<AdProcessAccess>>,
    /// has many
    pub ad_ref_list:Option<Vec<AdRefList>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_reference:Option<Vec<AdReference>>,
    /// has many
    pub ad_replication:Option<Vec<AdReplication>>,
    /// has many
    pub ad_role:Option<Vec<AdRole>>,
    /// has many
    pub ad_sequence:Option<Vec<AdSequence>>,
    /// has many
    pub ad_sequence_audit:Option<Vec<AdSequenceAudit>>,
    /// has many
    pub ad_sequence_no:Option<Vec<AdSequenceNo>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table:Option<Vec<AdTable>>,
    /// has many
    pub ad_table_access:Option<Vec<AdTableAccess>>,
    /// has many
    pub ad_task:Option<Vec<AdTask>>,
    /// has many
    pub ad_task_access:Option<Vec<AdTaskAccess>>,
    /// has many
    pub ad_taskinstance:Option<Vec<AdTaskinstance>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub ad_user_roles:Option<Vec<AdUserRoles>>,
    /// has many
    pub ad_val_rule:Option<Vec<AdValRule>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_wf_nodenext:Option<Vec<AdWfNodenext>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_window:Option<Vec<AdWindow>>,
    /// has many
    pub ad_window_access:Option<Vec<AdWindowAccess>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub ad_workflow_access:Option<Vec<AdWorkflowAccess>>,
    /// has many
    pub c_acctschema:Option<Vec<CAcctschema>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub c_calendar:Option<Vec<CCalendar>>,
    /// has many
    pub c_city:Option<Vec<CCity>>,
    /// has many
    pub c_conversion_rate:Option<Vec<CConversionRate>>,
    /// has many
    pub c_country:Option<Vec<CCountry>>,
    /// has many
    pub c_currency:Option<Vec<CCurrency>>,
    /// has many
    pub c_element:Option<Vec<CElement>>,
    /// has many
    pub c_elementvalue:Option<Vec<CElementvalue>>,
    /// has many
    pub c_location:Option<Vec<CLocation>>,
    /// has many
    pub c_nonbusinessday:Option<Vec<CNonbusinessday>>,
    /// has many
    pub c_ordersource:Option<Vec<COrdersource>>,
    /// has many
    pub c_period:Option<Vec<CPeriod>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_region:Option<Vec<CRegion>>,
    /// has many
    pub c_uom:Option<Vec<CUom>>,
    /// has many
    pub c_uom_conversion:Option<Vec<CUomConversion>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub c_year:Option<Vec<CYear>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_locator:Option<Vec<MLocator>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_storage:Option<Vec<MStorage>>,
    /// has many
    pub m_substitute:Option<Vec<MSubstitute>>,
    /// has many
    pub m_warehouse:Option<Vec<MWarehouse>>,
    /// has many
    pub w_store:Option<Vec<WStore>>,
}


#[derive(Debug)]
pub struct AdClientinfo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_tree_activity_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_campaign_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_menu_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_product_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_project_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_acctschema1_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartnercashtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_calendar_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_length_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_time_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_volume_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_weight_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountlineamt:String,
    /// db data type: numeric
    pub keeplogdays:Option<f64>,
    /// db data type: numeric
    pub logo_id:Option<f64>,
    /// db data type: numeric
    pub logoreport_id:Option<f64>,
    /// db data type: numeric
    pub logoweb_id:Option<f64>,
    /// db data type: numeric
    pub m_productfreight_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has one
    pub c_acctschema1:Option<CAcctschema>,
    /// has one
    pub c_uom_volume:Option<CUom>,
    /// has one
    pub c_uom_weight:Option<CUom>,
    /// has one
    pub c_uom_length:Option<CUom>,
    /// has one
    pub c_uom_time:Option<CUom>,
    /// has one
    pub ad_tree_menu:Option<AdTree>,
    /// has one
    pub ad_tree_org:Option<AdTree>,
    /// has one
    pub ad_tree_bpartner:Option<AdTree>,
    /// has one
    pub ad_tree_project:Option<AdTree>,
    /// has one
    pub ad_tree_salesregion:Option<AdTree>,
    /// has one
    pub ad_tree_product:Option<AdTree>,
    /// has one
    pub m_productfreight:Option<MProduct>,
    /// has one
    pub c_bpartnercashtrx:Option<CBpartner>,
    /// has one
    pub ad_tree_activity:Option<AdTree>,
    /// has one
    pub ad_tree_campaign:Option<AdTree>,
    /// has one
    pub logo:Option<AdImage>,
    /// has one
    pub logoreport:Option<AdImage>,
    /// has one
    pub logoweb:Option<AdImage>,
}


#[derive(Debug)]
pub struct AdClientshare {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_clientshare_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub sharetype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdColor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_color_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub alpha:f64,
    /// db data type: numeric
    pub alpha_1:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub blue:f64,
    /// db data type: numeric
    pub blue_1:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub colortype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub green:f64,
    /// db data type: numeric
    pub green_1:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub imagealpha:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// db data type: numeric
    pub linedistance:Option<f64>,
    /// db data type: numeric
    pub linewidth:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub red:f64,
    /// db data type: numeric
    pub red_1:Option<f64>,
    /// db data type: numeric
    pub repeatdistance:Option<f64>,
    /// db data type: numeric
    pub startpoint:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has many
    pub ad_desktop:Option<Vec<AdDesktop>>,
    /// has many
    pub ad_window:Option<Vec<AdWindow>>,
    /// has many
    pub ad_workbench:Option<Vec<AdWorkbench>>,
}


#[derive(Debug)]
pub struct AdColumn {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_chart_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_element_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// db data type: character varying
    pub callout:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub columnname:String,
    /// db data type: character varying
    pub columnsql:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: numeric
    pub fieldlength:Option<f64>,
    /// db data type: character varying
    pub formatpattern:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub infofactoryclass:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isallowlogging:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isalwaysupdateable:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isautocomplete:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isencrypted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isidentifier:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iskey:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatory:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isparent:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrange:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselectioncolumn:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub issyncdatabase:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isupdateable:String,
    /// db data type: character varying
    pub mandatorylogic:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub readonlylogic:Option<String>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub valuemax:Option<String>,
    /// db data type: character varying
    pub valuemin:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub version:f64,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has one
    pub ad_element:Option<AdElement>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_chart:Option<AdChart>,
    /// has many
    pub ad_accesslog:Option<Vec<AdAccesslog>>,
    /// has many
    pub ad_changelog:Option<Vec<AdChangelog>>,
    /// has many
    pub ad_column_access:Option<Vec<AdColumnAccess>>,
    /// has many
    pub ad_column_trl:Option<Vec<AdColumnTrl>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_find:Option<Vec<AdFind>>,
    /// has many
    pub ad_impformat_row:Option<Vec<AdImpformatRow>>,
    /// has many
    pub ad_migrationdata:Option<Vec<AdMigrationdata>>,
    /// has many
    pub ad_package_imp_backup:Option<Vec<AdPackageImpBackup>>,
    /// has many
    pub ad_printformatitem:Option<Vec<AdPrintformatitem>>,
    /// has many
    pub ad_printlabelline:Option<Vec<AdPrintlabelline>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_reportview_col:Option<Vec<AdReportviewCol>>,
    /// has many
    pub ad_searchdefinition:Option<Vec<AdSearchdefinition>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_view_column:Option<Vec<AdViewColumn>>,
    /// has many
    pub ad_wf_nextcondition:Option<Vec<AdWfNextcondition>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_workbench:Option<Vec<AdWorkbench>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub exp_formatline:Option<Vec<ExpFormatline>>,
    /// has many
    pub i_elementvalue:Option<Vec<IElementvalue>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdColumnAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexclude:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdColumnTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdDesktop {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_desktop_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_color_id:Option<f64>,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_color:Option<AdColor>,
    /// has many
    pub ad_desktop_trl:Option<Vec<AdDesktopTrl>>,
    /// has many
    pub ad_desktopworkbench:Option<Vec<AdDesktopworkbench>>,
}


#[derive(Debug)]
pub struct AdDesktopTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_desktop_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_desktop:Option<AdDesktop>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdDesktopworkbench {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_desktopworkbench_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_desktop_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_workbench_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub ad_desktop:Option<AdDesktop>,
}


#[derive(Debug)]
pub struct AdDocumentActionAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ref_list_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_ref_list:Option<AdRefList>,
}


#[derive(Debug)]
pub struct AdElement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_reference_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub columnname:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub fieldlength:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub po_description:Option<String>,
    /// db data type: character varying
    pub po_help:Option<String>,
    /// db data type: character varying
    pub po_name:Option<String>,
    /// db data type: character varying
    pub po_printname:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_element_trl:Option<Vec<AdElementTrl>>,
    /// has many
    pub ad_infocolumn:Option<Vec<AdInfocolumn>>,
    /// has many
    pub ad_process_para:Option<Vec<AdProcessPara>>,
}


#[derive(Debug)]
pub struct AdElementTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_element_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub po_description:Option<String>,
    /// db data type: character varying
    pub po_help:Option<String>,
    /// db data type: character varying
    pub po_name:Option<String>,
    /// db data type: character varying
    pub po_printname:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_element:Option<AdElement>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdEntitytype {
    /// primary
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_entitytype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub classpath:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub modelpackage:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub version:Option<String>,
    /// has many
    pub ad_browse:Option<Vec<AdBrowse>>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_chartdatasource:Option<Vec<AdChartdatasource>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_element:Option<Vec<AdElement>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_fieldgroup:Option<Vec<AdFieldgroup>>,
    /// has many
    pub ad_form:Option<Vec<AdForm>>,
    /// has many
    pub ad_image:Option<Vec<AdImage>>,
    /// has many
    pub ad_infocolumn:Option<Vec<AdInfocolumn>>,
    /// has many
    pub ad_infowindow:Option<Vec<AdInfowindow>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_message:Option<Vec<AdMessage>>,
    /// has many
    pub ad_migration:Option<Vec<AdMigration>>,
    /// has many
    pub ad_modelvalidator:Option<Vec<AdModelvalidator>>,
    /// has many
    pub ad_modification:Option<Vec<AdModification>>,
    /// has many
    pub ad_process:Option<Vec<AdProcess>>,
    /// has many
    pub ad_process_para:Option<Vec<AdProcessPara>>,
    /// has many
    pub ad_ref_list:Option<Vec<AdRefList>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_reference:Option<Vec<AdReference>>,
    /// has many
    pub ad_replicationstrategy:Option<Vec<AdReplicationstrategy>>,
    /// has many
    pub ad_replicationtable:Option<Vec<AdReplicationtable>>,
    /// has many
    pub ad_reportview:Option<Vec<AdReportview>>,
    /// has many
    pub ad_rule:Option<Vec<AdRule>>,
    /// has many
    pub ad_sysconfig:Option<Vec<AdSysconfig>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table:Option<Vec<AdTable>>,
    /// has many
    pub ad_table_process:Option<Vec<AdTableProcess>>,
    /// has many
    pub ad_task:Option<Vec<AdTask>>,
    /// has many
    pub ad_val_rule:Option<Vec<AdValRule>>,
    /// has many
    pub ad_view_column:Option<Vec<AdViewColumn>>,
    /// has many
    pub ad_wf_nextcondition:Option<Vec<AdWfNextcondition>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_wf_node_para:Option<Vec<AdWfNodePara>>,
    /// has many
    pub ad_wf_nodenext:Option<Vec<AdWfNodenext>>,
    /// has many
    pub ad_wf_responsible:Option<Vec<AdWfResponsible>>,
    /// has many
    pub ad_window:Option<Vec<AdWindow>>,
    /// has many
    pub ad_workbench:Option<Vec<AdWorkbench>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pa_colorschema:Option<Vec<PaColorschema>>,
    /// has many
    pub pa_measurecalc:Option<Vec<PaMeasurecalc>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_nodenext:Option<Vec<PpOrderNodenext>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
    /// has many
    pub pp_wf_node_product:Option<Vec<PpWfNodeProduct>>,
}


#[derive(Debug)]
pub struct AdError {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_error_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub code:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdField {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_field_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// db data type: numeric
    pub ad_fieldgroup_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_reference_id:Option<f64>,
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_tab_id:f64,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub displaylength:Option<f64>,
    /// db data type: character varying
    pub displaylogic:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: numeric
    pub included_tab_id:Option<f64>,
    /// db data type: character varying
    pub infofactoryclass:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscentrallymaintained:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplayed:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplayedgrid:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isembedded:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isencrypted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfieldonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isheading:String,
    /// db data type: character
    pub ismandatory:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issameline:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub obscuretype:Option<String>,
    /// db data type: numeric
    pub preferredwidth:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// db data type: numeric
    pub seqnogrid:Option<f64>,
    /// db data type: numeric
    pub sortno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_tab:Option<AdTab>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_fieldgroup:Option<AdFieldgroup>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub included_tab:Option<AdTab>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has many
    pub ad_field_trl:Option<Vec<AdFieldTrl>>,
    /// has many
    pub ad_userdef_field:Option<Vec<AdUserdefField>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_field:Option<Vec<AspField>>,
}


#[derive(Debug)]
pub struct AdFieldTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_field_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_field:Option<AdField>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdFieldgroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_fieldgroup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character
    pub fieldgrouptype:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iscollapsedbydefault:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_fieldgroup_trl:Option<Vec<AdFieldgroupTrl>>,
}


#[derive(Debug)]
pub struct AdFieldgroupTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_fieldgroup_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_fieldgroup:Option<AdFieldgroup>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdFind {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_find_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub andor:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub find_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub operation:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub value2:Option<String>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdForm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_form_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub classname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbetafunctionality:String,
    /// db data type: character varying
    pub jspurl:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_form_access:Option<Vec<AdFormAccess>>,
    /// has many
    pub ad_form_trl:Option<Vec<AdFormTrl>>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_process:Option<Vec<AdProcess>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_form:Option<Vec<AspForm>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdFormAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_form_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct AdFormTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_form_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdHousekeeping {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_housekeeping_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: character varying
    pub backupfolder:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isexportxmlbackup:Option<String>,
    /// db data type: character
    pub issaveinhistoric:Option<String>,
    /// db data type: numeric
    pub lastdeleted:Option<f64>,
    /// db data type: timestamp without time zone
    pub lastrun:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdImage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_image_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub ad_color:Option<Vec<AdColor>>,
    /// has many
    pub ad_desktop:Option<Vec<AdDesktop>>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub ad_printtableformat:Option<Vec<AdPrinttableformat>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_window:Option<Vec<AdWindow>>,
    /// has many
    pub ad_workbench:Option<Vec<AdWorkbench>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_poskey:Option<Vec<CPoskey>>,
    /// has many
    pub cm_media:Option<Vec<CmMedia>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdImpformat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_impformat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub formattype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: character varying
    pub separatorchar:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub ad_impformat_row:Option<Vec<AdImpformatRow>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
}


#[derive(Debug)]
pub struct AdImpformatRow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_impformat_row_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_impformat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub callout:Option<String>,
    /// db data type: character varying
    pub constantvalue:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub dataformat:Option<String>,
    /// not nullable 
    /// db data type: character
    pub datatype:String,
    /// not nullable 
    /// db data type: character
    pub decimalpoint:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub divideby100:String,
    /// db data type: numeric
    pub endno:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub script:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: numeric
    pub startno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_impformat:Option<AdImpformat>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdInfocolumn {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_infocolumn_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_element_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_infowindow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplayed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isquerycriteria:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub selectclause:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_infowindow:Option<AdInfowindow>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_element:Option<AdElement>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has many
    pub ad_infocolumn_trl:Option<Vec<AdInfocolumnTrl>>,
}


#[derive(Debug)]
pub struct AdInfocolumnTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_infocolumn_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_infocolumn:Option<AdInfocolumn>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdInfowindow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_infowindow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: character varying
    pub fromclause:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub otherclause:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_infocolumn:Option<Vec<AdInfocolumn>>,
    /// has many
    pub ad_infowindow_trl:Option<Vec<AdInfowindowTrl>>,
}


#[derive(Debug)]
pub struct AdInfowindowTrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_infowindow_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_infowindow:Option<AdInfowindow>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdIssue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_issue_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: character varying
    pub comments:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub databaseinfo:Option<String>,
    /// db data type: character varying
    pub dbaddress:Option<String>,
    /// db data type: character varying
    pub errortrace:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isreproducible:Option<String>,
    /// db data type: character
    pub issuesource:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub issuesummary:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isvanillasystem:Option<String>,
    /// db data type: character varying
    pub javainfo:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub lineno:Option<f64>,
    /// db data type: character varying
    pub local_host:Option<String>,
    /// db data type: character varying
    pub loggername:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub operatingsysteminfo:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub profileinfo:Option<String>,
    /// db data type: numeric
    pub r_issueknown_id:Option<f64>,
    /// db data type: numeric
    pub r_issueproject_id:Option<f64>,
    /// db data type: numeric
    pub r_issuesystem_id:Option<f64>,
    /// db data type: numeric
    pub r_issueuser_id:Option<f64>,
    /// db data type: numeric
    pub r_request_id:Option<f64>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: '.'::character varying
    /// not nullable 
    /// db data type: character varying
    pub releaseno:String,
    /// db data type: character varying
    pub releasetag:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// db data type: character varying
    pub requestdocumentno:Option<String>,
    /// db data type: character varying
    pub responsetext:Option<String>,
    /// db data type: character varying
    pub sourceclassname:Option<String>,
    /// db data type: character varying
    pub sourcemethodname:Option<String>,
    /// db data type: character varying
    pub stacktrace:Option<String>,
    /// db data type: character varying
    pub statisticsinfo:Option<String>,
    /// db data type: character varying
    pub supportemail:Option<String>,
    /// not nullable 
    /// db data type: character
    pub systemstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub username:String,
    /// not nullable 
    /// db data type: character varying
    pub version:String,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub r_request:Option<RRequest>,
    /// has one
    pub r_issueknown:Option<RIssueknown>,
    /// has one
    pub r_issueproject:Option<RIssueproject>,
    /// has one
    pub r_issueuser:Option<RIssueuser>,
    /// has one
    pub r_issuesystem:Option<RIssuesystem>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_form:Option<AdForm>,
}


#[derive(Debug)]
pub struct AdLabelprinter {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_labelprinter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_labelprinterfunction:Option<Vec<AdLabelprinterfunction>>,
    /// has many
    pub ad_printlabel:Option<Vec<AdPrintlabel>>,
}


#[derive(Debug)]
pub struct AdLabelprinterfunction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_labelprinterfunction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_labelprinter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub functionprefix:Option<String>,
    /// db data type: character varying
    pub functionsuffix:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isxyposition:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub xyseparator:Option<String>,
    /// has one
    pub ad_labelprinter:Option<AdLabelprinter>,
    /// has many
    pub ad_printlabelline:Option<Vec<AdPrintlabelline>>,
}


#[derive(Debug)]
pub struct AdLanguage {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_language_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub countrycode:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub datepattern:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbaselanguage:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdecimalpoint:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issystemlanguage:String,
    /// db data type: character
    pub languageiso:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub timepattern:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has many
    pub ad_browse_field_trl:Option<Vec<AdBrowseFieldTrl>>,
    /// has many
    pub ad_browse_trl:Option<Vec<AdBrowseTrl>>,
    /// has many
    pub ad_client:Option<Vec<AdClient>>,
    /// has many
    pub ad_column_trl:Option<Vec<AdColumnTrl>>,
    /// has many
    pub ad_desktop_trl:Option<Vec<AdDesktopTrl>>,
    /// has many
    pub ad_element_trl:Option<Vec<AdElementTrl>>,
    /// has many
    pub ad_error:Option<Vec<AdError>>,
    /// has many
    pub ad_field_trl:Option<Vec<AdFieldTrl>>,
    /// has many
    pub ad_fieldgroup_trl:Option<Vec<AdFieldgroupTrl>>,
    /// has many
    pub ad_form_trl:Option<Vec<AdFormTrl>>,
    /// has many
    pub ad_infocolumn_trl:Option<Vec<AdInfocolumnTrl>>,
    /// has many
    pub ad_infowindow_trl:Option<Vec<AdInfowindowTrl>>,
    /// has many
    pub ad_menu_trl:Option<Vec<AdMenuTrl>>,
    /// has many
    pub ad_message_trl:Option<Vec<AdMessageTrl>>,
    /// has many
    pub ad_printformatitem_trl:Option<Vec<AdPrintformatitemTrl>>,
    /// has many
    pub ad_printlabelline_trl:Option<Vec<AdPrintlabellineTrl>>,
    /// has many
    pub ad_process_para_trl:Option<Vec<AdProcessParaTrl>>,
    /// has many
    pub ad_process_trl:Option<Vec<AdProcessTrl>>,
    /// has many
    pub ad_ref_list_trl:Option<Vec<AdRefListTrl>>,
    /// has many
    pub ad_reference_trl:Option<Vec<AdReferenceTrl>>,
    /// has many
    pub ad_tab_trl:Option<Vec<AdTabTrl>>,
    /// has many
    pub ad_table_trl:Option<Vec<AdTableTrl>>,
    /// has many
    pub ad_task_trl:Option<Vec<AdTaskTrl>>,
    /// has many
    pub ad_userdef_win:Option<Vec<AdUserdefWin>>,
    /// has many
    pub ad_view_column_trl:Option<Vec<AdViewColumnTrl>>,
    /// has many
    pub ad_view_trl:Option<Vec<AdViewTrl>>,
    /// has many
    pub ad_wf_node_trl:Option<Vec<AdWfNodeTrl>>,
    /// has many
    pub ad_window_trl:Option<Vec<AdWindowTrl>>,
    /// has many
    pub ad_workbench_trl:Option<Vec<AdWorkbenchTrl>>,
    /// has many
    pub ad_workflow_trl:Option<Vec<AdWorkflowTrl>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_charge_trl:Option<Vec<CChargeTrl>>,
    /// has many
    pub c_country:Option<Vec<CCountry>>,
    /// has many
    pub c_country_trl:Option<Vec<CCountryTrl>>,
    /// has many
    pub c_currency_trl:Option<Vec<CCurrencyTrl>>,
    /// has many
    pub c_doctype_trl:Option<Vec<CDoctypeTrl>>,
    /// has many
    pub c_dunninglevel_trl:Option<Vec<CDunninglevelTrl>>,
    /// has many
    pub c_elementvalue_trl:Option<Vec<CElementvalueTrl>>,
    /// has many
    pub c_greeting_trl:Option<Vec<CGreetingTrl>>,
    /// has many
    pub c_paymentterm_trl:Option<Vec<CPaymenttermTrl>>,
    /// has many
    pub c_tax_trl:Option<Vec<CTaxTrl>>,
    /// has many
    pub c_taxcategory_trl:Option<Vec<CTaxcategoryTrl>>,
    /// has many
    pub c_uom_trl:Option<Vec<CUomTrl>>,
    /// has many
    pub cm_container_element_trl:Option<Vec<CmContainerElementTrl>>,
    /// has many
    pub cm_container_trl:Option<Vec<CmContainerTrl>>,
    /// has many
    pub cm_cstage_element_trl:Option<Vec<CmCstageElementTrl>>,
    /// has many
    pub cm_cstage_trl:Option<Vec<CmCstageTrl>>,
    /// has many
    pub cm_newschannel:Option<Vec<CmNewschannel>>,
    /// has many
    pub k_synonym:Option<Vec<KSynonym>>,
    /// has many
    pub m_product_trl:Option<Vec<MProductTrl>>,
    /// has many
    pub pa_dashboardcontent_trl:Option<Vec<PaDashboardcontentTrl>>,
    /// has many
    pub pp_order_bom_trl:Option<Vec<PpOrderBomTrl>>,
    /// has many
    pub pp_order_bomline_trl:Option<Vec<PpOrderBomlineTrl>>,
    /// has many
    pub pp_order_node_trl:Option<Vec<PpOrderNodeTrl>>,
    /// has many
    pub pp_order_workflow_trl:Option<Vec<PpOrderWorkflowTrl>>,
    /// has many
    pub pp_product_bom_trl:Option<Vec<PpProductBomTrl>>,
    /// has many
    pub pp_product_bomline_trl:Option<Vec<PpProductBomlineTrl>>,
    /// has many
    pub r_mailtext_trl:Option<Vec<RMailtextTrl>>,
    /// has many
    pub w_mailmsg_trl:Option<Vec<WMailmsgTrl>>,
    /// has many
    pub w_store_trl:Option<Vec<WStoreTrl>>,
}


#[derive(Debug)]
pub struct AdLdapaccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ldapaccess_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_ldapprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: numeric
    pub r_interestarea_id:Option<f64>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_ldapprocessor:Option<AdLdapprocessor>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_interestarea:Option<RInterestarea>,
}


#[derive(Debug)]
pub struct AdLdapprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ldapprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ldapport:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one, extension table
    pub ad_ldapprocessorlog:Option<Box<AdLdapprocessorlog>>,
    /// has many
    pub ad_ldapaccess:Option<Vec<AdLdapaccess>>,
}


#[derive(Debug)]
pub struct AdLdapprocessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ldapprocessor_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ldapprocessorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_ldapprocessor:Option<AdLdapprocessor>,
}


#[derive(Debug)]
pub struct AdMemo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_memo_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: text
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isalert:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct AdMenu {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_menu_id:f64,
    /// db data type: character
    pub action:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_browse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: numeric
    pub ad_workbench_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub iscentrallymaintained:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has many
    pub ad_menu_trl:Option<Vec<AdMenuTrl>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
}


#[derive(Debug)]
pub struct AdMenuTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_menu_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_menu:Option<AdMenu>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdMessage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_message_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub msgtext:String,
    /// db data type: character varying
    pub msgtip:Option<String>,
    /// not nullable 
    /// db data type: character
    pub msgtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_message_trl:Option<Vec<AdMessageTrl>>,
    /// has many
    pub ad_note:Option<Vec<AdNote>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
}


#[derive(Debug)]
pub struct AdMessageTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_message_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub msgtext:String,
    /// db data type: character varying
    pub msgtip:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_message:Option<AdMessage>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdMigration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_migration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::bpchar
    /// db data type: character
    pub apply:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub exportxml:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub releaseno:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: NULL::bpchar
    /// db data type: character
    pub statuscode:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_migrationstep:Option<Vec<AdMigrationstep>>,
}


#[derive(Debug)]
pub struct AdMigrationdata {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_migrationdata_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_migrationstep_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub backupvalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isbackupnull:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isnewnull:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isoldnull:Option<String>,
    /// db data type: character varying
    pub newvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub oldvalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_migrationstep:Option<AdMigrationstep>,
}


#[derive(Debug)]
pub struct AdMigrationscript {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_migrationscript_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub developername:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub filename:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isapply:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub projectname:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub releaseno:String,
    /// db data type: bytea
    pub script:Option<Vec<u8>>,
    /// db data type: character
    pub scriptroll:Option<String>,
    /// not nullable 
    /// db data type: character
    pub status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub url:Option<String>,
}


#[derive(Debug)]
pub struct AdMigrationstep {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_migrationstep_id:f64,
    /// db data type: character
    pub action:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_migration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub apply:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'ALL'::character varying
    /// db data type: character varying
    pub dbtype:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub errormsg:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// db data type: text
    pub rollbackstatement:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: text
    pub sqlstatement:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub statuscode:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub steptype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_migration:Option<AdMigration>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub ad_migrationdata:Option<Vec<AdMigrationdata>>,
}


#[derive(Debug)]
pub struct AdModelvalidator {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_modelvalidator_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub modelvalidationclass:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
}


#[derive(Debug)]
pub struct AdModification {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_modification_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub version:Option<String>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdNote {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_note_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_message_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_activity_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_message:Option<AdMessage>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_wf_activity:Option<AdWfActivity>,
}


#[derive(Debug)]
pub struct AdOrg {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_replicationstrategy_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_replicationstrategy:Option<AdReplicationstrategy>,
    /// has one, extension table
    pub ad_orginfo:Option<Box<AdOrginfo>>,
    /// has one, extension table
    pub ad_orginfo:Option<Box<AdOrginfo>>,
    /// has many
    pub ad_clientshare:Option<Vec<AdClientshare>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_language:Option<Vec<AdLanguage>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_message:Option<Vec<AdMessage>>,
    /// has many
    pub ad_preference:Option<Vec<AdPreference>>,
    /// has many
    pub ad_process_access:Option<Vec<AdProcessAccess>>,
    /// has many
    pub ad_ref_list:Option<Vec<AdRefList>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_reference:Option<Vec<AdReference>>,
    /// has many
    pub ad_replication:Option<Vec<AdReplication>>,
    /// has many
    pub ad_role:Option<Vec<AdRole>>,
    /// has many
    pub ad_role_orgaccess:Option<Vec<AdRoleOrgaccess>>,
    /// has many
    pub ad_sequence:Option<Vec<AdSequence>>,
    /// has many
    pub ad_sequence_audit:Option<Vec<AdSequenceAudit>>,
    /// has many
    pub ad_sequence_no:Option<Vec<AdSequenceNo>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table:Option<Vec<AdTable>>,
    /// has many
    pub ad_table_access:Option<Vec<AdTableAccess>>,
    /// has many
    pub ad_task:Option<Vec<AdTask>>,
    /// has many
    pub ad_task_access:Option<Vec<AdTaskAccess>>,
    /// has many
    pub ad_taskinstance:Option<Vec<AdTaskinstance>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub ad_user_orgaccess:Option<Vec<AdUserOrgaccess>>,
    /// has many
    pub ad_user_roles:Option<Vec<AdUserRoles>>,
    /// has many
    pub ad_val_rule:Option<Vec<AdValRule>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_wf_nodenext:Option<Vec<AdWfNodenext>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_wf_responsible:Option<Vec<AdWfResponsible>>,
    /// has many
    pub ad_window:Option<Vec<AdWindow>>,
    /// has many
    pub ad_window_access:Option<Vec<AdWindowAccess>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub ad_workflow_access:Option<Vec<AdWorkflowAccess>>,
    /// has many
    pub c_acctschema:Option<Vec<CAcctschema>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub c_calendar:Option<Vec<CCalendar>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_city:Option<Vec<CCity>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_conversion_rate:Option<Vec<CConversionRate>>,
    /// has many
    pub c_country:Option<Vec<CCountry>>,
    /// has many
    pub c_currency:Option<Vec<CCurrency>>,
    /// has many
    pub c_element:Option<Vec<CElement>>,
    /// has many
    pub c_elementvalue:Option<Vec<CElementvalue>>,
    /// has many
    pub c_interorg_acct:Option<Vec<CInterorgAcct>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_location:Option<Vec<CLocation>>,
    /// has many
    pub c_nonbusinessday:Option<Vec<CNonbusinessday>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_ordersource:Option<Vec<COrdersource>>,
    /// has many
    pub c_orgassignment:Option<Vec<COrgassignment>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_period:Option<Vec<CPeriod>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_region:Option<Vec<CRegion>>,
    /// has many
    pub c_uom:Option<Vec<CUom>>,
    /// has many
    pub c_uom_conversion:Option<Vec<CUomConversion>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub c_year:Option<Vec<CYear>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_locator:Option<Vec<MLocator>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub m_storage:Option<Vec<MStorage>>,
    /// has many
    pub m_substitute:Option<Vec<MSubstitute>>,
    /// has many
    pub m_warehouse:Option<Vec<MWarehouse>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct AdOrginfo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_orgtype_id:Option<f64>,
    /// db data type: numeric
    pub c_calendar_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub dropship_warehouse_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub duns:String,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character varying
    pub fax:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub logo_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: numeric
    pub pa_goal_id:Option<f64>,
    /// db data type: numeric
    pub parent_org_id:Option<f64>,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub phone2:Option<String>,
    /// db data type: character varying
    pub receiptfootermsg:Option<String>,
    /// db data type: numeric
    pub supervisor_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub taxid:String,
    /// db data type: numeric
    pub transferbank_id:Option<f64>,
    /// db data type: numeric
    pub transfercashbook_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub parent_org:Option<AdOrg>,
    /// has one
    pub ad_orgtype:Option<AdOrgtype>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub transferbank:Option<CBank>,
    /// has one
    pub transfercashbook:Option<CCashbook>,
    /// has one
    pub dropship_warehouse:Option<MWarehouse>,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has one
    pub logo:Option<AdImage>,
}


#[derive(Debug)]
pub struct AdOrgtype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_orgtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
}


#[derive(Debug)]
pub struct AdPackageExp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_exp_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub ad_package_type:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character varying
    pub email:String,
    /// not nullable 
    /// db data type: character varying
    pub file_directory:String,
    /// not nullable 
    /// db data type: character varying
    pub instructions:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub pk_version:String,
    /// db data type: character
    pub processed:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: character varying
    pub releaseno:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub username:String,
    /// not nullable 
    /// db data type: character varying
    pub version:String,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
}


#[derive(Debug)]
pub struct AdPackageExpCommon {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_exp_common_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// db data type: numeric
    pub ad_impformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_menu_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_reportview_id:Option<f64>,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: numeric
    pub ad_workbench_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub dbtype:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub destination_directory:Option<String>,
    /// db data type: character varying
    pub file_directory:Option<String>,
    /// db data type: character varying
    pub filename:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub name2:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub sqlstatement:Option<String>,
    /// db data type: character varying
    pub target_directory:Option<String>,
    /// db data type: character varying
    pub type_:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_impformat:Option<AdImpformat>,
    /// has one
    pub ad_reportview:Option<AdReportview>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_menu:Option<AdMenu>,
}


#[derive(Debug)]
pub struct AdPackageExpDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_exp_detail_id:f64,
    /// db data type: numeric
    pub ad_browse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_entitytype_id:Option<f64>,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// db data type: numeric
    pub ad_impformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_menu_id:Option<f64>,
    /// db data type: numeric
    pub ad_message_id:Option<f64>,
    /// db data type: numeric
    pub ad_modelvalidator_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub ad_package_code_new:Option<String>,
    /// db data type: character varying
    pub ad_package_code_old:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_package_exp_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_reference_id:Option<f64>,
    /// db data type: numeric
    pub ad_reportview_id:Option<f64>,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_view_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: numeric
    pub ad_workbench_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub dbtype:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// db data type: character varying
    pub destination_directory:Option<String>,
    /// db data type: character varying
    pub destination_filename:Option<String>,
    /// db data type: character varying
    pub file_directory:Option<String>,
    /// db data type: character varying
    pub filename:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: character varying
    pub name2:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: character varying
    pub releaseno:Option<String>,
    /// db data type: character varying
    pub sqlstatement:Option<String>,
    /// db data type: character varying
    pub target_directory:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub type_:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_impformat:Option<AdImpformat>,
    /// has one
    pub ad_menu:Option<AdMenu>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_reportview:Option<AdReportview>,
    /// has one
    pub ad_package_exp:Option<AdPackageExp>,
    /// has one
    pub ad_message:Option<AdMessage>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_modelvalidator:Option<AdModelvalidator>,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_browse:Option<AdBrowse>,
}


#[derive(Debug)]
pub struct AdPackageImp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub createddate:Option<String>,
    /// db data type: character varying
    pub creator:Option<String>,
    /// db data type: character varying
    pub creatorcontact:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub pk_status:Option<String>,
    /// db data type: character varying
    pub pk_version:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: character varying
    pub releaseno:Option<String>,
    /// db data type: character
    pub uninstall:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub updateddate:Option<String>,
    /// db data type: character varying
    pub version:Option<String>,
}


#[derive(Debug)]
pub struct AdPackageImpBackup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_backup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub ad_package_imp_bck_dir:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_detail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_id:f64,
    /// db data type: character varying
    pub ad_package_imp_org_dir:Option<String>,
    /// db data type: numeric
    pub ad_reference_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: character varying
    pub colvalue:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub uninstall:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_reference:Option<AdReference>,
}


#[derive(Debug)]
pub struct AdPackageImpDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_detail_id:f64,
    /// db data type: character varying
    pub action:Option<String>,
    /// db data type: numeric
    pub ad_backup_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_original_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub success:Option<String>,
    /// db data type: character varying
    pub tablename:Option<String>,
    /// db data type: character varying
    pub type_:Option<String>,
    /// db data type: character
    pub uninstall:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AdPackageImpInst {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_inst_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub createddate:Option<String>,
    /// db data type: character varying
    pub creator:Option<String>,
    /// db data type: character varying
    pub creatorcontact:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub pk_status:Option<String>,
    /// db data type: character varying
    pub pk_version:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub releaseno:Option<String>,
    /// db data type: character
    pub uninstall:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub updateddate:Option<String>,
    /// db data type: character varying
    pub version:Option<String>,
}


#[derive(Debug)]
pub struct AdPackageImpProc {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_package_imp_proc_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub ad_override_dict:Option<String>,
    /// db data type: character varying
    pub ad_package_dir:Option<String>,
    /// db data type: character varying
    pub ad_package_source:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub ad_package_source_type:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct AdPinstance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub errormsg:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprocessing:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: numeric
    pub result:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one, extension table
    pub ad_pinstance_log:Option<Box<AdPinstanceLog>>,
    /// has one, extension table
    pub ad_pinstance_para:Option<Box<AdPinstancePara>>,
    /// has one, extension table
    pub t_reportstatement:Option<Box<TReportstatement>>,
    /// has one, extension table
    pub t_spool:Option<Box<TSpool>>,
    /// has one, extension table
    pub t_trialbalance:Option<Box<TTrialbalance>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
    /// has many
    pub t_invoicegl:Option<Vec<TInvoicegl>>,
    /// has many
    pub t_replenish:Option<Vec<TReplenish>>,
    /// has many
    pub t_report:Option<Vec<TReport>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct AdPinstanceLog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub log_id:f64,
    /// default: now()
    /// db data type: timestamp without time zone
    pub p_date:Option<NaiveDateTime>,
    /// db data type: numeric
    pub p_id:Option<f64>,
    /// db data type: character varying
    pub p_msg:Option<String>,
    /// db data type: numeric
    pub p_number:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
}


#[derive(Debug)]
pub struct AdPinstancePara {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub info:Option<String>,
    /// db data type: character varying
    pub info_to:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: timestamp without time zone
    pub p_date:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub p_date_to:Option<NaiveDateTime>,
    /// db data type: numeric
    pub p_number:Option<f64>,
    /// db data type: numeric
    pub p_number_to:Option<f64>,
    /// db data type: character varying
    pub p_string:Option<String>,
    /// db data type: character varying
    pub p_string_to:Option<String>,
    /// db data type: character varying
    pub parametername:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
}


#[derive(Debug)]
pub struct AdPreference {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_preference_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub attribute:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct AdPrintcolor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printcolor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub code:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_orgtype:Option<Vec<AdOrgtype>>,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
    /// has many
    pub ad_printformatitem:Option<Vec<AdPrintformatitem>>,
    /// has many
    pub ad_printtableformat:Option<Vec<AdPrinttableformat>>,
    /// has many
    pub c_bp_group:Option<Vec<CBpGroup>>,
    /// has many
    pub c_channel:Option<Vec<CChannel>>,
    /// has many
    pub c_poskey:Option<Vec<CPoskey>>,
    /// has many
    pub c_poskeylayout:Option<Vec<CPoskeylayout>>,
    /// has many
    pub m_product_category:Option<Vec<MProductCategory>>,
    /// has many
    pub pa_colorschema:Option<Vec<PaColorschema>>,
}


#[derive(Debug)]
pub struct AdPrintfont {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printfont_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub code:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
    /// has many
    pub ad_printformatitem:Option<Vec<AdPrintformatitem>>,
    /// has many
    pub ad_printtableformat:Option<Vec<AdPrinttableformat>>,
    /// has many
    pub c_poskey:Option<Vec<CPoskey>>,
    /// has many
    pub c_poskeylayout:Option<Vec<CPoskeylayout>>,
}


#[derive(Debug)]
pub struct AdPrintform {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printform_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub distrib_order_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub distrib_order_printformat_id:Option<f64>,
    /// db data type: numeric
    pub invoice_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub invoice_printformat_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub manuf_order_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub manuf_order_printformat_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub order_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub order_printformat_id:Option<f64>,
    /// db data type: numeric
    pub project_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub project_printformat_id:Option<f64>,
    /// db data type: numeric
    pub remittance_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub remittance_printformat_id:Option<f64>,
    /// db data type: numeric
    pub shipment_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub shipment_printformat_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub invoice_printformat:Option<AdPrintformat>,
    /// has one
    pub order_printformat:Option<AdPrintformat>,
    /// has one
    pub remittance_printformat:Option<AdPrintformat>,
    /// has one
    pub shipment_printformat:Option<AdPrintformat>,
    /// has one
    pub invoice_mailtext:Option<RMailtext>,
    /// has one
    pub orde:Option<RMailtext>,
    /// has one
    pub remittance_mailtext:Option<RMailtext>,
    /// has one
    pub shipment_mailtext:Option<RMailtext>,
    /// has one
    pub project_mailtext:Option<RMailtext>,
    /// has one
    pub project_printformat:Option<AdPrintformat>,
    /// has one
    pub manuf_orde:Option<RMailtext>,
    /// has one
    pub manuf_order_printformat:Option<AdPrintformat>,
    /// has one
    pub distrib_orde:Option<RMailtext>,
    /// has one
    pub distrib_order_printformat:Option<AdPrintformat>,
}


#[derive(Debug)]
pub struct AdPrintformat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printformat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printcolor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printfont_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printpaper_id:f64,
    /// db data type: numeric
    pub ad_printtableformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_reportview_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: character varying
    pub args:Option<String>,
    /// db data type: character varying
    pub classname:Option<String>,
    /// db data type: character
    pub createcopy:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub footermargin:f64,
    /// not nullable 
    /// db data type: numeric
    pub headermargin:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isform:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isstandardheaderfooter:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub istablebased:String,
    /// db data type: numeric
    pub jasperprocess_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub printername:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_printpaper:Option<AdPrintpaper>,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one
    pub ad_printfont:Option<AdPrintfont>,
    /// has one
    pub ad_reportview:Option<AdReportview>,
    /// has one
    pub ad_printtableformat:Option<AdPrinttableformat>,
    /// has one
    pub jasperprocess:Option<AdProcess>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_printform:Option<Vec<AdPrintform>>,
    /// has many
    pub ad_printformatitem:Option<Vec<AdPrintformatitem>>,
    /// has many
    pub ad_printgraph:Option<Vec<AdPrintgraph>>,
    /// has many
    pub ad_process:Option<Vec<AdProcess>>,
    /// has many
    pub c_bankaccountdoc:Option<Vec<CBankaccountdoc>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_doctype:Option<Vec<CDoctype>>,
    /// has many
    pub c_dunninglevel:Option<Vec<CDunninglevel>>,
    /// has many
    pub c_rfq_topic:Option<Vec<CRfqTopic>>,
    /// has many
    pub hr_payroll:Option<Vec<HrPayroll>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
}


#[derive(Debug)]
pub struct AdPrintformatitem {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printformatitem_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub ad_printfont_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_printformat_id:f64,
    /// db data type: numeric
    pub ad_printformatchild_id:Option<f64>,
    /// db data type: numeric
    pub ad_printgraph_id:Option<f64>,
    /// db data type: numeric
    pub arcdiameter:Option<f64>,
    /// db data type: character
    pub barcodetype:Option<String>,
    /// db data type: numeric
    pub belowcolumn:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub fieldalignmenttype:String,
    /// db data type: character varying
    pub formatpattern:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub imageisattached:String,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaveraged:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscentrallymaintained:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscounted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdeviationcalc:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfilledrectangle:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfixedwidth:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isgroupby:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isheightoneline:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isimagefield:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismaxcalc:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismincalc:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isnextline:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isnextpage:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isorderby:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispagebreak:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrelativeposition:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrunningtotal:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issetnlposition:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummarized:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issuppressnull:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issuppressrepeats:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvariancecalc:String,
    /// not nullable 
    /// db data type: character
    pub linealignmenttype:String,
    /// db data type: numeric
    pub linewidth:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub maxheight:f64,
    /// not nullable 
    /// db data type: numeric
    pub maxwidth:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub printareatype:String,
    /// not nullable 
    /// db data type: character
    pub printformattype:String,
    /// db data type: character varying
    pub printname:Option<String>,
    /// db data type: character varying
    pub printnamesuffix:Option<String>,
    /// db data type: numeric
    pub runningtotallines:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: character
    pub shapetype:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub sortno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub xposition:f64,
    /// not nullable 
    /// db data type: numeric
    pub xspace:f64,
    /// not nullable 
    /// db data type: numeric
    pub yposition:f64,
    /// not nullable 
    /// db data type: numeric
    pub yspace:f64,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_printformatchild:Option<AdPrintformat>,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one
    pub ad_printfont:Option<AdPrintfont>,
    /// has one
    pub ad_printgraph:Option<AdPrintgraph>,
    /// has many
    pub ad_printformatitem_trl:Option<Vec<AdPrintformatitemTrl>>,
    /// has many
    pub ad_printgraph:Option<Vec<AdPrintgraph>>,
}


#[derive(Debug)]
pub struct AdPrintformatitemTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printformatitem_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub printname:Option<String>,
    /// db data type: character varying
    pub printnamesuffix:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdPrintgraph {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printgraph_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printformat_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub data1_printformatitem_id:Option<f64>,
    /// db data type: numeric
    pub data2_printformatitem_id:Option<f64>,
    /// db data type: numeric
    pub data3_printformatitem_id:Option<f64>,
    /// db data type: numeric
    pub data4_printformatitem_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub data_printformatitem_id:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub description_printformatitem_id:f64,
    /// not nullable 
    /// db data type: character
    pub graphtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub description_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub data_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub data1_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub data2_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub data3_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub data4_printformatitem:Option<AdPrintformatitem>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has many
    pub ad_printformatitem:Option<Vec<AdPrintformatitem>>,
}


#[derive(Debug)]
pub struct AdPrintlabel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printlabel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_labelprinter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub islandscape:String,
    /// not nullable 
    /// db data type: numeric
    pub labelheight:f64,
    /// not nullable 
    /// db data type: numeric
    pub labelwidth:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub printername:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_labelprinter:Option<AdLabelprinter>,
    /// has many
    pub ad_printlabelline:Option<Vec<AdPrintlabelline>>,
}


#[derive(Debug)]
pub struct AdPrintlabelline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printlabelline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_labelprinterfunction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printlabel_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub labelformattype:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub printname:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub xposition:f64,
    /// not nullable 
    /// db data type: numeric
    pub yposition:f64,
    /// has one
    pub ad_printlabel:Option<AdPrintlabel>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_labelprinterfunction:Option<AdLabelprinterfunction>,
    /// has many
    pub ad_printlabelline_trl:Option<Vec<AdPrintlabellineTrl>>,
}


#[derive(Debug)]
pub struct AdPrintlabellineTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printlabelline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub printname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printlabelline:Option<AdPrintlabelline>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdPrintpaper {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printpaper_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub code:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub dimensionunits:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub islandscape:String,
    /// default: 36
    /// not nullable 
    /// db data type: numeric
    pub marginbottom:f64,
    /// default: 36
    /// not nullable 
    /// db data type: numeric
    pub marginleft:f64,
    /// default: 36
    /// not nullable 
    /// db data type: numeric
    pub marginright:f64,
    /// default: 36
    /// not nullable 
    /// db data type: numeric
    pub margintop:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub sizex:Option<f64>,
    /// db data type: numeric
    pub sizey:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
}


#[derive(Debug)]
pub struct AdPrinttableformat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_printtableformat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub footercenter:Option<String>,
    /// db data type: character varying
    pub footerleft:Option<String>,
    /// db data type: character varying
    pub footerright:Option<String>,
    /// db data type: numeric
    pub funct_printfont_id:Option<f64>,
    /// db data type: numeric
    pub functbg_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub functfg_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub hdr_printfont_id:Option<f64>,
    /// db data type: numeric
    pub hdrline_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub hdrstroke:Option<f64>,
    /// db data type: character
    pub hdrstroketype:Option<String>,
    /// db data type: numeric
    pub hdrtextbg_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub hdrtextfg_printcolor_id:Option<f64>,
    /// db data type: character varying
    pub headercenter:Option<String>,
    /// db data type: character varying
    pub headerleft:Option<String>,
    /// db data type: character varying
    pub headerright:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub imageisattached:Option<String>,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismultilineheader:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispaintboundarylines:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispaintheaderlines:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispainthlines:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispaintvlines:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprintfunctionsymbols:String,
    /// db data type: numeric
    pub line_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub linestroke:Option<f64>,
    /// db data type: character
    pub linestroketype:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hdr_printfont:Option<AdPrintfont>,
    /// has one
    pub hdrtextfg_printcolor:Option<AdPrintcolor>,
    /// has one
    pub hdrtextbg_printcolor:Option<AdPrintcolor>,
    /// has one
    pub hdrline_printcolor:Option<AdPrintcolor>,
    /// has one
    pub funct_printfont:Option<AdPrintfont>,
    /// has one
    pub functbg_printcolor:Option<AdPrintcolor>,
    /// has one
    pub functfg_printcolor:Option<AdPrintcolor>,
    /// has one
    pub line_printcolor:Option<AdPrintcolor>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
}


#[derive(Debug)]
pub struct AdPrivateAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdProcess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_browse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_reportview_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// db data type: character varying
    pub classname:Option<String>,
    /// db data type: character
    pub copyfromprocess:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbetafunctionality:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdirectprint:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreport:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isserverprocess:String,
    /// db data type: character varying
    pub jasperreport:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub procedurename:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub showhelp:Option<String>,
    /// db data type: numeric
    pub statistic_count:Option<f64>,
    /// db data type: numeric
    pub statistic_seconds:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub workflowvalue:Option<String>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_reportview:Option<AdReportview>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has many
    pub ad_archive:Option<Vec<AdArchive>>,
    /// has many
    pub ad_browse:Option<Vec<AdBrowse>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_pinstance:Option<Vec<AdPinstance>>,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
    /// has many
    pub ad_process_access:Option<Vec<AdProcessAccess>>,
    /// has many
    pub ad_process_para:Option<Vec<AdProcessPara>>,
    /// has many
    pub ad_process_trl:Option<Vec<AdProcessTrl>>,
    /// has many
    pub ad_scheduler:Option<Vec<AdScheduler>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table_process:Option<Vec<AdTableProcess>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_process:Option<Vec<AspProcess>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdProcessAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdProcessPara {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_para_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_element_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// db data type: numeric
    pub ad_reference_value_id:Option<f64>,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub columnname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub defaultvalue:Option<String>,
    /// db data type: character varying
    pub defaultvalue2:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub displaylogic:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: numeric
    pub fieldlength:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscentrallymaintained:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatory:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrange:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub readonlylogic:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub valuemax:Option<String>,
    /// db data type: character varying
    pub valuemin:Option<String>,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_reference_value:Option<AdReference>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has one
    pub ad_element:Option<AdElement>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_process_para_trl:Option<Vec<AdProcessParaTrl>>,
    /// has many
    pub ad_scheduler_para:Option<Vec<AdSchedulerPara>>,
    /// has many
    pub ad_wf_node_para:Option<Vec<AdWfNodePara>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_process_para:Option<Vec<AspProcessPara>>,
}


#[derive(Debug)]
pub struct AdProcessParaTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_para_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process_para:Option<AdProcessPara>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdProcessTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdRecordAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdependententities:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexclude:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdRefList {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ref_list_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_document_action_access:Option<Vec<AdDocumentActionAccess>>,
    /// has many
    pub ad_ref_list_trl:Option<Vec<AdRefListTrl>>,
}


#[derive(Debug)]
pub struct AdRefListTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_ref_list_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_ref_list:Option<AdRefList>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdRefTable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_display:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_key:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub displaysql:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isalert:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplayidentifier:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvaluedisplayed:String,
    /// db data type: character varying
    pub orderbyclause:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_key:Option<AdColumn>,
    /// has one
    pub ad_display:Option<AdColumn>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_window:Option<AdWindow>,
}


#[derive(Debug)]
pub struct AdReference {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isorderbyvalue:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character
    pub validationtype:String,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one, extension table
    pub ad_ref_table:Option<Box<AdRefTable>>,
    /// has many
    pub a_registrationattribute:Option<Vec<ARegistrationattribute>>,
    /// has many
    pub ad_attribute:Option<Vec<AdAttribute>>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_element:Option<Vec<AdElement>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_infocolumn:Option<Vec<AdInfocolumn>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_package_imp_backup:Option<Vec<AdPackageImpBackup>>,
    /// has many
    pub ad_process_para:Option<Vec<AdProcessPara>>,
    /// has many
    pub ad_ref_list:Option<Vec<AdRefList>>,
    /// has many
    pub ad_reference_trl:Option<Vec<AdReferenceTrl>>,
    /// has many
    pub ad_relationtype:Option<Vec<AdRelationtype>>,
    /// has many
    pub hr_concept:Option<Vec<HrConcept>>,
}


#[derive(Debug)]
pub struct AdReferenceTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_reference_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub istranslated:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdRegistration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_registration_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_system_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub industryinfo:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallowpublish:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallowstatistics:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinproduction:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isregistered:String,
    /// default: 0
    /// db data type: numeric
    pub numberemployees:Option<f64>,
    /// db data type: character varying
    pub platforminfo:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub salesvolume:Option<f64>,
    /// db data type: timestamp without time zone
    pub startproductiondate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdSystem>,
    /// has one
    pub ad_system:Option<AdSystem>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct AdRelationtype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_relationtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_reference_source_id:Option<f64>,
    /// db data type: numeric
    pub ad_reference_target_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdirected:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub role_source:Option<String>,
    /// db data type: character varying
    pub role_target:Option<String>,
    /// default: 'I'::bpchar
    /// not nullable 
    /// db data type: character
    pub type_:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_reference_source:Option<AdReference>,
    /// has one
    pub ad_reference_target:Option<AdReference>,
}


#[derive(Debug)]
pub struct AdReplication {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replication_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationstrategy_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub hostaddress:String,
    /// not nullable 
    /// db data type: numeric
    pub hostport:f64,
    /// db data type: numeric
    pub idrangeend:Option<f64>,
    /// db data type: numeric
    pub idrangestart:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrmioverhttp:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub prefix:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub remote_client_id:Option<f64>,
    /// db data type: numeric
    pub remote_org_id:Option<f64>,
    /// db data type: character varying
    pub suffix:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_replicationstrategy:Option<AdReplicationstrategy>,
    /// has one
    pub remote_client:Option<AdClient>,
    /// has one
    pub remote_org:Option<AdOrg>,
    /// has many
    pub ad_replication_run:Option<Vec<AdReplicationRun>>,
}


#[derive(Debug)]
pub struct AdReplicationLog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replication_log_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_replication_run_id:f64,
    /// db data type: numeric
    pub ad_replicationtable_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreplicated:String,
    /// db data type: character varying
    pub p_msg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_replication_run:Option<AdReplicationRun>,
    /// has one
    pub ad_replicationtable:Option<AdReplicationtable>,
}


#[derive(Debug)]
pub struct AdReplicationRun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replication_run_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_replication_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreplicated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_replication:Option<AdReplication>,
    /// has many
    pub ad_replication_log:Option<Vec<AdReplicationLog>>,
}


#[derive(Debug)]
pub struct AdReplicationdocument {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationdocument_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationstrategy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub replicationtype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdReplicationstrategy {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationstrategy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: numeric
    pub exp_processor_id:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub exp_processor:Option<ExpProcessor>,
    /// has many
    pub ad_client:Option<Vec<AdClient>>,
    /// has many
    pub ad_org:Option<Vec<AdOrg>>,
    /// has many
    pub ad_replication:Option<Vec<AdReplication>>,
    /// has many
    pub ad_replicationtable:Option<Vec<AdReplicationtable>>,
}


#[derive(Debug)]
pub struct AdReplicationtable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationtable_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_replicationstrategy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'L'::bpchar
    /// not nullable 
    /// db data type: character
    pub replicationtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_replicationstrategy:Option<AdReplicationstrategy>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_replication_log:Option<Vec<AdReplicationLog>>,
}


#[derive(Debug)]
pub struct AdReportview {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_reportview_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub orderbyclause:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
    /// has many
    pub ad_process:Option<Vec<AdProcess>>,
    /// has many
    pub ad_reportview_col:Option<Vec<AdReportviewCol>>,
}


#[derive(Debug)]
pub struct AdReportviewCol {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_reportview_col_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_reportview_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub functioncolumn:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isgroupfunction:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_reportview:Option<AdReportview>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdRole {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_tree_menu_id:Option<f64>,
    /// db data type: numeric
    pub ad_tree_org_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_account:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_asset:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_bpartner:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_cashjournal:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_crp:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_inout:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_invoice:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_mrp:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_order:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_payment:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_product:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_resource:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub allow_info_schedule:String,
    /// default: 0
    /// db data type: numeric
    pub amtapproval:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub confirmqueryrecords:f64,
    /// db data type: character
    pub connectionprofile:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaccessallorgs:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscanapproveowndoc:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscanexport:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscanreport:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ischangelog:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountallowedontotal:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountuptolimitprice:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispersonalaccess:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispersonallock:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshowacct:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isuseuserorgaccess:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub maxqueryrecords:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritepricelimit:String,
    /// default: 'C'::bpchar
    /// not nullable 
    /// db data type: character
    pub preferencetype:String,
    /// db data type: numeric
    pub supervisor_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub userdiscount:Option<f64>,
    /// default: '  O'::bpchar
    /// not nullable 
    /// db data type: character
    pub userlevel:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub ad_tree_menu:Option<AdTree>,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub ad_tree_org:Option<AdTree>,
    /// has one, extension table
    pub ad_role_included:Option<Box<AdRoleIncluded>>,
    /// has one, extension table
    pub ad_role_included:Option<Box<AdRoleIncluded>>,
    /// has many
    pub ad_alertrecipient:Option<Vec<AdAlertrecipient>>,
    /// has many
    pub ad_browse_access:Option<Vec<AdBrowseAccess>>,
    /// has many
    pub ad_column_access:Option<Vec<AdColumnAccess>>,
    /// has many
    pub ad_document_action_access:Option<Vec<AdDocumentActionAccess>>,
    /// has many
    pub ad_form_access:Option<Vec<AdFormAccess>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_process_access:Option<Vec<AdProcessAccess>>,
    /// has many
    pub ad_record_access:Option<Vec<AdRecordAccess>>,
    /// has many
    pub ad_role_orgaccess:Option<Vec<AdRoleOrgaccess>>,
    /// has many
    pub ad_schedulerrecipient:Option<Vec<AdSchedulerrecipient>>,
    /// has many
    pub ad_session:Option<Vec<AdSession>>,
    /// has many
    pub ad_table_access:Option<Vec<AdTableAccess>>,
    /// has many
    pub ad_task_access:Option<Vec<AdTaskAccess>>,
    /// has many
    pub ad_user_roles:Option<Vec<AdUserRoles>>,
    /// has many
    pub ad_userdef_win:Option<Vec<AdUserdefWin>>,
    /// has many
    pub ad_wf_responsible:Option<Vec<AdWfResponsible>>,
    /// has many
    pub ad_window_access:Option<Vec<AdWindowAccess>>,
    /// has many
    pub ad_workflow_access:Option<Vec<AdWorkflowAccess>>,
    /// has many
    pub cm_accesslistrole:Option<Vec<CmAccesslistrole>>,
    /// has many
    pub pa_goal:Option<Vec<PaGoal>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub u_rolemenu:Option<Vec<URolemenu>>,
}


#[derive(Debug)]
pub struct AdRoleIncluded {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub included_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub included_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct AdRoleOrgaccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdRule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_rule_id:f64,
    /// db data type: character
    pub accesslevel:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'U'::character varying
    /// db data type: character varying
    pub entitytype:Option<String>,
    /// db data type: character
    pub eventtype:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub ruletype:Option<String>,
    /// db data type: character varying
    pub script:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_table_scriptvalidator:Option<Vec<AdTableScriptvalidator>>,
    /// has many
    pub c_tax:Option<Vec<CTax>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_payrollconcept:Option<Vec<HrPayrollconcept>>,
    /// has many
    pub pp_forecastrule:Option<Vec<PpForecastrule>>,
    /// has many
    pub wm_rule:Option<Vec<WmRule>>,
}


#[derive(Debug)]
pub struct AdScheduler {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_scheduler_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub cronpattern:Option<String>,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isignoreprocessingtime:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// db data type: numeric
    pub monthday:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: 'F'::bpchar
    /// not nullable 
    /// db data type: character
    pub scheduletype:String,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character
    pub weekday:Option<String>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one, extension table
    pub ad_schedulerlog:Option<Box<AdSchedulerlog>>,
    /// has many
    pub ad_scheduler_para:Option<Vec<AdSchedulerPara>>,
    /// has many
    pub ad_schedulerrecipient:Option<Vec<AdSchedulerrecipient>>,
}


#[derive(Debug)]
pub struct AdSchedulerPara {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_para_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_scheduler_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub parameterdefault:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_scheduler:Option<AdScheduler>,
    /// has one
    pub ad_process_para:Option<AdProcessPara>,
}


#[derive(Debug)]
pub struct AdSchedulerlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_scheduler_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_schedulerlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_scheduler:Option<AdScheduler>,
}


#[derive(Debug)]
pub struct AdSchedulerrecipient {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_schedulerrecipient_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_scheduler_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_scheduler:Option<AdScheduler>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct AdSearchdefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_searchdefinition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub datatype:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub po_window_id:Option<f64>,
    /// db data type: character varying
    pub query:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub searchtype:String,
    /// db data type: character varying
    pub transactioncode:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub po_window:Option<AdWindow>,
}


#[derive(Debug)]
pub struct AdSequence {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_sequence_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnext:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnextsys:f64,
    /// db data type: character varying
    pub datecolumn:Option<String>,
    /// db data type: character varying
    pub decimalpattern:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub incrementno:f64,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isaudited:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isautosequence:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub istableid:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub prefix:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub startnewyear:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub startno:f64,
    /// db data type: character varying
    pub suffix:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one, extension table
    pub ad_sequence_audit:Option<Box<AdSequenceAudit>>,
    /// has one, extension table
    pub ad_sequence_no:Option<Box<AdSequenceNo>>,
    /// has many
    pub c_bp_edi:Option<Vec<CBpEdi>>,
    /// has many
    pub c_doctype:Option<Vec<CDoctype>>,
    /// has many
    pub c_paymentprocessor:Option<Vec<CPaymentprocessor>>,
}


#[derive(Debug)]
pub struct AdSequenceAudit {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_sequence_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_sequence:Option<AdSequence>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdSequenceNo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_sequence_id:f64,
    /// primary
    /// default: '0000'::character varying
    /// not nullable 
    /// db data type: character varying
    pub calendaryear:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnext:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_sequence:Option<AdSequence>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdSession {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_session_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: timestamp without time zone
    pub logindate:Option<NaiveDateTime>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub websession:Option<String>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has many
    pub ad_changelog:Option<Vec<AdChangelog>>,
    /// has many
    pub k_comment:Option<Vec<KComment>>,
    /// has many
    pub k_entry:Option<Vec<KEntry>>,
}


#[derive(Debug)]
pub struct AdSysconfig {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_sysconfig_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'S'::bpchar
    /// db data type: character
    pub configurationlevel:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdSystem {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_system_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub customprefix:Option<String>,
    /// db data type: character varying
    pub dbaddress:Option<String>,
    /// db data type: character varying
    pub dbinstance:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub encryptionkey:Option<String>,
    /// db data type: numeric
    pub idrangeend:Option<f64>,
    /// db data type: numeric
    pub idrangestart:Option<f64>,
    /// db data type: character varying
    pub info:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallowstatistics:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isautoerrorreport:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfailonbuilddiffer:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfailonmissingmodelvalidator:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isjustmigrated:Option<String>,
    /// db data type: character varying
    pub lastbuildinfo:Option<String>,
    /// db data type: character varying
    pub ldapdomain:Option<String>,
    /// db data type: character varying
    pub ldaphost:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub noprocessors:Option<f64>,
    /// db data type: character varying
    pub oldname:Option<String>,
    /// db data type: character varying
    pub password:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub profileinfo:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// db data type: character varying
    pub releaseno:Option<String>,
    /// default: 'L'::bpchar
    /// not nullable 
    /// db data type: character
    pub replicationtype:String,
    /// db data type: character varying
    pub statisticsinfo:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub supportemail:Option<String>,
    /// db data type: timestamp without time zone
    pub supportexpdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub supportunits:Option<f64>,
    /// default: 'E'::bpchar
    /// not nullable 
    /// db data type: character
    pub systemstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub username:String,
    /// db data type: character varying
    pub version:Option<String>,
    /// has one, extension table
    pub ad_registration:Option<Box<AdRegistration>>,
    /// has one, extension table
    pub ad_registration:Option<Box<AdRegistration>>,
}


#[derive(Debug)]
pub struct AdTab {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tab_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// db data type: numeric
    pub ad_columnsortorder_id:Option<f64>,
    /// db data type: numeric
    pub ad_columnsortyesno_id:Option<f64>,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// db data type: character varying
    pub commitwarning:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub displaylogic:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub hastree:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character
    pub importfields:Option<String>,
    /// db data type: numeric
    pub included_tab_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isadvancedtab:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isinfotab:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinsertrecord:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issinglerow:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issorttab:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslationtab:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub orderbyclause:Option<String>,
    /// db data type: numeric
    pub parent_column_id:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub readonlylogic:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: numeric
    pub tablevel:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_columnsortorder:Option<AdColumn>,
    /// has one
    pub ad_columnsortyesno:Option<AdColumn>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one, self referential
    pub included_tab:Option<Box<AdTab>>,
    /// has one
    pub parent_column:Option<AdColumn>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_tab_trl:Option<Vec<AdTabTrl>>,
    /// has many
    pub ad_userdef_tab:Option<Vec<AdUserdefTab>>,
    /// has many
    pub ad_userquery:Option<Vec<AdUserquery>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_tab:Option<Vec<AspTab>>,
    /// has many
    pub pa_dashboardcontent:Option<Vec<PaDashboardcontent>>,
}


#[derive(Debug)]
pub struct AdTabTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tab_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub commitwarning:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tab:Option<AdTab>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdTable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// default: (0)::numeric
    /// db data type: numeric
    pub actriggerlength:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_val_rule_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: character varying
    pub copycolumnsfromtable:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character
    pub importtable:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub iscentrallymaintained:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ischangelog:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdeleteable:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ishighvolume:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issecurityenabled:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isview:String,
    /// db data type: numeric
    pub loadseq:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub po_window_id:Option<f64>,
    /// default: 'L'::bpchar
    /// not nullable 
    /// db data type: character
    pub replicationtype:String,
    /// not nullable 
    /// db data type: character varying
    pub tablename:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_val_rule:Option<AdValRule>,
    /// has one
    pub po_window:Option<AdWindow>,
    /// has many
    pub ad_accesslog:Option<Vec<AdAccesslog>>,
    /// has many
    pub ad_alertrule:Option<Vec<AdAlertrule>>,
    /// has many
    pub ad_archive:Option<Vec<AdArchive>>,
    /// has many
    pub ad_attachment:Option<Vec<AdAttachment>>,
    /// has many
    pub ad_attribute:Option<Vec<AdAttribute>>,
    /// has many
    pub ad_changelog:Option<Vec<AdChangelog>>,
    /// has many
    pub ad_chartdatasource:Option<Vec<AdChartdatasource>>,
    /// has many
    pub ad_clientshare:Option<Vec<AdClientshare>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_column_access:Option<Vec<AdColumnAccess>>,
    /// has many
    pub ad_housekeeping:Option<Vec<AdHousekeeping>>,
    /// has many
    pub ad_impformat:Option<Vec<AdImpformat>>,
    /// has many
    pub ad_infowindow:Option<Vec<AdInfowindow>>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub ad_migrationstep:Option<Vec<AdMigrationstep>>,
    /// has many
    pub ad_note:Option<Vec<AdNote>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_printformat:Option<Vec<AdPrintformat>>,
    /// has many
    pub ad_printlabel:Option<Vec<AdPrintlabel>>,
    /// has many
    pub ad_private_access:Option<Vec<AdPrivateAccess>>,
    /// has many
    pub ad_record_access:Option<Vec<AdRecordAccess>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_replicationdocument:Option<Vec<AdReplicationdocument>>,
    /// has many
    pub ad_replicationtable:Option<Vec<AdReplicationtable>>,
    /// has many
    pub ad_reportview:Option<Vec<AdReportview>>,
    /// has many
    pub ad_scheduler:Option<Vec<AdScheduler>>,
    /// has many
    pub ad_searchdefinition:Option<Vec<AdSearchdefinition>>,
    /// has many
    pub ad_sequence_audit:Option<Vec<AdSequenceAudit>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table_access:Option<Vec<AdTableAccess>>,
    /// has many
    pub ad_table_process:Option<Vec<AdTableProcess>>,
    /// has many
    pub ad_table_scriptvalidator:Option<Vec<AdTableScriptvalidator>>,
    /// has many
    pub ad_table_trl:Option<Vec<AdTableTrl>>,
    /// has many
    pub ad_userquery:Option<Vec<AdUserquery>>,
    /// has many
    pub ad_view_definition:Option<Vec<AdViewDefinition>>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_eventaudit:Option<Vec<AdWfEventaudit>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub c_acctprocessor:Option<Vec<CAcctprocessor>>,
    /// has many
    pub cm_chat:Option<Vec<CmChat>>,
    /// has many
    pub cm_chattype:Option<Vec<CmChattype>>,
    /// has many
    pub cm_templatetable:Option<Vec<CmTemplatetable>>,
    /// has many
    pub cm_wikitoken:Option<Vec<CmWikitoken>>,
    /// has many
    pub exp_format:Option<Vec<ExpFormat>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub k_index:Option<Vec<KIndex>>,
    /// has many
    pub m_attributesetexclude:Option<Vec<MAttributesetexclude>>,
    /// has many
    pub m_lotctlexclude:Option<Vec<MLotctlexclude>>,
    /// has many
    pub m_sernoctlexclude:Option<Vec<MSernoctlexclude>>,
    /// has many
    pub pa_measurecalc:Option<Vec<PaMeasurecalc>>,
    /// has many
    pub pa_sla_measure:Option<Vec<PaSlaMeasure>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
}


#[derive(Debug)]
pub struct AdTableAccess {
    /// primary
    /// default: 'G'::bpchar
    /// not nullable 
    /// db data type: character
    pub accesstyperule:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscanexport:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscanreport:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexclude:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdTableProcess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp with time zone
    pub created:DateTime<UTC>,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp with time zone
    pub updated:DateTime<UTC>,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdTableScriptvalidator {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_scriptvalidator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_rule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub eventmodelvalidator:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct AdTableTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdTask {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_task_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isserverprocess:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub os_command:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_task_access:Option<Vec<AdTaskAccess>>,
    /// has many
    pub ad_task_trl:Option<Vec<AdTaskTrl>>,
    /// has many
    pub ad_taskinstance:Option<Vec<AdTaskinstance>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_task:Option<Vec<AspTask>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdTaskAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_task_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdTaskTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_task_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdTaskinstance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_taskinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_task_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_task:Option<AdTask>,
}


#[derive(Debug)]
pub struct AdTree {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallnodes:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: character
    pub treetype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one, extension table
    pub ad_treenode:Option<Box<AdTreenode>>,
    /// has one, extension table
    pub ad_treenodebp:Option<Box<AdTreenodebp>>,
    /// has one, extension table
    pub ad_treenodecmc:Option<Box<AdTreenodecmc>>,
    /// has one, extension table
    pub ad_treenodecmm:Option<Box<AdTreenodecmm>>,
    /// has one, extension table
    pub ad_treenodecms:Option<Box<AdTreenodecms>>,
    /// has one, extension table
    pub ad_treenodecmt:Option<Box<AdTreenodecmt>>,
    /// has one, extension table
    pub ad_treenodemm:Option<Box<AdTreenodemm>>,
    /// has one, extension table
    pub ad_treenodepr:Option<Box<AdTreenodepr>>,
    /// has one, extension table
    pub ad_treenodeu1:Option<Box<AdTreenodeu1>>,
    /// has one, extension table
    pub ad_treenodeu2:Option<Box<AdTreenodeu2>>,
    /// has one, extension table
    pub ad_treenodeu3:Option<Box<AdTreenodeu3>>,
    /// has one, extension table
    pub ad_treenodeu4:Option<Box<AdTreenodeu4>>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub ad_role:Option<Vec<AdRole>>,
    /// has many
    pub ad_treebar:Option<Vec<AdTreebar>>,
    /// has many
    pub c_element:Option<Vec<CElement>>,
    /// has many
    pub cm_webproject:Option<Vec<CmWebproject>>,
    /// has many
    pub pa_hierarchy:Option<Vec<PaHierarchy>>,
}


#[derive(Debug)]
pub struct AdTreebar {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct AdTreenode {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub parent_id:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodebp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub parent_id:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodecmc {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodecmm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodecms {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodecmt {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodemm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub parent_id:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodepr {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub parent_id:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodeu1 {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodeu2 {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodeu3 {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdTreenodeu4 {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub parent_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree:Option<AdTree>,
}


#[derive(Debug)]
pub struct AdUser {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub birthday:Option<NaiveDateTime>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub bp_location_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpname:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_greeting_id:Option<f64>,
    /// db data type: numeric
    pub c_job_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: character varying
    pub comments:Option<String>,
    /// db data type: character
    pub connectionprofile:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character varying
    pub emailuser:Option<String>,
    /// db data type: character varying
    pub emailuserpw:Option<String>,
    /// db data type: character varying
    pub emailverify:Option<String>,
    /// db data type: timestamp without time zone
    pub emailverifydate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub fax:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfullbpaccess:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinpayroll:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issaleslead:String,
    /// db data type: timestamp without time zone
    pub lastcontact:Option<NaiveDateTime>,
    /// db data type: character varying
    pub lastresult:Option<String>,
    /// db data type: character varying
    pub ldapuser:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub leadsource:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub leadsourcedescription:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub leadstatus:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub leadstatusdescription:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'E'::bpchar
    /// not nullable 
    /// db data type: character
    pub notificationtype:String,
    /// db data type: character varying
    pub password:Option<String>,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub phone2:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub salt:Option<String>,
    /// db data type: numeric
    pub supervisor_id:Option<f64>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub userpin:Option<String>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one, self referential
    pub supervisor:Option<Box<AdUser>>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_greeting:Option<CGreeting>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_job:Option<CJob>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one, self referential
    pub salesrep:Option<Box<AdUser>>,
    /// has one, extension table
    pub b_buyer:Option<Box<BBuyer>>,
    /// has one, extension table
    pub b_seller:Option<Box<BSeller>>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub a_asset_delivery:Option<Vec<AAssetDelivery>>,
    /// has many
    pub a_registration:Option<Vec<ARegistration>>,
    /// has many
    pub ad_alertprocessor:Option<Vec<AdAlertprocessor>>,
    /// has many
    pub ad_alertrecipient:Option<Vec<AdAlertrecipient>>,
    /// has many
    pub ad_attachmentnote:Option<Vec<AdAttachmentnote>>,
    /// has many
    pub ad_ldapaccess:Option<Vec<AdLdapaccess>>,
    /// has many
    pub ad_ldapprocessor:Option<Vec<AdLdapprocessor>>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub ad_note:Option<Vec<AdNote>>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub ad_pinstance:Option<Vec<AdPinstance>>,
    /// has many
    pub ad_preference:Option<Vec<AdPreference>>,
    /// has many
    pub ad_private_access:Option<Vec<AdPrivateAccess>>,
    /// has many
    pub ad_role:Option<Vec<AdRole>>,
    /// has many
    pub ad_scheduler:Option<Vec<AdScheduler>>,
    /// has many
    pub ad_schedulerrecipient:Option<Vec<AdSchedulerrecipient>>,
    /// has many
    pub ad_treebar:Option<Vec<AdTreebar>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub ad_user_orgaccess:Option<Vec<AdUserOrgaccess>>,
    /// has many
    pub ad_user_roles:Option<Vec<AdUserRoles>>,
    /// has many
    pub ad_user_substitute:Option<Vec<AdUserSubstitute>>,
    /// has many
    pub ad_userbpaccess:Option<Vec<AdUserbpaccess>>,
    /// has many
    pub ad_userdef_win:Option<Vec<AdUserdefWin>>,
    /// has many
    pub ad_usermail:Option<Vec<AdUsermail>>,
    /// has many
    pub ad_userquery:Option<Vec<AdUserquery>>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_eventaudit:Option<Vec<AdWfEventaudit>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_wf_responsible:Option<Vec<AdWfResponsible>>,
    /// has many
    pub ad_workflowprocessor:Option<Vec<AdWorkflowprocessor>>,
    /// has many
    pub b_bid:Option<Vec<BBid>>,
    /// has many
    pub b_bidcomment:Option<Vec<BBidcomment>>,
    /// has many
    pub b_buyerfunds:Option<Vec<BBuyerfunds>>,
    /// has many
    pub b_offer:Option<Vec<BOffer>>,
    /// has many
    pub b_sellerfunds:Option<Vec<BSellerfunds>>,
    /// has many
    pub c_acctprocessor:Option<Vec<CAcctprocessor>>,
    /// has many
    pub c_bp_bankaccount:Option<Vec<CBpBankaccount>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_contactactivity:Option<Vec<CContactactivity>>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatch:Option<Vec<CInvoicebatch>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_jobassignment:Option<Vec<CJobassignment>>,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_ordersource:Option<Vec<COrdersource>>,
    /// has many
    pub c_orgassignment:Option<Vec<COrgassignment>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfq_topicsubscriber:Option<Vec<CRfqTopicsubscriber>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_salesregion:Option<Vec<CSalesregion>>,
    /// has many
    pub c_userremuneration:Option<Vec<CUserremuneration>>,
    /// has many
    pub cm_chatentry:Option<Vec<CmChatentry>>,
    /// has many
    pub cm_chattypeupdate:Option<Vec<CmChattypeupdate>>,
    /// has many
    pub cm_chatupdate:Option<Vec<CmChatupdate>>,
    /// has many
    pub cm_webaccesslog:Option<Vec<CmWebaccesslog>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_job:Option<Vec<HrJob>>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
    /// has many
    pub hr_jobopeninghistory:Option<Vec<HrJobopeninghistory>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_forecast:Option<Vec<IForecast>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_requisition:Option<Vec<MRequisition>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub pa_goal:Option<Vec<PaGoal>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub r_categoryupdates:Option<Vec<RCategoryupdates>>,
    /// has many
    pub r_contactinterest:Option<Vec<RContactinterest>>,
    /// has many
    pub r_groupupdates:Option<Vec<RGroupupdates>>,
    /// has many
    pub r_issueuser:Option<Vec<RIssueuser>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub r_requestprocessor:Option<Vec<RRequestprocessor>>,
    /// has many
    pub r_requestprocessor_route:Option<Vec<RRequestprocessorRoute>>,
    /// has many
    pub r_requesttypeupdates:Option<Vec<RRequesttypeupdates>>,
    /// has many
    pub r_requestupdates:Option<Vec<RRequestupdates>>,
    /// has many
    pub s_resource:Option<Vec<SResource>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
    /// has many
    pub w_advertisement:Option<Vec<WAdvertisement>>,
    /// has many
    pub w_basket:Option<Vec<WBasket>>,
    /// has many
    pub w_click:Option<Vec<WClick>>,
    /// has many
    pub w_counter:Option<Vec<WCounter>>,
    /// has many
    pub w_store:Option<Vec<WStore>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
}


#[derive(Debug)]
pub struct AdUserOrgaccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdUserRoles {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdUserSubstitute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_substitute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub substitute_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub substitute:Option<AdUser>,
}


#[derive(Debug)]
pub struct AdUserbpaccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_userbpaccess_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: character
    pub bpaccesstype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub docbasetype:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
}


#[derive(Debug)]
pub struct AdUserdefField {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_userdef_field_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_field_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_userdef_tab_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub defaultvalue:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub displaylength:f64,
    /// not nullable 
    /// db data type: character varying
    pub displaylogic:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdisplayed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issameline:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isupdateable:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub sortno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_userdef_tab:Option<AdUserdefTab>,
    /// has one
    pub ad_field:Option<AdField>,
}


#[derive(Debug)]
pub struct AdUserdefTab {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_userdef_tab_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tab_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_userdef_win_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismultirowonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issinglerow:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_userdef_win:Option<AdUserdefWin>,
    /// has one
    pub ad_tab:Option<AdTab>,
    /// has many
    pub ad_userdef_field:Option<Vec<AdUserdefField>>,
}


#[derive(Debug)]
pub struct AdUserdefWin {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_userdef_win_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadonly:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isuserupdateable:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has many
    pub ad_userdef_tab:Option<Vec<AdUserdefTab>>,
}


#[derive(Debug)]
pub struct AdUsermail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_usermail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub deliveryconfirmation:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdelivered:Option<String>,
    /// db data type: character varying
    pub mailtext:Option<String>,
    /// db data type: character varying
    pub messageid:Option<String>,
    /// db data type: numeric
    pub r_mailtext_id:Option<f64>,
    /// db data type: character varying
    pub subject:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub w_mailmsg_id:Option<f64>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub w_mailmsg:Option<WMailmsg>,
}


#[derive(Debug)]
pub struct AdUserquery {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_userquery_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_tab_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub code:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_tab:Option<AdTab>,
}


#[derive(Debug)]
pub struct AdValRule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_val_rule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub code:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub type_:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_attribute:Option<Vec<AdAttribute>>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_column:Option<Vec<AdColumn>>,
    /// has many
    pub ad_field:Option<Vec<AdField>>,
    /// has many
    pub ad_process_para:Option<Vec<AdProcessPara>>,
    /// has many
    pub ad_table:Option<Vec<AdTable>>,
}


#[derive(Debug)]
pub struct AdView {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_view_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub ad_browse:Option<Vec<AdBrowse>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_view_column:Option<Vec<AdViewColumn>>,
    /// has many
    pub ad_view_definition:Option<Vec<AdViewDefinition>>,
    /// has many
    pub ad_view_trl:Option<Vec<AdViewTrl>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
}


#[derive(Debug)]
pub struct AdViewColumn {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_view_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub ad_view_definition_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_view_id:Option<f64>,
    /// db data type: character varying
    pub columnname:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub columnsql:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_view_definition:Option<AdViewDefinition>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has many
    pub ad_browse_field:Option<Vec<AdBrowseField>>,
    /// has many
    pub ad_view_column_trl:Option<Vec<AdViewColumnTrl>>,
}


#[derive(Debug)]
pub struct AdViewColumnTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_view_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_view_column:Option<AdViewColumn>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdViewDefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_view_definition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub ad_view_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub joinclause:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub tablealias:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub ad_view_column:Option<Vec<AdViewColumn>>,
}


#[derive(Debug)]
pub struct AdViewTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_view_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdWfActivity {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_activity_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_message_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_process_id:f64,
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastalert:Option<NaiveDateTime>,
    /// db data type: numeric
    pub dynprioritystart:Option<f64>,
    /// db data type: timestamp without time zone
    pub endwaittime:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub priority:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character
    pub wfstate:String,
    /// has one
    pub ad_wf_process:Option<AdWfProcess>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_message:Option<AdMessage>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub ad_note:Option<Vec<AdNote>>,
    /// has many
    pub ad_wf_activityresult:Option<Vec<AdWfActivityresult>>,
}


#[derive(Debug)]
pub struct AdWfActivityresult {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_activityresult_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_activity_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub attributename:String,
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_wf_activity:Option<AdWfActivity>,
}


#[derive(Debug)]
pub struct AdWfBlock {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_block_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdWfEventaudit {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_eventaudit_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_responsible_id:f64,
    /// db data type: character varying
    pub attributename:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub elapsedtimems:f64,
    /// not nullable 
    /// db data type: character
    pub eventtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub newvalue:Option<String>,
    /// db data type: character varying
    pub oldvalue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character
    pub wfstate:String,
    /// has one
    pub ad_wf_process:Option<AdWfProcess>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct AdWfNextcondition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_nextcondition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_nodenext_id:f64,
    /// not nullable 
    /// db data type: character
    pub andor:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub operation:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub value2:Option<String>,
    /// has one
    pub ad_wf_nodenext:Option<AdWfNodenext>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct AdWfNode {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// not nullable 
    /// db data type: character
    pub action:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_browse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_view_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_block_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// db data type: character varying
    pub attributename:Option<String>,
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub cost:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub docaction:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub duration:f64,
    /// db data type: numeric
    pub dynprioritychange:Option<f64>,
    /// db data type: character
    pub dynpriorityunit:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character
    pub emailrecipient:Option<String>,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character
    pub finishmode:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscentrallymaintained:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismilestone:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// not nullable 
    /// db data type: character
    pub joinelement:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub limit:f64,
    /// db data type: numeric
    pub movingtime:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub overlapunits:Option<f64>,
    /// db data type: numeric
    pub priority:Option<f64>,
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// db data type: numeric
    pub r_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub splitelement:String,
    /// db data type: character
    pub startmode:Option<String>,
    /// db data type: character
    pub subflowexecution:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub unitscycles:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub waitingtime:f64,
    /// db data type: numeric
    pub waittime:Option<f64>,
    /// db data type: numeric
    pub workflow_id:Option<f64>,
    /// db data type: numeric
    pub workingtime:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub xposition:f64,
    /// default: 100
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub yposition:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub workflow:Option<AdWorkflow>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_wf_block:Option<AdWfBlock>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub ad_view:Option<AdView>,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_eventaudit:Option<Vec<AdWfEventaudit>>,
    /// has many
    pub ad_wf_node_para:Option<Vec<AdWfNodePara>>,
    /// has many
    pub ad_wf_node_trl:Option<Vec<AdWfNodeTrl>>,
    /// has many
    pub ad_wf_nodenext:Option<Vec<AdWfNodenext>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_nodenext:Option<Vec<PpOrderNodenext>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
    /// has many
    pub pp_wf_node_asset:Option<Vec<PpWfNodeAsset>>,
    /// has many
    pub pp_wf_node_product:Option<Vec<PpWfNodeProduct>>,
}


#[derive(Debug)]
pub struct AdWfNodePara {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_para_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_para_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// db data type: character varying
    pub attributename:Option<String>,
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_process_para:Option<AdProcessPara>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdWfNodeTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
}


#[derive(Debug)]
pub struct AdWfNodenext {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_nodenext_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_next_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isstduserworkflow:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: character varying
    pub transitioncode:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_wf_next:Option<AdWfNode>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_wf_nextcondition:Option<Vec<AdWfNextcondition>>,
}


#[derive(Debug)]
pub struct AdWfProcess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_message_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_responsible_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub priority:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character
    pub wfstate:String,
    /// has one, self referential
    pub ad_wf_process:Option<Box<AdWfProcess>>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_message:Option<AdMessage>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one, extension table
    pub ad_wf_process:Option<Box<AdWfProcess>>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_eventaudit:Option<Vec<AdWfEventaudit>>,
    /// has many
    pub ad_wf_processdata:Option<Vec<AdWfProcessdata>>,
}


#[derive(Debug)]
pub struct AdWfProcessdata {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_processdata_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_process_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub attributename:String,
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_wf_process:Option<AdWfProcess>,
}


#[derive(Debug)]
pub struct AdWfResponsible {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_responsible_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub responsibletype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_eventaudit:Option<Vec<AdWfEventaudit>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
}


#[derive(Debug)]
pub struct AdWindow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_color_id:Option<f64>,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbetafunctionality:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character
    pub windowtype:Option<String>,
    /// db data type: numeric
    pub winheight:Option<f64>,
    /// db data type: numeric
    pub winwidth:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_color:Option<AdColor>,
    /// has many
    pub ad_browse:Option<Vec<AdBrowse>>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_preference:Option<Vec<AdPreference>>,
    /// has many
    pub ad_ref_table:Option<Vec<AdRefTable>>,
    /// has many
    pub ad_searchdefinition:Option<Vec<AdSearchdefinition>>,
    /// has many
    pub ad_tab:Option<Vec<AdTab>>,
    /// has many
    pub ad_table:Option<Vec<AdTable>>,
    /// has many
    pub ad_userdef_win:Option<Vec<AdUserdefWin>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_window_access:Option<Vec<AdWindowAccess>>,
    /// has many
    pub ad_window_trl:Option<Vec<AdWindowTrl>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_window:Option<Vec<AspWindow>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pa_dashboardcontent:Option<Vec<PaDashboardcontent>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
}


#[derive(Debug)]
pub struct AdWindowAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdWindowTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdWorkbench {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workbench_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_color_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_column_id:f64,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_color:Option<AdColor>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub ad_desktopworkbench:Option<Vec<AdDesktopworkbench>>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_workbench_trl:Option<Vec<AdWorkbenchTrl>>,
    /// has many
    pub ad_workbenchwindow:Option<Vec<AdWorkbenchwindow>>,
}


#[derive(Debug)]
pub struct AdWorkbenchTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workbench_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdWorkbenchwindow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workbenchwindow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workbench_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprimary:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workbench:Option<AdWorkbench>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
}


#[derive(Debug)]
pub struct AdWorkflow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_node_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflowprocessor_id:Option<f64>,
    /// default: 'ComPiere'::character varying
    /// not nullable 
    /// db data type: character varying
    pub author:String,
    /// not nullable 
    /// db data type: numeric
    pub cost:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub docvaluelogic:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub duration:f64,
    /// db data type: character
    pub durationunit:Option<String>,
    /// default: 'D'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbetafunctionality:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// db data type: numeric
    pub limit:Option<f64>,
    /// db data type: numeric
    pub movingtime:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub overlapunits:Option<f64>,
    /// db data type: numeric
    pub priority:Option<f64>,
    /// db data type: character
    pub processtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub publishstatus:String,
    /// default: 1
    /// db data type: numeric
    pub qtybatchsize:Option<f64>,
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// db data type: numeric
    pub unitscycles:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character
    pub validateworkflow:Option<String>,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub version:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub waitingtime:f64,
    /// default: 'G'::bpchar
    /// not nullable 
    /// db data type: character
    pub workflowtype:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub workingtime:f64,
    /// default: 100
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_workflowprocessor:Option<AdWorkflowprocessor>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has many
    pub ad_menu:Option<Vec<AdMenu>>,
    /// has many
    pub ad_package_exp_common:Option<Vec<AdPackageExpCommon>>,
    /// has many
    pub ad_package_exp_detail:Option<Vec<AdPackageExpDetail>>,
    /// has many
    pub ad_process:Option<Vec<AdProcess>>,
    /// has many
    pub ad_wf_activity:Option<Vec<AdWfActivity>>,
    /// has many
    pub ad_wf_block:Option<Vec<AdWfBlock>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_wf_process:Option<Vec<AdWfProcess>>,
    /// has many
    pub ad_workflow_access:Option<Vec<AdWorkflowAccess>>,
    /// has many
    pub ad_workflow_trl:Option<Vec<AdWorkflowTrl>>,
    /// has many
    pub asp_clientexception:Option<Vec<AspClientexception>>,
    /// has many
    pub asp_workflow:Option<Vec<AspWorkflow>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub qm_specification:Option<Vec<QmSpecification>>,
}


#[derive(Debug)]
pub struct AdWorkflowAccess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreadwrite:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct AdWorkflowTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct AdWorkflowprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflowprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub alertoverpriority:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 0
    /// db data type: numeric
    pub inactivityalertdays:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub reminddays:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one, extension table
    pub ad_workflowprocessorlog:Option<Box<AdWorkflowprocessorlog>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
}


#[derive(Debug)]
pub struct AdWorkflowprocessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflowprocessor_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_workflowprocessorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflowprocessor:Option<AdWorkflowprocessor>,
}


#[derive(Debug)]
pub struct AspClientexception {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_clientexception_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_field_id:Option<f64>,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_process_para_id:Option<f64>,
    /// db data type: numeric
    pub ad_tab_id:Option<f64>,
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_node_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_field:Option<AdField>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_process_para:Option<AdProcessPara>,
    /// has one
    pub ad_tab:Option<AdTab>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
}


#[derive(Debug)]
pub struct AspClientlevel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_clientlevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_module_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub asp_level:Option<AspLevel>,
    /// has one
    pub asp_module:Option<AspModule>,
}


#[derive(Debug)]
pub struct AspField {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_field_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_field_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// db data type: numeric
    pub asp_tab_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_field:Option<AdField>,
    /// has one
    pub asp_tab:Option<AspTab>,
}


#[derive(Debug)]
pub struct AspForm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_form_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_form_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub asp_level:Option<AspLevel>,
}


#[derive(Debug)]
pub struct AspLevel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_module_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub asp_module:Option<AspModule>,
    /// has many
    pub asp_clientlevel:Option<Vec<AspClientlevel>>,
    /// has many
    pub asp_form:Option<Vec<AspForm>>,
    /// has many
    pub asp_process:Option<Vec<AspProcess>>,
    /// has many
    pub asp_task:Option<Vec<AspTask>>,
    /// has many
    pub asp_window:Option<Vec<AspWindow>>,
    /// has many
    pub asp_workflow:Option<Vec<AspWorkflow>>,
}


#[derive(Debug)]
pub struct AspModule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_module_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub asp_clientlevel:Option<Vec<AspClientlevel>>,
    /// has many
    pub asp_level:Option<Vec<AspLevel>>,
}


#[derive(Debug)]
pub struct AspProcess {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub asp_level:Option<AspLevel>,
    /// has many
    pub asp_process_para:Option<Vec<AspProcessPara>>,
}


#[derive(Debug)]
pub struct AspProcessPara {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_process_para_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_process_para_id:f64,
    /// db data type: numeric
    pub asp_process_id:Option<f64>,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_process_para:Option<AdProcessPara>,
    /// has one
    pub asp_process:Option<AspProcess>,
}


#[derive(Debug)]
pub struct AspTab {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_tab_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tab_id:f64,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub allfields:Option<String>,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// db data type: numeric
    pub asp_window_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tab:Option<AdTab>,
    /// has one
    pub asp_window:Option<AspWindow>,
    /// has many
    pub asp_field:Option<Vec<AspField>>,
}


#[derive(Debug)]
pub struct AspTask {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_task_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_task_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub asp_level:Option<AspLevel>,
}


#[derive(Debug)]
pub struct AspWindow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_window_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_window_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub asp_level:Option<AspLevel>,
    /// has many
    pub asp_tab:Option<Vec<AspTab>>,
}


#[derive(Debug)]
pub struct AspWorkflow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub asp_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub asp_level_id:f64,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub asp_status:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub asp_level:Option<AspLevel>,
}


#[derive(Debug)]
pub struct BBid {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_bid_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_buyerfunds_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_topic_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iswillingtocommit:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub privatenote:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub b_topic:Option<BTopic>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_user:Option<BBuyer>,
    /// has one
    pub b_buyerfunds:Option<BBuyerfunds>,
}


#[derive(Debug)]
pub struct BBidcomment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_bidcomment_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_topic_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub textmsg:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub b_topic:Option<BTopic>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct BBuyer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub b_bid:Option<Vec<BBid>>,
    /// has many
    pub b_buyerfunds:Option<Vec<BBuyerfunds>>,
}


#[derive(Debug)]
pub struct BBuyerfunds {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_buyerfunds_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub noncommittedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_user:Option<BBuyer>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has many
    pub b_bid:Option<Vec<BBid>>,
}


#[derive(Debug)]
pub struct BOffer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_offer_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_sellerfunds_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_topic_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iswillingtocommit:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub privatenote:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub b_topic:Option<BTopic>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_user:Option<BSeller>,
    /// has one
    pub b_sellerfunds:Option<BSellerfunds>,
}


#[derive(Debug)]
pub struct BSeller {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinternal:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub b_offer:Option<Vec<BOffer>>,
    /// has many
    pub b_sellerfunds:Option<Vec<BSellerfunds>>,
}


#[derive(Debug)]
pub struct BSellerfunds {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_sellerfunds_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub noncommittedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_user:Option<BSeller>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has many
    pub b_offer:Option<Vec<BOffer>>,
}


#[derive(Debug)]
pub struct BTopic {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_topic_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_topiccategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_topictype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub decisiondate:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublished:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: text
    pub textdetails:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: character
    pub topicaction:String,
    /// not nullable 
    /// db data type: character
    pub topicstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub b_topictype:Option<BTopictype>,
    /// has one
    pub b_topiccategory:Option<BTopiccategory>,
    /// has one, extension table
    pub b_bidcomment:Option<Box<BBidcomment>>,
    /// has many
    pub b_bid:Option<Vec<BBid>>,
    /// has many
    pub b_offer:Option<Vec<BOffer>>,
}


#[derive(Debug)]
pub struct BTopiccategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_topiccategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_topictype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub b_topictype:Option<BTopictype>,
    /// has many
    pub b_topic:Option<Vec<BTopic>>,
}


#[derive(Debug)]
pub struct BTopictype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub b_topictype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub auctiontype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_productmember_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_productmember:Option<MProduct>,
    /// has many
    pub b_topic:Option<Vec<BTopic>>,
    /// has many
    pub b_topiccategory:Option<Vec<BTopiccategory>>,
}


#[derive(Debug)]
pub struct CAcctprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one, extension table
    pub c_acctprocessorlog:Option<Box<CAcctprocessorlog>>,
}


#[derive(Debug)]
pub struct CAcctprocessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctprocessor_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctprocessorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctprocessor:Option<CAcctprocessor>,
}


#[derive(Debug)]
pub struct CAcctschema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgonly_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub autoperiodcontrol:String,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub commitmenttype:String,
    /// default: 'C'::bpchar
    /// not nullable 
    /// db data type: character
    pub costinglevel:String,
    /// not nullable 
    /// db data type: character
    pub costingmethod:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub gaap:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub hasalias:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub hascombination:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaccrual:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isadjustcogs:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isallownegativeposting:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountcorrectstax:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexplicitcostadjustment:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub ispostifclearingequal:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispostservices:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istradediscountposted:String,
    /// db data type: numeric
    pub m_costtype_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub period_openfuture:Option<f64>,
    /// db data type: numeric
    pub period_openhistory:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: character
    pub separator:String,
    /// db data type: character
    pub taxcorrectiontype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub m_costtype:Option<MCosttype>,
    /// has one
    pub ad_orgonly:Option<AdOrg>,
    /// has one, extension table
    pub c_acctschema_default:Option<Box<CAcctschemaDefault>>,
    /// has one, extension table
    pub c_acctschema_gl:Option<Box<CAcctschemaGl>>,
    /// has many
    pub a_asset_acct:Option<Vec<AAssetAcct>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub a_asset_change_amt:Option<Vec<AAssetChangeAmt>>,
    /// has many
    pub a_asset_group_acct:Option<Vec<AAssetGroupAcct>>,
    /// has many
    pub a_asset_reval_entry:Option<Vec<AAssetRevalEntry>>,
    /// has many
    pub a_asset_transfer:Option<Vec<AAssetTransfer>>,
    /// has many
    pub a_depreciation_entry:Option<Vec<ADepreciationEntry>>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub c_acctprocessor:Option<Vec<CAcctprocessor>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bankaccount_acct:Option<Vec<CBankaccountAcct>>,
    /// has many
    pub c_bp_customer_acct:Option<Vec<CBpCustomerAcct>>,
    /// has many
    pub c_bp_employee_acct:Option<Vec<CBpEmployeeAcct>>,
    /// has many
    pub c_bp_group_acct:Option<Vec<CBpGroupAcct>>,
    /// has many
    pub c_bp_vendor_acct:Option<Vec<CBpVendorAcct>>,
    /// has many
    pub c_cashbook_acct:Option<Vec<CCashbookAcct>>,
    /// has many
    pub c_charge_acct:Option<Vec<CChargeAcct>>,
    /// has many
    pub c_currency_acct:Option<Vec<CCurrencyAcct>>,
    /// has many
    pub c_interorg_acct:Option<Vec<CInterorgAcct>>,
    /// has many
    pub c_project_acct:Option<Vec<CProjectAcct>>,
    /// has many
    pub c_revenuerecognition_plan:Option<Vec<CRevenuerecognitionPlan>>,
    /// has many
    pub c_tax_acct:Option<Vec<CTaxAcct>>,
    /// has many
    pub c_taxdeclarationacct:Option<Vec<CTaxdeclarationacct>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub c_withholding_acct:Option<Vec<CWithholdingAcct>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_budgetcontrol:Option<Vec<GlBudgetcontrol>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_fund:Option<Vec<GlFund>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub hr_concept_acct:Option<Vec<HrConceptAcct>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_costqueue:Option<Vec<MCostqueue>>,
    /// has many
    pub m_product_acct:Option<Vec<MProductAcct>>,
    /// has many
    pub m_product_category_acct:Option<Vec<MProductCategoryAcct>>,
    /// has many
    pub m_product_costing:Option<Vec<MProductCosting>>,
    /// has many
    pub m_warehouse_acct:Option<Vec<MWarehouseAcct>>,
    /// has many
    pub pa_ratio:Option<Vec<PaRatio>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
}


#[derive(Debug)]
pub struct CAcctschemaDefault {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_interestexp_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_interestrev_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_intransit_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_paymentselect_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_revaluationgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_revaluationloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_settlementgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_settlementloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_unallocatedcash_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_unidentified_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_prepayment_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_receivable_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_receivable_services_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_cashtransfer_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_differences_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_receipt_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub ch_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub ch_revenue_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub e_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub e_prepayment_acct:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedreceipts_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedreceivables_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedrevenue_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_asset_acct:f64,
    /// db data type: numeric
    pub p_averagecostvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_burden_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_cogs_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_costadjustment_acct:f64,
    /// db data type: numeric
    pub p_costofproduction_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_expense_acct:f64,
    /// db data type: numeric
    pub p_floorstock_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_inventoryclearing_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_invoicepricevariance_acct:f64,
    /// db data type: numeric
    pub p_labor_acct:Option<f64>,
    /// db data type: numeric
    pub p_methodchangevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_mixvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_outsideprocessing_acct:Option<f64>,
    /// db data type: numeric
    pub p_overhead_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_purchasepricevariance_acct:f64,
    /// db data type: numeric
    pub p_ratevariance_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_revenue_acct:f64,
    /// db data type: numeric
    pub p_scrap_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountgrant_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountrec_acct:f64,
    /// db data type: numeric
    pub p_usagevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_wip_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub paydiscount_exp_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub paydiscount_rev_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub pj_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub pj_wip_acct:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub realizedgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub realizedloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_credit_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_due_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_liability_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_receivables_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub unearnedrevenue_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub unrealizedgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub unrealizedloss_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_liability_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_liability_services_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_prepayment_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_differences_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_invactualadjust_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_inventory_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_revaluation_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub withholding_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub writeoff_acct:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub w_inventory_acct:Option<CValidcombination>,
    /// has one
    pub w_invactualadjust_acct:Option<CValidcombination>,
    /// has one
    pub w_differences_acct:Option<CValidcombination>,
    /// has one
    pub w_revaluation_acct:Option<CValidcombination>,
    /// has one
    pub p_revenue_acct:Option<CValidcombination>,
    /// has one
    pub p_expense_acct:Option<CValidcombination>,
    /// has one
    pub p_asset_acct:Option<CValidcombination>,
    /// has one
    pub p_purchasepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_invoicepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountrec_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountgrant_acct:Option<CValidcombination>,
    /// has one
    pub p_cogs_acct:Option<CValidcombination>,
    /// has one
    pub c_receivable_acct:Option<CValidcombination>,
    /// has one
    pub c_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub v_liability_acct:Option<CValidcombination>,
    /// has one
    pub v_liability_services_acct:Option<CValidcombination>,
    /// has one
    pub v_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub paydiscount_exp_acct:Option<CValidcombination>,
    /// has one
    pub writeoff_acct:Option<CValidcombination>,
    /// has one
    pub paydiscount_rev_acct:Option<CValidcombination>,
    /// has one
    pub unrealizedgain_acct:Option<CValidcombination>,
    /// has one
    pub unrealizedloss_acct:Option<CValidcombination>,
    /// has one
    pub realizedgain_acct:Option<CValidcombination>,
    /// has one
    pub realizedloss_acct:Option<CValidcombination>,
    /// has one
    pub withholding_acct:Option<CValidcombination>,
    /// has one
    pub e_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub e_expense_acct:Option<CValidcombination>,
    /// has one
    pub pj_asset_acct:Option<CValidcombination>,
    /// has one
    pub pj_wip_acct:Option<CValidcombination>,
    /// has one
    pub t_expense_acct:Option<CValidcombination>,
    /// has one
    pub t_liability_acct:Option<CValidcombination>,
    /// has one
    pub t_receivables_acct:Option<CValidcombination>,
    /// has one
    pub t_due_acct:Option<CValidcombination>,
    /// has one
    pub t_credit_acct:Option<CValidcombination>,
    /// has one
    pub b_intransit_acct:Option<CValidcombination>,
    /// has one
    pub b_asset_acct:Option<CValidcombination>,
    /// has one
    pub b_expense_acct:Option<CValidcombination>,
    /// has one
    pub b_interestrev_acct:Option<CValidcombination>,
    /// has one
    pub b_interestexp_acct:Option<CValidcombination>,
    /// has one
    pub b_unidentified_acct:Option<CValidcombination>,
    /// has one
    pub b_unallocatedcash_acct:Option<CValidcombination>,
    /// has one
    pub b_paymentselect_acct:Option<CValidcombination>,
    /// has one
    pub b_settlementgain_acct:Option<CValidcombination>,
    /// has one
    pub b_settlementloss_acct:Option<CValidcombination>,
    /// has one
    pub b_revaluationgain_acct:Option<CValidcombination>,
    /// has one
    pub b_revaluationloss_acct:Option<CValidcombination>,
    /// has one
    pub ch_expense_acct:Option<CValidcombination>,
    /// has one
    pub ch_revenue_acct:Option<CValidcombination>,
    /// has one
    pub unearnedrevenue_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedreceivables_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedrevenue_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedreceipts_acct:Option<CValidcombination>,
    /// has one
    pub cb_asset_acct:Option<CValidcombination>,
    /// has one
    pub cb_cashtransfer_acct:Option<CValidcombination>,
    /// has one
    pub cb_differences_acct:Option<CValidcombination>,
    /// has one
    pub cb_expense_acct:Option<CValidcombination>,
    /// has one
    pub cb_receipt_acct:Option<CValidcombination>,
    /// has one
    pub c_receivable_services_acct:Option<CValidcombination>,
    /// has one
    pub p_inventoryclearing_acct:Option<CValidcombination>,
    /// has one
    pub p_costadjustment_acct:Option<CValidcombination>,
    /// has one
    pub p_wip_acct:Option<CValidcombination>,
    /// has one
    pub p_methodchangevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_usagevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_ratevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_mixvariance_acct:Option<CValidcombination>,
    /// has one
    pub p_floorstock_acct:Option<CValidcombination>,
    /// has one
    pub p_costofproduction_acct:Option<CValidcombination>,
    /// has one
    pub p_labor_acct:Option<CValidcombination>,
    /// has one
    pub p_burden_acct:Option<CValidcombination>,
    /// has one
    pub p_outsideprocessing_acct:Option<CValidcombination>,
    /// has one
    pub p_overhead_acct:Option<CValidcombination>,
    /// has one
    pub p_scrap_acct:Option<CValidcombination>,
    /// has one
    pub p_averagecostvariance_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CAcctschemaElement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_element_id:Option<f64>,
    /// db data type: numeric
    pub c_elementvalue_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub elementtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbalanced:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatory:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_element:Option<CElement>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub ad_column:Option<AdColumn>,
}


#[derive(Debug)]
pub struct CAcctschemaGl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub commitmentoffset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub commitmentoffsetsales_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub currencybalancing_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub incomesummary_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub intercompanyduefrom_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub intercompanydueto_acct:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub ppvoffset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub retainedearning_acct:f64,
    /// db data type: numeric
    pub suspensebalancing_acct:Option<f64>,
    /// db data type: numeric
    pub suspenseerror_acct:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub usecurrencybalancing:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub usesuspensebalancing:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub usesuspenseerror:String,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub suspensebalancing_acct:Option<CValidcombination>,
    /// has one
    pub suspenseerror_acct:Option<CValidcombination>,
    /// has one
    pub currencybalancing_acct:Option<CValidcombination>,
    /// has one
    pub retainedearning_acct:Option<CValidcombination>,
    /// has one
    pub incomesummary_acct:Option<CValidcombination>,
    /// has one
    pub intercompanydueto_acct:Option<CValidcombination>,
    /// has one
    pub intercompanyduefrom_acct:Option<CValidcombination>,
    /// has one
    pub ppvoffset_acct:Option<CValidcombination>,
    /// has one
    pub commitmentoffset_acct:Option<CValidcombination>,
    /// has one
    pub commitmentoffsetsales_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CActivity {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_activity_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_department:Option<Vec<HrDepartment>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CAllocationhdr {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_allocationhdr_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub approvalamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
}


#[derive(Debug)]
pub struct CAllocationline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_allocationline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub allocationno:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amount:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_allocationhdr_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_cashline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismanual:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub overunderamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub writeoffamt:f64,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_cashline:Option<CCashline>,
    /// has one
    pub c_allocationhdr:Option<CAllocationhdr>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has many
    pub c_paymentallocate:Option<Vec<CPaymentallocate>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
}


#[derive(Debug)]
pub struct CBank {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bank_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isownbank:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub routingno:String,
    /// db data type: character varying
    pub swiftcode:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_location:Option<CLocation>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub c_bankaccount:Option<Vec<CBankaccount>>,
    /// has many
    pub c_bp_bankaccount:Option<Vec<CBpBankaccount>>,
}


#[derive(Debug)]
pub struct CBankaccount {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub accountno:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub bankaccounttype:String,
    /// db data type: character varying
    pub bban:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_bank_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub creditlimit:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currentbalance:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub iban:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// db data type: character varying
    pub paymentexportclass:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bank:Option<CBank>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_bankaccount_acct:Option<Vec<CBankaccountAcct>>,
    /// has many
    pub c_bankaccountdoc:Option<Vec<CBankaccountdoc>>,
    /// has many
    pub c_bankstatement:Option<Vec<CBankstatement>>,
    /// has many
    pub c_bankstatementloader:Option<Vec<CBankstatementloader>>,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
    /// has many
    pub c_elementvalue:Option<Vec<CElementvalue>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_paymentprocessor:Option<Vec<CPaymentprocessor>>,
    /// has many
    pub c_payselection:Option<Vec<CPayselection>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub hr_payselection:Option<Vec<HrPayselection>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
}


#[derive(Debug)]
pub struct CBankaccountAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_interestexp_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_interestrev_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_intransit_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_paymentselect_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_revaluationgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_revaluationloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_settlementgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_settlementloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_unallocatedcash_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub b_unidentified_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub b_intransit_acct:Option<CValidcombination>,
    /// has one
    pub b_asset_acct:Option<CValidcombination>,
    /// has one
    pub b_expense_acct:Option<CValidcombination>,
    /// has one
    pub b_interestrev_acct:Option<CValidcombination>,
    /// has one
    pub b_interestexp_acct:Option<CValidcombination>,
    /// has one
    pub b_unidentified_acct:Option<CValidcombination>,
    /// has one
    pub b_unallocatedcash_acct:Option<CValidcombination>,
    /// has one
    pub b_paymentselect_acct:Option<CValidcombination>,
    /// has one
    pub b_settlementgain_acct:Option<CValidcombination>,
    /// has one
    pub b_settlementloss_acct:Option<CValidcombination>,
    /// has one
    pub b_revaluationgain_acct:Option<CValidcombination>,
    /// has one
    pub b_revaluationloss_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CBankaccountdoc {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccountdoc_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// db data type: numeric
    pub check_printformat_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnext:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub check_printformat:Option<AdPrintformat>,
}


#[derive(Debug)]
pub struct CBankstatement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankstatement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// db data type: numeric
    pub beginningbalance:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// db data type: timestamp without time zone
    pub eftstatementdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub eftstatementreference:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub endingbalance:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// db data type: character
    pub matchstatement:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub statementdate:NaiveDateTime,
    /// default: 0
    /// db data type: numeric
    pub statementdifference:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
}


#[derive(Debug)]
pub struct CBankstatementline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankstatementline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bankstatement_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub chargeamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createpayment:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub eftamt:Option<f64>,
    /// db data type: character varying
    pub eftcheckno:Option<String>,
    /// db data type: character varying
    pub eftcurrency:Option<String>,
    /// db data type: character varying
    pub eftmemo:Option<String>,
    /// db data type: character varying
    pub eftpayee:Option<String>,
    /// db data type: character varying
    pub eftpayeeaccount:Option<String>,
    /// db data type: character varying
    pub eftreference:Option<String>,
    /// db data type: timestamp without time zone
    pub eftstatementlinedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub efttrxid:Option<String>,
    /// db data type: character varying
    pub efttrxtype:Option<String>,
    /// db data type: timestamp without time zone
    pub eftvalutadate:Option<NaiveDateTime>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub interestamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreversal:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: character
    pub matchstatement:Option<String>,
    /// db data type: character varying
    pub memo:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub referenceno:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub statementlinedate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub stmtamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub trxamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub valutadate:NaiveDateTime,
    /// has one
    pub c_bankstatement:Option<CBankstatement>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
}


#[derive(Debug)]
pub struct CBankstatementloader {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankstatementloader_id:f64,
    /// db data type: character varying
    pub accountno:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub branchid:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub dateformat:Option<String>,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub filename:Option<String>,
    /// db data type: character varying
    pub financialinstitutionid:Option<String>,
    /// db data type: character varying
    pub hostaddress:Option<String>,
    /// db data type: numeric
    pub hostport:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub password:Option<String>,
    /// db data type: character varying
    pub pin:Option<String>,
    /// db data type: character varying
    pub proxyaddress:Option<String>,
    /// db data type: character varying
    pub proxylogon:Option<String>,
    /// db data type: character varying
    pub proxypassword:Option<String>,
    /// db data type: numeric
    pub proxyport:Option<f64>,
    /// db data type: character varying
    pub stmtloaderclass:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub userid:Option<String>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
}


#[derive(Debug)]
pub struct CBankstatementmatcher {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bankstatementmatcher_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub classname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct CBpBankaccount {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_bankaccount_id:f64,
    /// db data type: character varying
    pub a_city:Option<String>,
    /// db data type: character varying
    pub a_country:Option<String>,
    /// db data type: character varying
    pub a_email:Option<String>,
    /// db data type: character varying
    pub a_ident_dl:Option<String>,
    /// db data type: character varying
    pub a_ident_ssn:Option<String>,
    /// db data type: character varying
    pub a_name:Option<String>,
    /// db data type: character varying
    pub a_state:Option<String>,
    /// db data type: character varying
    pub a_street:Option<String>,
    /// db data type: character varying
    pub a_zip:Option<String>,
    /// db data type: character varying
    pub accountno:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character
    pub bankaccounttype:Option<String>,
    /// db data type: character
    pub bpbankacctuse:Option<String>,
    /// db data type: numeric
    pub c_bank_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub creditcardexpmm:Option<f64>,
    /// db data type: numeric
    pub creditcardexpyy:Option<f64>,
    /// db data type: character varying
    pub creditcardnumber:Option<String>,
    /// db data type: character
    pub creditcardtype:Option<String>,
    /// db data type: character varying
    pub creditcardvv:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isach:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub r_avsaddr:Option<String>,
    /// db data type: character
    pub r_avszip:Option<String>,
    /// db data type: character varying
    pub routingno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bank:Option<CBank>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_payselectioncheck:Option<Vec<CPayselectioncheck>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_payselectioncheck:Option<Vec<HrPayselectioncheck>>,
}


#[derive(Debug)]
pub struct CBpCustomerAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_prepayment_acct:Option<f64>,
    /// db data type: numeric
    pub c_receivable_acct:Option<f64>,
    /// db data type: numeric
    pub c_receivable_services_acct:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_receivable_acct:Option<CValidcombination>,
    /// has one
    pub c_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub c_receivable_services_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CBpEdi {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_edi_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_sequence_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub customerno:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub editype:String,
    /// not nullable 
    /// db data type: character varying
    pub email_error_to:String,
    /// db data type: character varying
    pub email_from:Option<String>,
    /// db data type: character varying
    pub email_from_pwd:Option<String>,
    /// db data type: character varying
    pub email_from_uid:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub email_info_to:String,
    /// db data type: character varying
    pub email_to:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaudited:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinfosent:String,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub receiveinquiryreply:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub receiveorderreply:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendinquiry:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendorder:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub ad_sequence:Option<AdSequence>,
    /// has many
    pub m_edi:Option<Vec<MEdi>>,
}


#[derive(Debug)]
pub struct CBpEmployeeAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub e_expense_acct:Option<f64>,
    /// db data type: numeric
    pub e_prepayment_acct:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub e_expense_acct:Option<CValidcombination>,
    /// has one
    pub e_prepayment_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CBpGroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub c_dunning_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub creditwatchpercent:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isconfidentialinfo:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// db data type: numeric
    pub m_discountschema_id:Option<f64>,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub po_discountschema_id:Option<f64>,
    /// db data type: numeric
    pub po_pricelist_id:Option<f64>,
    /// db data type: numeric
    pub pricematchtolerance:Option<f64>,
    /// db data type: character
    pub prioritybase:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub po_pricelist:Option<MPricelist>,
    /// has one
    pub m_discountschema:Option<MDiscountschema>,
    /// has one
    pub po_discountschema:Option<MDiscountschema>,
    /// has one
    pub c_dunning:Option<CDunning>,
    /// has many
    pub c_bp_group_acct:Option<Vec<CBpGroupAcct>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub cm_accesslistbpgroup:Option<Vec<CmAccesslistbpgroup>>,
    /// has many
    pub hr_concept_acct:Option<Vec<HrConceptAcct>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
}


#[derive(Debug)]
pub struct CBpGroupAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_prepayment_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_receivable_acct:f64,
    /// db data type: numeric
    pub c_receivable_services_acct:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedreceipts_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedreceivables_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub notinvoicedrevenue_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub paydiscount_exp_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub paydiscount_rev_acct:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub unearnedrevenue_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_liability_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_liability_services_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub v_prepayment_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub writeoff_acct:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_receivable_acct:Option<CValidcombination>,
    /// has one
    pub c_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub v_liability_acct:Option<CValidcombination>,
    /// has one
    pub v_liability_services_acct:Option<CValidcombination>,
    /// has one
    pub v_prepayment_acct:Option<CValidcombination>,
    /// has one
    pub paydiscount_exp_acct:Option<CValidcombination>,
    /// has one
    pub paydiscount_rev_acct:Option<CValidcombination>,
    /// has one
    pub writeoff_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedreceipts_acct:Option<CValidcombination>,
    /// has one
    pub unearnedrevenue_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedrevenue_acct:Option<CValidcombination>,
    /// has one
    pub notinvoicedreceivables_acct:Option<CValidcombination>,
    /// has one
    pub c_receivable_services_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CBpRelation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_relation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartnerrelation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartnerrelation_location_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbillto:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispayfrom:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isremitto:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshipto:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_bpartnerrelation:Option<CBpartner>,
    /// has one
    pub c_bpartnerrelation_location:Option<CBpartnerLocation>,
}


#[derive(Debug)]
pub struct CBpVendorAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub v_liability_acct:Option<f64>,
    /// db data type: numeric
    pub v_liability_services_acct:Option<f64>,
    /// db data type: numeric
    pub v_prepayment_acct:Option<f64>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub v_liability_acct:Option<CValidcombination>,
    /// has one
    pub v_liability_services_acct:Option<CValidcombination>,
    /// has one
    pub v_prepayment_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CBpWithholding {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_withholding_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub exemptreason:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatorywithholding:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istemporaryexempt:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_withholding:Option<CWithholding>,
}


#[derive(Debug)]
pub struct CBpartner {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: 0
    /// db data type: numeric
    pub acqusitioncost:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub actuallifetimevalue:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgbp_id:Option<f64>,
    /// db data type: numeric
    pub bpartner_parent_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// db data type: numeric
    pub c_dunning_id:Option<f64>,
    /// db data type: numeric
    pub c_greeting_id:Option<f64>,
    /// db data type: numeric
    pub c_invoiceschedule_id:Option<f64>,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// db data type: numeric
    pub c_taxgroup_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub deliveryrule:Option<String>,
    /// db data type: character
    pub deliveryviarule:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub documentcopies:Option<f64>,
    /// db data type: timestamp without time zone
    pub dunninggrace:Option<NaiveDateTime>,
    /// db data type: character
    pub duns:Option<String>,
    /// db data type: timestamp without time zone
    pub firstsale:Option<NaiveDateTime>,
    /// db data type: numeric
    pub flatdiscount:Option<f64>,
    /// db data type: character
    pub freightcostrule:Option<String>,
    /// db data type: numeric
    pub invoice_printformat_id:Option<f64>,
    /// db data type: character
    pub invoicerule:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscustomer:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isdiscountprinted:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isemployee:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismanufacturer:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isonetime:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispotaxexempt:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprospect:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issalesrep:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub istaxexempt:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvendor:String,
    /// db data type: numeric
    pub logo_id:Option<f64>,
    /// db data type: numeric
    pub m_discountschema_id:Option<f64>,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// db data type: character
    pub naics:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub name2:Option<String>,
    /// db data type: numeric
    pub numberemployees:Option<f64>,
    /// db data type: character
    pub paymentrule:Option<String>,
    /// db data type: character
    pub paymentrulepo:Option<String>,
    /// db data type: numeric
    pub po_discountschema_id:Option<f64>,
    /// db data type: numeric
    pub po_paymentterm_id:Option<f64>,
    /// db data type: numeric
    pub po_pricelist_id:Option<f64>,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub potentiallifetimevalue:Option<f64>,
    /// db data type: character
    pub rating:Option<String>,
    /// db data type: character varying
    pub referenceno:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: numeric
    pub salesvolume:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// db data type: numeric
    pub shareofcustomer:Option<f64>,
    /// db data type: numeric
    pub shelflifeminpct:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub so_creditlimit:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub so_creditused:Option<f64>,
    /// db data type: character varying
    pub so_description:Option<String>,
    /// default: 'O'::bpchar
    /// db data type: character
    pub socreditstatus:Option<String>,
    /// db data type: character varying
    pub taxid:Option<String>,
    /// db data type: numeric
    pub totalopenbalance:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub url:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub c_invoiceschedule:Option<CInvoiceschedule>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_discountschema:Option<MDiscountschema>,
    /// has one
    pub c_dunning:Option<CDunning>,
    /// has one
    pub po_pricelist:Option<MPricelist>,
    /// has one
    pub po_discountschema:Option<MDiscountschema>,
    /// has one
    pub po_paymentterm:Option<CPaymentterm>,
    /// has one
    pub c_greeting:Option<CGreeting>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one, self referential
    pub bpartner_parent:Option<Box<CBpartner>>,
    /// has one
    pub invoice_printformat:Option<AdPrintformat>,
    /// has one
    pub ad_orgbp:Option<AdOrg>,
    /// has one
    pub c_taxgroup:Option<CTaxgroup>,
    /// has one
    pub logo:Option<AdImage>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_registration:Option<Vec<ARegistration>>,
    /// has many
    pub ad_archive:Option<Vec<AdArchive>>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub c_bp_bankaccount:Option<Vec<CBpBankaccount>>,
    /// has many
    pub c_bp_customer_acct:Option<Vec<CBpCustomerAcct>>,
    /// has many
    pub c_bp_edi:Option<Vec<CBpEdi>>,
    /// has many
    pub c_bp_employee_acct:Option<Vec<CBpEmployeeAcct>>,
    /// has many
    pub c_bp_relation:Option<Vec<CBpRelation>>,
    /// has many
    pub c_bp_vendor_acct:Option<Vec<CBpVendorAcct>>,
    /// has many
    pub c_bp_withholding:Option<Vec<CBpWithholding>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub c_bpartner_product:Option<Vec<CBpartnerProduct>>,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_charge:Option<Vec<CCharge>>,
    /// has many
    pub c_commission:Option<Vec<CCommission>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_payselectioncheck:Option<Vec<CPayselectioncheck>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfq_topicsubscriber:Option<Vec<CRfqTopicsubscriber>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_subscription:Option<Vec<CSubscription>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub c_withholding:Option<Vec<CWithholding>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_contract:Option<Vec<HrContract>>,
    /// has many
    pub hr_department:Option<Vec<HrDepartment>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_interview:Option<Vec<HrInterview>>,
    /// has many
    pub hr_jobapplication:Option<Vec<HrJobapplication>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_payselectioncheck:Option<Vec<HrPayselectioncheck>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_hr_movement:Option<Vec<IHrMovement>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub i_product:Option<Vec<IProduct>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_bp_price:Option<Vec<MBpPrice>>,
    /// has many
    pub m_discountschemaline:Option<Vec<MDiscountschemaline>>,
    /// has many
    pub m_distributionlistline:Option<Vec<MDistributionlistline>>,
    /// has many
    pub m_distributionrun:Option<Vec<MDistributionrun>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_productpricevendorbreak:Option<Vec<MProductpricevendorbreak>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub m_shipper:Option<Vec<MShipper>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pa_sla_goal:Option<Vec<PaSlaGoal>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub s_timeexpense:Option<Vec<STimeexpense>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
    /// has many
    pub w_advertisement:Option<Vec<WAdvertisement>>,
    /// has many
    pub w_basket:Option<Vec<WBasket>>,
    /// has many
    pub w_clickcount:Option<Vec<WClickcount>>,
    /// has many
    pub w_countercount:Option<Vec<WCountercount>>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
}


#[derive(Debug)]
pub struct CBpartnerLocation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: character varying
    pub contactperson:Option<String>,
    /// db data type: character varying
    pub contacttype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character varying
    pub fax:Option<String>,
    /// db data type: numeric
    pub hr_relationship_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbillto:String,
    /// db data type: character varying
    pub isdn:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispayfrom:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isremitto:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshipto:String,
    /// db data type: character varying
    pub mobilephone:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub phone2:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub hr_relationship:Option<HrRelationship>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub c_bp_relation:Option<Vec<CBpRelation>>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfq_topicsubscriber:Option<Vec<CRfqTopicsubscriber>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_distributionlistline:Option<Vec<MDistributionlistline>>,
    /// has many
    pub m_distributionrun:Option<Vec<MDistributionrun>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
}


#[derive(Debug)]
pub struct CBpartnerProduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanufacturer:String,
    /// db data type: character varying
    pub manufacturer:Option<String>,
    /// db data type: numeric
    pub qualityrating:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub shelflifemindays:f64,
    /// not nullable 
    /// db data type: numeric
    pub shelflifeminpct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub vendorcategory:Option<String>,
    /// db data type: character varying
    pub vendorproductno:Option<String>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct CCalendar {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub c_nonbusinessday:Option<Vec<CNonbusinessday>>,
    /// has many
    pub c_year:Option<Vec<CYear>>,
    /// has many
    pub m_demand:Option<Vec<MDemand>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pa_reportcube:Option<Vec<PaReportcube>>,
}


#[derive(Debug)]
pub struct CCampaign {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_campaign_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_channel_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub costs:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_channel:Option<CChannel>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_contract:Option<Vec<HrContract>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub m_promotion:Option<Vec<MPromotion>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CCash {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cash_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub beginningbalance:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_cashbook_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub endingbalance:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub statementdate:NaiveDateTime,
    /// default: 0
    /// db data type: numeric
    pub statementdifference:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_cashbook:Option<CCashbook>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
}


#[derive(Debug)]
pub struct CCashbook {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cashbook_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_cashbook_acct:Option<Vec<CCashbookAcct>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
}


#[derive(Debug)]
pub struct CCashbookAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cashbook_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_cashtransfer_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_differences_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub cb_receipt_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_cashbook:Option<CCashbook>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub cb_asset_acct:Option<CValidcombination>,
    /// has one
    pub cb_cashtransfer_acct:Option<CValidcombination>,
    /// has one
    pub cb_differences_acct:Option<CValidcombination>,
    /// has one
    pub cb_expense_acct:Option<CValidcombination>,
    /// has one
    pub cb_receipt_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CCashflow {
    /// primary
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub c_cashflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_orgtrx_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateinvoiced:NaiveDateTime,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: timestamp without time zone
    pub duedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub grandtotal:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub issotrx:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
}


#[derive(Debug)]
pub struct CCashline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cashline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amount:f64,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_cash_id:f64,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub cashtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub discountamt:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isgenerated:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 0
    /// db data type: numeric
    pub writeoffamt:Option<f64>,
    /// has one
    pub c_cash:Option<CCash>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
}


#[derive(Debug)]
pub struct CChannel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_channel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has many
    pub c_campaign:Option<Vec<CCampaign>>,
}


#[derive(Debug)]
pub struct CCharge {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_charge_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_chargetype_id:Option<f64>,
    /// db data type: numeric
    pub c_taxcategory_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub chargeamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issamecurrency:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issametax:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_chargetype:Option<CChargetype>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
    /// has many
    pub c_charge_acct:Option<Vec<CChargeAcct>>,
    /// has many
    pub c_charge_trl:Option<Vec<CChargeTrl>>,
    /// has many
    pub c_commission:Option<Vec<CCommission>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_payroll:Option<Vec<HrPayroll>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_elementvalue:Option<Vec<IElementvalue>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_promotionreward:Option<Vec<MPromotionreward>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub m_rmaline:Option<Vec<MRmaline>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CChargeAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_charge_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ch_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub ch_revenue_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub ch_expense_acct:Option<CValidcombination>,
    /// has one
    pub ch_revenue_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CChargeTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_charge_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub c_charge:Option<CCharge>,
}


#[derive(Debug)]
pub struct CChargetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_chargetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_charge:Option<Vec<CCharge>>,
    /// has many
    pub c_chargetype_doctype:Option<Vec<CChargetypeDoctype>>,
}


#[derive(Debug)]
pub struct CChargetypeDoctype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_chargetype_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallownegative:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallowpositive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_chargetype:Option<CChargetype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
}


#[derive(Debug)]
pub struct CCity {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_city_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub areacode:Option<String>,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// db data type: character varying
    pub coordinates:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub locode:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub postal:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has many
    pub c_location:Option<Vec<CLocation>>,
}


#[derive(Debug)]
pub struct CCommission {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_commission_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_charge_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docbasistype:String,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub listdetails:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_commissionrun:Option<Vec<CCommissionrun>>,
}


#[derive(Debug)]
pub struct CCommissionamt {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_commissionamt_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub actualqty:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_commissionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_commissionrun_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub commissionamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub convertedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_commissionrun:Option<CCommissionrun>,
    /// has one
    pub c_commissionline:Option<CCommissionline>,
    /// has many
    pub c_commissiondetail:Option<Vec<CCommissiondetail>>,
}


#[derive(Debug)]
pub struct CCommissiondetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_commissiondetail_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub actualamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub actualqty:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_commissionamt_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub convertedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub info:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_commissionamt:Option<CCommissionamt>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct CCommissionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_commissionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub amtmultiplier:f64,
    /// not nullable 
    /// db data type: numeric
    pub amtsubtract:f64,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_commission_id:f64,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub commissionorders:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispositiveonly:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// db data type: character
    pub paymentrule:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub qtymultiplier:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtysubtract:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_commission:Option<CCommission>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has many
    pub c_commissionamt:Option<Vec<CCommissionamt>>,
}


#[derive(Debug)]
pub struct CCommissionrun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_commissionrun_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_commission_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grandtotal:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_commission:Option<CCommission>,
    /// has many
    pub c_commissionamt:Option<Vec<CCommissionamt>>,
}


#[derive(Debug)]
pub struct CContactactivity {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_contactactivity_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_opportunity_id:Option<f64>,
    /// db data type: text
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub contactactivitytype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub iscomplete:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_opportunity:Option<COpportunity>,
}


#[derive(Debug)]
pub struct CConversionRate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_conversion_rate_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id_to:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub dividerate:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub multiplyrate:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_currency_id_to:Option<CCurrency>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has many
    pub i_conversion_rate:Option<Vec<IConversionRate>>,
}


#[derive(Debug)]
pub struct CConversiontype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_conversion_rate:Option<Vec<CConversionRate>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatch:Option<Vec<CInvoicebatch>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_conversion_rate:Option<Vec<IConversionRate>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub m_discountschemaline:Option<Vec<MDiscountschemaline>>,
    /// has many
    pub t_invoicegl:Option<Vec<TInvoicegl>>,
}


#[derive(Debug)]
pub struct CCountry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_country_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub allowcitiesoutoflist:Option<String>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: character varying
    pub capturesequence:Option<String>,
    /// not nullable 
    /// db data type: character
    pub countrycode:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub displaysequence:String,
    /// db data type: character varying
    pub displaysequencelocal:Option<String>,
    /// db data type: character varying
    pub expressionbankaccountno:Option<String>,
    /// db data type: character varying
    pub expressionbankroutingno:Option<String>,
    /// db data type: character varying
    pub expressionphone:Option<String>,
    /// db data type: character varying
    pub expressionpostal:Option<String>,
    /// db data type: character varying
    pub expressionpostal_add:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub haspostal_add:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub hasregion:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaddresslineslocalreverse:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isaddresslinesreverse:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispostcodelookup:String,
    /// db data type: character varying
    pub lookupclassname:Option<String>,
    /// db data type: character varying
    pub lookupclientid:Option<String>,
    /// db data type: character varying
    pub lookuppassword:Option<String>,
    /// db data type: character varying
    pub lookupurl:Option<String>,
    /// db data type: character varying
    pub mediasize:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one, self referential
    pub c_country:Option<Box<CCountry>>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one, extension table
    pub c_country:Option<Box<CCountry>>,
    /// has many
    pub c_city:Option<Vec<CCity>>,
    /// has many
    pub c_country_trl:Option<Vec<CCountryTrl>>,
    /// has many
    pub c_location:Option<Vec<CLocation>>,
    /// has many
    pub c_region:Option<Vec<CRegion>>,
    /// has many
    pub c_tax:Option<Vec<CTax>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_freight:Option<Vec<MFreight>>,
}


#[derive(Debug)]
pub struct CCountryTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_country_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CCurrency {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub costingprecision:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub cursymbol:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// db data type: timestamp without time zone
    pub emuentrydate:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub emurate:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isemumember:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iseuro:String,
    /// not nullable 
    /// db data type: character
    pub iso_code:String,
    /// db data type: numeric
    pub roundofffactor:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub stdprecision:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has many
    pub a_asset_reval_entry:Option<Vec<AAssetRevalEntry>>,
    /// has many
    pub a_depreciation_entry:Option<Vec<ADepreciationEntry>>,
    /// has many
    pub ad_registration:Option<Vec<AdRegistration>>,
    /// has many
    pub ad_role:Option<Vec<AdRole>>,
    /// has many
    pub c_acctschema:Option<Vec<CAcctschema>>,
    /// has many
    pub c_allocationhdr:Option<Vec<CAllocationhdr>>,
    /// has many
    pub c_bankaccount:Option<Vec<CBankaccount>>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub c_cashbook:Option<Vec<CCashbook>>,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
    /// has many
    pub c_commission:Option<Vec<CCommission>>,
    /// has many
    pub c_commissiondetail:Option<Vec<CCommissiondetail>>,
    /// has many
    pub c_conversion_rate:Option<Vec<CConversionRate>>,
    /// has many
    pub c_country:Option<Vec<CCountry>>,
    /// has many
    pub c_currency_acct:Option<Vec<CCurrencyAcct>>,
    /// has many
    pub c_currency_trl:Option<Vec<CCurrencyTrl>>,
    /// has many
    pub c_cycle:Option<Vec<CCycle>>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
    /// has many
    pub c_elementvalue:Option<Vec<CElementvalue>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatch:Option<Vec<CInvoicebatch>>,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_paymentprocessor:Option<Vec<CPaymentprocessor>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_revenuerecognition_plan:Option<Vec<CRevenuerecognitionPlan>>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalbatch:Option<Vec<GlJournalbatch>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_conversion_rate:Option<Vec<IConversionRate>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub i_product:Option<Vec<IProduct>>,
    /// has many
    pub m_bp_price:Option<Vec<MBpPrice>>,
    /// has many
    pub m_freight:Option<Vec<MFreight>>,
    /// has many
    pub m_pricelist:Option<Vec<MPricelist>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
}


#[derive(Debug)]
pub struct CCurrencyAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub realizedgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub realizedloss_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub unrealizedgain_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub unrealizedloss_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub unrealizedgain_acct:Option<CValidcombination>,
    /// has one
    pub unrealizedloss_acct:Option<CValidcombination>,
    /// has one
    pub realizedgain_acct:Option<CValidcombination>,
    /// has one
    pub realizedloss_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CCurrencyTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub cursymbol:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CCycle {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cycle_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_cyclestep:Option<Vec<CCyclestep>>,
}


#[derive(Debug)]
pub struct CCyclephase {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cyclestep_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_phase_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_cyclestep:Option<CCyclestep>,
    /// has one
    pub c_phase:Option<CPhase>,
}


#[derive(Debug)]
pub struct CCyclestep {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_cyclestep_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_cycle_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub relativeweight:f64,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_cycle:Option<CCycle>,
    /// has many
    pub c_cyclephase:Option<Vec<CCyclephase>>,
}


#[derive(Debug)]
pub struct CDoctype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// db data type: numeric
    pub c_doctypedifference_id:Option<f64>,
    /// db data type: numeric
    pub c_doctypeinvoice_id:Option<f64>,
    /// db data type: numeric
    pub c_doctypeproforma_id:Option<f64>,
    /// db data type: numeric
    pub c_doctypeshipment_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub definitesequence_id:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docbasetype:String,
    /// db data type: numeric
    pub docnosequence_id:Option<f64>,
    /// db data type: character
    pub docsubtypeso:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub documentcopies:f64,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub gl_category_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub hascharges:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub hasproforma:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreatecounter:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefaultcounterdoc:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdocnocontrolled:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindexed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isintransit:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isoverwritedateoncomplete:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isoverwriteseqoncomplete:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispickqaconfirm:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispreparesplitdocument:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshipconfirm:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issplitwhendifference:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one, self referential
    pub c_doctypeproforma:Option<Box<CDoctype>>,
    /// has one, self referential
    pub c_doctypeshipment:Option<Box<CDoctype>>,
    /// has one, self referential
    pub c_doctypeinvoice:Option<Box<CDoctype>>,
    /// has one
    pub docnosequence:Option<AdSequence>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one, self referential
    pub c_doctypedifference:Option<Box<CDoctype>>,
    /// has one
    pub definitesequence:Option<AdSequence>,
    /// has many
    pub a_asset_reval_entry:Option<Vec<AAssetRevalEntry>>,
    /// has many
    pub a_depreciation_entry:Option<Vec<ADepreciationEntry>>,
    /// has many
    pub ad_document_action_access:Option<Vec<AdDocumentActionAccess>>,
    /// has many
    pub ad_replicationdocument:Option<Vec<AdReplicationdocument>>,
    /// has many
    pub c_chargetype_doctype:Option<Vec<CChargetypeDoctype>>,
    /// has many
    pub c_doctype:Option<Vec<CDoctype>>,
    /// has many
    pub c_doctype_trl:Option<Vec<CDoctypeTrl>>,
    /// has many
    pub c_doctypecounter:Option<Vec<CDoctypecounter>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalbatch:Option<Vec<GlJournalbatch>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub k_index:Option<Vec<KIndex>>,
    /// has many
    pub k_indexstop:Option<Vec<KIndexstop>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_requisition:Option<Vec<MRequisition>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub t_invoicegl:Option<Vec<TInvoicegl>>,
    /// has many
    pub t_replenish:Option<Vec<TReplenish>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
}


#[derive(Debug)]
pub struct CDoctypeTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CDoctypecounter {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_doctypecounter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub counter_c_doctype_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub docaction:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreatecounter:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub counter:Option<CDoctype>,
}


#[derive(Debug)]
pub struct CDunning {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunning_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub createlevelssequentially:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub senddunningletter:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_bp_group:Option<Vec<CBpGroup>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_dunninglevel:Option<Vec<CDunninglevel>>,
    /// has many
    pub c_dunningrun:Option<Vec<CDunningrun>>,
}


#[derive(Debug)]
pub struct CDunninglevel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunninglevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_dunning_id:f64,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub chargefee:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub chargeinterest:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub daysafterdue:f64,
    /// not nullable 
    /// db data type: numeric
    pub daysbetweendunning:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub dunning_printformat_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub feeamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub interestpercent:Option<f64>,
    /// db data type: character
    pub invoicecollectiontype:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issetcreditstop:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issetpaymentterm:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshowalldue:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isshownotdue:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isstatement:String,
    /// default: 'x'::character varying
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_dunning:Option<CDunning>,
    /// has one
    pub dunning_printformat:Option<AdPrintformat>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has many
    pub c_dunninglevel_trl:Option<Vec<CDunninglevelTrl>>,
    /// has many
    pub c_dunningrun:Option<Vec<CDunningrun>>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
}


#[derive(Debug)]
pub struct CDunninglevelTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunninglevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub printname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub c_dunninglevel:Option<CDunninglevel>,
}


#[derive(Debug)]
pub struct CDunningrun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunningrun_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_dunning_id:f64,
    /// db data type: numeric
    pub c_dunninglevel_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dunningdate:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character
    pub sendit:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_dunninglevel:Option<CDunninglevel>,
    /// has one
    pub c_dunning:Option<CDunning>,
    /// has many
    pub c_dunningrunentry:Option<Vec<CDunningrunentry>>,
}


#[derive(Debug)]
pub struct CDunningrunentry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunningrunentry_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amt:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_dunninglevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_dunningrun_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_dunningrun:Option<CDunningrun>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_dunninglevel:Option<CDunninglevel>,
    /// has many
    pub c_dunningrunline:Option<Vec<CDunningrunline>>,
}


#[derive(Debug)]
pub struct CDunningrunline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_dunningrunline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amt:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_dunningrunentry_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_invoicepayschedule_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub convertedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub daysdue:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub feeamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub interestamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindispute:String,
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub timesdunned:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_dunningrunentry:Option<CDunningrunentry>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_invoicepayschedule:Option<CInvoicepayschedule>,
}


#[derive(Debug)]
pub struct CElement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_tree_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub elementtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbalancing:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isnaturalaccount:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub vformat:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_tree:Option<AdTree>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_elementvalue:Option<Vec<CElementvalue>>,
    /// has many
    pub i_elementvalue:Option<Vec<IElementvalue>>,
}


#[derive(Debug)]
pub struct CElementvalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_elementvalue_id:f64,
    /// not nullable 
    /// db data type: character
    pub accountsign:String,
    /// not nullable 
    /// db data type: character
    pub accounttype:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_element_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isbankaccount:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdoccontrolled:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isforeigncurrency:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub postactual:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub postbudget:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub postencumbrance:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub poststatistical:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_element:Option<CElement>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_elementvalue_trl:Option<Vec<CElementvalueTrl>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_subacct:Option<Vec<CSubacct>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_fundrestriction:Option<Vec<GlFundrestriction>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_concept_acct:Option<Vec<HrConceptAcct>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_elementvalue:Option<Vec<IElementvalue>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_reportline:Option<Vec<IReportline>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub pa_ratioelement:Option<Vec<PaRatioelement>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CElementvalueTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_elementvalue_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CGreeting {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_greeting_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub greeting:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfirstnameonly:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_greeting_trl:Option<Vec<CGreetingTrl>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
}


#[derive(Debug)]
pub struct CGreetingTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_greeting_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub greeting:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub c_greeting:Option<CGreeting>,
}


#[derive(Debug)]
pub struct CHrPayselectionCheckV {
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub amtinwords:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpgreeting:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bptaxid:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpvalue:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_payselection_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_payselectioncheck_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub duns:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_payselection_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_payselectioncheck_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub naics:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name2:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub org_location_id:Option<f64>,
    /// db data type: numeric
    pub payamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub paydate:Option<NaiveDateTime>,
    /// default: NULL::bpchar
    /// db data type: character
    pub paymentrule:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub poreference:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub referenceno:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub taxid:Option<String>,
}


#[derive(Debug)]
pub struct CInterorgAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_orgto_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub intercompanyduefrom_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub intercompanydueto_acct:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_orgto:Option<AdOrg>,
    /// has one
    pub intercompanydueto_acct:Option<CValidcombination>,
    /// has one
    pub intercompanyduefrom_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CInvoice {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_cashline_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctypetarget_id:f64,
    /// db data type: numeric
    pub c_dunninglevel_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateinvoiced:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateordered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateprinted:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: timestamp without time zone
    pub dunninggrace:Option<NaiveDateTime>,
    /// db data type: character
    pub generateto:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grandtotal:f64,
    /// db data type: character
    pub invoicecollectiontype:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindispute:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispaid:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispayschedulevalid:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istransferred:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// db data type: numeric
    pub m_rma_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub ref_invoice_id:Option<f64>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totallines:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_doctypetarget:Option<CDoctype>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_cashline:Option<CCashline>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one, self referential
    pub ref_invoice:Option<Box<CInvoice>>,
    /// has one
    pub m_rma:Option<MRma>,
    /// has one
    pub c_dunninglevel:Option<CDunninglevel>,
    /// has one, self referential
    pub reversal:Option<Box<CInvoice>>,
    /// has many
    pub a_asset_addition:Option<Vec<AAssetAddition>>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
    /// has many
    pub c_dunningrunline:Option<Vec<CDunningrunline>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_invoicepayschedule:Option<Vec<CInvoicepayschedule>>,
    /// has many
    pub c_invoicetax:Option<Vec<CInvoicetax>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_paymentallocate:Option<Vec<CPaymentallocate>>,
    /// has many
    pub c_payselectionline:Option<Vec<CPayselectionline>>,
    /// has many
    pub c_recurring:Option<Vec<CRecurring>>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutconfirm:Option<Vec<MInoutconfirm>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub t_invoicegl:Option<Vec<TInvoicegl>>,
}


#[derive(Debug)]
pub struct CInvoicebatch {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoicebatch_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub controlamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub documentamt:f64,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
}


#[derive(Debug)]
pub struct CInvoicebatchline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoicebatchline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_charge_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_invoicebatch_id:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateinvoiced:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub linenetamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub linetotalamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub priceentered:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyentered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_invoicebatch:Option<CInvoicebatch>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
}


#[derive(Debug)]
pub struct CInvoiceline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceline_id:f64,
    /// db data type: numeric
    pub a_asset_group_id:Option<f64>,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// db data type: character varying
    pub a_capvsexp:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub a_createasset:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub a_processed:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub generateto:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdescription:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub linenetamt:f64,
    /// default: 0
    /// db data type: numeric
    pub linetotalamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_rmaline_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub priceactual:f64,
    /// not nullable 
    /// db data type: numeric
    pub priceentered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelimit:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelist:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: numeric
    pub qtyentered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyinvoiced:f64,
    /// db data type: numeric
    pub ref_invoiceline_id:Option<f64>,
    /// db data type: numeric
    pub rramt:Option<f64>,
    /// db data type: timestamp without time zone
    pub rrstartdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub s_resourceassignment_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub taxamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub s_resourceassignment:Option<SResourceassignment>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one, self referential
    pub ref_invoiceline:Option<Box<CInvoiceline>>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub m_rmaline:Option<MRmaline>,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has many
    pub a_asset_addition:Option<Vec<AAssetAddition>>,
    /// has many
    pub a_asset_retirement:Option<Vec<AAssetRetirement>>,
    /// has many
    pub c_commissiondetail:Option<Vec<CCommissiondetail>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_landedcost:Option<Vec<CLandedcost>>,
    /// has many
    pub c_landedcostallocation:Option<Vec<CLandedcostallocation>>,
    /// has many
    pub c_revenuerecognition_plan:Option<Vec<CRevenuerecognitionPlan>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_inoutlineconfirm:Option<Vec<MInoutlineconfirm>>,
    /// has many
    pub m_matchinv:Option<Vec<MMatchinv>>,
    /// has many
    pub m_matchpo:Option<Vec<MMatchpo>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
}


#[derive(Debug)]
pub struct CInvoicepayschedule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoicepayschedule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// db data type: numeric
    pub c_payschedule_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub discountdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub dueamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub duedate:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payschedule:Option<CPayschedule>,
    /// has many
    pub c_dunningrunline:Option<Vec<CDunningrunline>>,
}


#[derive(Debug)]
pub struct CInvoiceschedule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceschedule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// db data type: numeric
    pub amt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub eveninvoiceweek:Option<String>,
    /// db data type: numeric
    pub invoiceday:Option<f64>,
    /// db data type: numeric
    pub invoicedaycutoff:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub invoicefrequency:String,
    /// db data type: character
    pub invoiceweekday:Option<String>,
    /// db data type: character
    pub invoiceweekdaycutoff:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isamount:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
}


#[derive(Debug)]
pub struct CInvoicetax {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxbaseamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_invoice:Option<CInvoice>,
}


#[derive(Debug)]
pub struct CJob {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_job_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_jobcategory_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isemployee:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_jobcategory:Option<CJobcategory>,
    /// has many
    pub ad_user:Option<Vec<AdUser>>,
    /// has many
    pub c_jobassignment:Option<Vec<CJobassignment>>,
    /// has many
    pub c_jobremuneration:Option<Vec<CJobremuneration>>,
    /// has many
    pub m_operationresource:Option<Vec<MOperationresource>>,
}


#[derive(Debug)]
pub struct CJobassignment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_jobassignment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_job_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_job:Option<CJob>,
}


#[derive(Debug)]
pub struct CJobcategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_jobcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_job:Option<Vec<CJob>>,
}


#[derive(Debug)]
pub struct CJobremuneration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_jobremuneration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_job_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_remuneration_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub c_job:Option<CJob>,
    /// has one
    pub c_remuneration:Option<CRemuneration>,
}


#[derive(Debug)]
pub struct CLandedcost {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_landedcost_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub landedcostdistribution:String,
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// db data type: numeric
    pub m_inout_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub m_costelement:Option<MCostelement>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct CLandedcostallocation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_landedcostallocation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub base:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_costelement:Option<MCostelement>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
}


#[derive(Debug)]
pub struct CLocation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub address1:Option<String>,
    /// db data type: character varying
    pub address2:Option<String>,
    /// db data type: character varying
    pub address3:Option<String>,
    /// db data type: character varying
    pub address4:Option<String>,
    /// db data type: numeric
    pub c_city_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_country_id:f64,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// db data type: character varying
    pub city:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub postal:Option<String>,
    /// db data type: character varying
    pub postal_add:Option<String>,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub c_city:Option<CCity>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_change:Option<Vec<AAssetChange>>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub ad_registration:Option<Vec<AdRegistration>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bank:Option<Vec<CBank>>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_warehouse:Option<Vec<MWarehouse>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
}


#[derive(Debug)]
pub struct CNonbusinessday {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_nonbusinessday_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub date1:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_calendar:Option<CCalendar>,
}


#[derive(Debug)]
pub struct COpportunity {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_opportunity_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_salesstage_id:f64,
    /// db data type: timestamp without time zone
    pub closedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub comments:Option<String>,
    /// db data type: numeric
    pub cost:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub expectedclosedate:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub opportunityamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub probability:f64,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_salesstage:Option<CSalesstage>,
    /// has one
    pub c_order:Option<COrder>,
    /// has many
    pub c_contactactivity:Option<Vec<CContactactivity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
}


#[derive(Debug)]
pub struct COrder {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub amountrefunded:Option<f64>,
    /// db data type: numeric
    pub amounttendered:Option<f64>,
    /// db data type: numeric
    pub bill_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub bill_location_id:Option<f64>,
    /// db data type: numeric
    pub bill_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_cashline_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctypetarget_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_opportunity_id:Option<f64>,
    /// db data type: numeric
    pub c_ordersource_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// db data type: numeric
    pub c_pos_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateordered:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateprinted:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character
    pub deliveryrule:String,
    /// not nullable 
    /// db data type: character
    pub deliveryviarule:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub dropship_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub dropship_location_id:Option<f64>,
    /// db data type: numeric
    pub dropship_user_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub freightcostrule:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grandtotal:f64,
    /// not nullable 
    /// db data type: character
    pub invoicerule:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreditapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdelivered:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdiscountprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdropship:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselected:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istransferred:String,
    /// db data type: numeric
    pub link_order_id:Option<f64>,
    /// db data type: numeric
    pub m_freightcategory_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: character varying
    pub ordertype:Option<String>,
    /// db data type: numeric
    pub pay_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub pay_location_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub promotioncode:Option<String>,
    /// db data type: numeric
    pub ref_order_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totallines:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub volume:Option<f64>,
    /// db data type: numeric
    pub weight:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_doctypetarget:Option<CDoctype>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_cashline:Option<CCashline>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one
    pub bill_bpartner:Option<CBpartner>,
    /// has one
    pub bill_location:Option<CBpartnerLocation>,
    /// has one
    pub bill_user:Option<AdUser>,
    /// has one
    pub pay_bpartner:Option<CBpartner>,
    /// has one
    pub pay_location:Option<CBpartnerLocation>,
    /// has one, self referential
    pub ref_order:Option<Box<COrder>>,
    /// has one
    pub c_pos:Option<CPos>,
    /// has one, self referential
    pub link_order:Option<Box<COrder>>,
    /// has one
    pub m_freightcategory:Option<MFreightcategory>,
    /// has one
    pub dropship_bpartner:Option<CBpartner>,
    /// has one
    pub dropship_location:Option<CBpartnerLocation>,
    /// has one
    pub dropship_user:Option<AdUser>,
    /// has one
    pub c_ordersource:Option<COrdersource>,
    /// has one
    pub c_opportunity:Option<COpportunity>,
    /// has many
    pub b_buyerfunds:Option<Vec<BBuyerfunds>>,
    /// has many
    pub b_sellerfunds:Option<Vec<BSellerfunds>>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_ordertax:Option<Vec<COrdertax>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_projectphase:Option<Vec<CProjectphase>>,
    /// has many
    pub c_recurring:Option<Vec<CRecurring>>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct COrderline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_orderline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_order_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: character
    pub createshipment:Option<String>,
    /// db data type: timestamp without time zone
    pub datedelivered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateinvoiced:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateordered:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub discount:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub freightamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isconsumesforecast:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdescription:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub linenetamt:f64,
    /// db data type: numeric
    pub link_orderline_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_promotion_id:Option<f64>,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: numeric
    pub pp_cost_collector_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub priceactual:f64,
    /// db data type: numeric
    pub pricecost:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub priceentered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelimit:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelist:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtydelivered:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyentered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyinvoiced:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtylostsales:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyordered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyreserved:f64,
    /// db data type: numeric
    pub ref_orderline_id:Option<f64>,
    /// db data type: numeric
    pub rramt:Option<f64>,
    /// db data type: timestamp without time zone
    pub rrstartdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub s_resourceassignment_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub s_resourceassignment:Option<SResourceassignment>,
    /// has one, self referential
    pub ref_orderline:Option<Box<COrderline>>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one, self referential
    pub link_orderline:Option<Box<COrderline>>,
    /// has one
    pub pp_cost_collector:Option<PpCostCollector>,
    /// has one
    pub m_promotion:Option<MPromotion>,
    /// has many
    pub c_commissiondetail:Option<Vec<CCommissiondetail>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_demanddetail:Option<Vec<MDemanddetail>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_matchpo:Option<Vec<MMatchpo>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct COrdersource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_ordersource_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub createdby:Option<AdUser>,
    /// has one
    pub updatedby:Option<AdUser>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
}


#[derive(Debug)]
pub struct COrdertax {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_order_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxbaseamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_tax:Option<CTax>,
}


#[derive(Debug)]
pub struct COrgassignment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_orgassignment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct CPayment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_payment_id:f64,
    /// db data type: character varying
    pub a_city:Option<String>,
    /// db data type: character varying
    pub a_country:Option<String>,
    /// db data type: character varying
    pub a_email:Option<String>,
    /// db data type: character varying
    pub a_ident_dl:Option<String>,
    /// db data type: character varying
    pub a_ident_ssn:Option<String>,
    /// db data type: character varying
    pub a_name:Option<String>,
    /// db data type: character varying
    pub a_state:Option<String>,
    /// db data type: character varying
    pub a_street:Option<String>,
    /// db data type: character varying
    pub a_zip:Option<String>,
    /// db data type: character varying
    pub accountno:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bp_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_cashbook_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_paymentbatch_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character varying
    pub checkno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub creditcardexpmm:Option<f64>,
    /// db data type: numeric
    pub creditcardexpyy:Option<f64>,
    /// db data type: character varying
    pub creditcardnumber:Option<String>,
    /// db data type: character
    pub creditcardtype:Option<String>,
    /// db data type: character varying
    pub creditcardvv:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub discountamt:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallocated:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdelayedcapture:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isonline:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isoverunderpayment:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprepayment:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreceipt:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreconciled:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// db data type: character varying
    pub micr:Option<String>,
    /// db data type: character
    pub oprocessing:Option<String>,
    /// db data type: character varying
    pub orig_trxid:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub overunderamt:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub payamt:f64,
    /// db data type: character varying
    pub ponum:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub r_authcode:Option<String>,
    /// db data type: character varying
    pub r_authcode_dc:Option<String>,
    /// db data type: character
    pub r_avsaddr:Option<String>,
    /// db data type: character
    pub r_avszip:Option<String>,
    /// db data type: character
    pub r_cvv2match:Option<String>,
    /// db data type: character varying
    pub r_info:Option<String>,
    /// db data type: character varying
    pub r_pnref:Option<String>,
    /// db data type: character varying
    pub r_pnref_dc:Option<String>,
    /// db data type: character varying
    pub r_respmsg:Option<String>,
    /// db data type: character varying
    pub r_result:Option<String>,
    /// db data type: numeric
    pub ref_payment_id:Option<f64>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// db data type: character varying
    pub routingno:Option<String>,
    /// db data type: character varying
    pub swipe:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub taxamt:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub tendertype:String,
    /// not nullable 
    /// db data type: character
    pub trxtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: character varying
    pub voiceauthcode:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub writeoffamt:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_bp_bankaccount:Option<CBpBankaccount>,
    /// has one
    pub c_paymentbatch:Option<CPaymentbatch>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one, self referential
    pub ref_payment:Option<Box<CPayment>>,
    /// has one, self referential
    pub reversal:Option<Box<CPayment>>,
    /// has one
    pub c_cashbook:Option<CCashbook>,
    /// has many
    pub b_buyerfunds:Option<Vec<BBuyerfunds>>,
    /// has many
    pub b_sellerfunds:Option<Vec<BSellerfunds>>,
    /// has many
    pub c_allocationline:Option<Vec<CAllocationline>>,
    /// has many
    pub c_bankstatementline:Option<Vec<CBankstatementline>>,
    /// has many
    pub c_cashline:Option<Vec<CCashline>>,
    /// has many
    pub c_dunningrunline:Option<Vec<CDunningrunline>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_paymentallocate:Option<Vec<CPaymentallocate>>,
    /// has many
    pub c_payselectioncheck:Option<Vec<CPayselectioncheck>>,
    /// has many
    pub c_recurring:Option<Vec<CRecurring>>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
    /// has many
    pub hr_payselectioncheck:Option<Vec<HrPayselectioncheck>>,
    /// has many
    pub i_bankstatement:Option<Vec<IBankstatement>>,
    /// has many
    pub i_payment:Option<Vec<IPayment>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct CPaymentallocate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_paymentallocate_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amount:f64,
    /// db data type: numeric
    pub c_allocationline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_payment_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// default: 0
    /// db data type: numeric
    pub invoiceamt:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub overunderamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub writeoffamt:f64,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_allocationline:Option<CAllocationline>,
}


#[derive(Debug)]
pub struct CPaymentbatch {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_paymentbatch_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_paymentprocessor_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: timestamp without time zone
    pub processingdate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_paymentprocessor:Option<CPaymentprocessor>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
}


#[derive(Debug)]
pub struct CPaymentprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_paymentprocessor_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptamex:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptatm:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptcheck:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptcorporate:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptdiners:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptdirectdebit:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptdirectdeposit:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptdiscover:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptmc:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub acceptvisa:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_sequence_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub commission:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub costpertrx:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub hostaddress:Option<String>,
    /// db data type: numeric
    pub hostport:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// db data type: numeric
    pub minimumamt:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub partnerid:Option<String>,
    /// db data type: character varying
    pub password:Option<String>,
    /// db data type: character varying
    pub payprocessorclass:Option<String>,
    /// db data type: character varying
    pub proxyaddress:Option<String>,
    /// db data type: character varying
    pub proxylogon:Option<String>,
    /// db data type: character varying
    pub proxypassword:Option<String>,
    /// db data type: numeric
    pub proxyport:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub requirevv:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub userid:Option<String>,
    /// db data type: character varying
    pub vendorid:Option<String>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub ad_sequence:Option<AdSequence>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_paymentbatch:Option<Vec<CPaymentbatch>>,
}


#[derive(Debug)]
pub struct CPaymentterm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub afterdelivery:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub discount:f64,
    /// not nullable 
    /// db data type: numeric
    pub discount2:f64,
    /// not nullable 
    /// db data type: numeric
    pub discountdays:f64,
    /// not nullable 
    /// db data type: numeric
    pub discountdays2:f64,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// db data type: numeric
    pub fixmonthcutoff:Option<f64>,
    /// db data type: numeric
    pub fixmonthday:Option<f64>,
    /// db data type: numeric
    pub fixmonthoffset:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub gracedays:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdefault:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isduefixed:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isnextbusinessday:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub netday:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub netdays:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_cashflow:Option<Vec<CCashflow>>,
    /// has many
    pub c_dunninglevel:Option<Vec<CDunninglevel>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_paymentterm_trl:Option<Vec<CPaymenttermTrl>>,
    /// has many
    pub c_payschedule:Option<Vec<CPayschedule>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_withholding:Option<Vec<CWithholding>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub w_store:Option<Vec<WStore>>,
}


#[derive(Debug)]
pub struct CPaymenttermTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CPayschedule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_payschedule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub discount:f64,
    /// not nullable 
    /// db data type: numeric
    pub discountdays:f64,
    /// not nullable 
    /// db data type: numeric
    pub gracedays:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// db data type: character
    pub netday:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub netdays:f64,
    /// not nullable 
    /// db data type: numeric
    pub percentage:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has many
    pub c_invoicepayschedule:Option<Vec<CInvoicepayschedule>>,
}


#[derive(Debug)]
pub struct CPayselection {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_payselection_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub paydate:NaiveDateTime,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has many
    pub c_payselectioncheck:Option<Vec<CPayselectioncheck>>,
    /// has many
    pub c_payselectionline:Option<Vec<CPayselectionline>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
}


#[derive(Debug)]
pub struct CPayselectioncheck {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_payselectioncheck_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bp_bankaccount_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_payselection_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isgenerateddraft:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isreceipt:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub payamt:f64,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_payselection:Option<CPayselection>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_bp_bankaccount:Option<CBpBankaccount>,
    /// has many
    pub c_payselectionline:Option<Vec<CPayselectionline>>,
}


#[derive(Debug)]
pub struct CPayselectionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_payselectionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// db data type: numeric
    pub c_invoicepayschedule_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_payselection_id:f64,
    /// db data type: numeric
    pub c_payselectioncheck_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub differenceamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub payamt:f64,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_payselection:Option<CPayselection>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payselectioncheck:Option<CPayselectioncheck>,
}


#[derive(Debug)]
pub struct CPeriod {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub periodno:f64,
    /// not nullable 
    /// db data type: character
    pub periodtype:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_year:Option<CYear>,
    /// has many
    pub a_asset_disposed:Option<Vec<AAssetDisposed>>,
    /// has many
    pub a_asset_reval_entry:Option<Vec<AAssetRevalEntry>>,
    /// has many
    pub a_asset_split:Option<Vec<AAssetSplit>>,
    /// has many
    pub a_asset_transfer:Option<Vec<AAssetTransfer>>,
    /// has many
    pub a_depreciation_build:Option<Vec<ADepreciationBuild>>,
    /// has many
    pub a_depreciation_entry:Option<Vec<ADepreciationEntry>>,
    /// has many
    pub c_acctschema:Option<Vec<CAcctschema>>,
    /// has many
    pub c_periodcontrol:Option<Vec<CPeriodcontrol>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalbatch:Option<Vec<GlJournalbatch>>,
    /// has many
    pub hr_period:Option<Vec<HrPeriod>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub m_demandline:Option<Vec<MDemandline>>,
    /// has many
    pub m_forecastline:Option<Vec<MForecastline>>,
}


#[derive(Debug)]
pub struct CPeriodcontrol {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_periodcontrol_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub docbasetype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub periodaction:String,
    /// db data type: character
    pub periodstatus:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_period:Option<CPeriod>,
}


#[derive(Debug)]
pub struct CPhase {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_phase_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_projecttype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub standardqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_projecttype:Option<CProjecttype>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub c_cyclephase:Option<Vec<CCyclephase>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_projectphase:Option<Vec<CProjectphase>>,
    /// has many
    pub c_task:Option<Vec<CTask>>,
}


#[derive(Debug)]
pub struct CPos {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_pos_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub autologoutdelay:Option<f64>,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartnercashtrx_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_cashbook_id:f64,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_poskeylayout_id:Option<f64>,
    /// db data type: character varying
    pub cashdrawer:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismodifyprice:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub osk_keylayout_id:Option<f64>,
    /// db data type: numeric
    pub osnp_keylayout_id:Option<f64>,
    /// db data type: character varying
    pub printername:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_cashbook:Option<CCashbook>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_poskeylayout:Option<CPoskeylayout>,
    /// has one
    pub c_bpartnercashtrx:Option<CBpartner>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub osk_keylayout:Option<CPoskeylayout>,
    /// has one
    pub osnp_keylayout:Option<CPoskeylayout>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
}


#[derive(Debug)]
pub struct CPoskey {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_poskey_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub ad_printfont_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_poskeylayout_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: numeric
    pub spanx:Option<f64>,
    /// db data type: numeric
    pub spany:Option<f64>,
    /// db data type: numeric
    pub subkeylayout_id:Option<f64>,
    /// db data type: character varying
    pub text:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_poskeylayout:Option<CPoskeylayout>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one
    pub subkeylayout:Option<CPoskeylayout>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_printfont:Option<AdPrintfont>,
}


#[derive(Debug)]
pub struct CPoskeylayout {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_poskeylayout_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// db data type: numeric
    pub ad_printfont_id:Option<f64>,
    /// db data type: numeric
    pub columns:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub poskeylayouttype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one
    pub ad_printfont:Option<AdPrintfont>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub c_poskey:Option<Vec<CPoskey>>,
}


#[derive(Debug)]
pub struct CProject {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_project_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartnersr_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// db data type: numeric
    pub c_phase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttype_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedqty:f64,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datecontract:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datefinish:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub generateto:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub invoicedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub invoicedqty:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscommitceiling:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscommitment:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// db data type: numeric
    pub m_pricelist_version_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedmarginamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedqty:f64,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub projectbalanceamt:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub projectcategory:Option<String>,
    /// default: 'P'::bpchar
    /// not nullable 
    /// db data type: character
    pub projectlinelevel:String,
    /// default: '-'::bpchar
    /// not nullable 
    /// db data type: character
    pub projinvoicerule:String,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub m_pricelist_version:Option<MPricelistVersion>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_projecttype:Option<CProjecttype>,
    /// has one
    pub c_phase:Option<CPhase>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_bpartnersr:Option<CBpartner>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_cash:Option<Vec<CCash>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_payment:Option<Vec<CPayment>>,
    /// has many
    pub c_project_acct:Option<Vec<CProjectAcct>>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_projectphase:Option<Vec<CProjectphase>>,
    /// has many
    pub c_recurring:Option<Vec<CRecurring>>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_contract:Option<Vec<HrContract>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub r_issueproject:Option<Vec<RIssueproject>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub t_aging:Option<Vec<TAging>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CProjectAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_project_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub pj_asset_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub pj_wip_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub pj_asset_acct:Option<CValidcombination>,
    /// has one
    pub pj_wip_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CProjectissue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projectissue_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_project_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub s_timeexpenseline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub s_timeexpenseline:Option<STimeexpenseline>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has many
    pub c_projectissuema:Option<Vec<CProjectissuema>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct CProjectissuema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projectissue_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_projectissue:Option<CProjectissue>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct CProjectline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projectline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_orderpo_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_project_id:f64,
    /// db data type: numeric
    pub c_projectissue_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub committedamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub committedqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub dopricing:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub invoicedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub invoicedqty:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedmarginamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedprice:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedqty:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_projectissue:Option<CProjectissue>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_orderpo:Option<COrder>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
}


#[derive(Debug)]
pub struct CProjectphase {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projectphase_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_phase_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_project_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// db data type: character
    pub generateorder:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscommitceiling:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscomplete:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedamt:f64,
    /// default: 0
    /// db data type: numeric
    pub priceactual:Option<f64>,
    /// db data type: character
    pub projinvoicerule:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_phase:Option<CPhase>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_projecttask:Option<Vec<CProjecttask>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CProjecttask {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projecttask_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_projectphase_id:f64,
    /// db data type: numeric
    pub c_task_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub committedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub plannedamt:f64,
    /// db data type: character
    pub projinvoicerule:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_task:Option<CTask>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CProjecttype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_projecttype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub projectcategory:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_phase:Option<Vec<CPhase>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
}


#[derive(Debug)]
pub struct CRecurring {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_recurring_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub frequency:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: character
    pub recurringtype:String,
    /// not nullable 
    /// db data type: numeric
    pub runsmax:f64,
    /// not nullable 
    /// db data type: numeric
    pub runsremaining:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
}


#[derive(Debug)]
pub struct CRecurringRun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_recurring_run_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_recurring_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datedoc:Option<NaiveDateTime>,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has one
    pub c_recurring:Option<CRecurring>,
}


#[derive(Debug)]
pub struct CRegion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_region_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_country_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdefault:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has many
    pub c_city:Option<Vec<CCity>>,
    /// has many
    pub c_location:Option<Vec<CLocation>>,
    /// has many
    pub c_tax:Option<Vec<CTax>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_freight:Option<Vec<MFreight>>,
}


#[derive(Debug)]
pub struct CRemuneration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_remuneration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grossramt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grossrcost:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub overtimeamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub overtimecost:f64,
    /// not nullable 
    /// db data type: character
    pub remunerationtype:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub standardhours:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_jobremuneration:Option<Vec<CJobremuneration>>,
    /// has many
    pub c_userremuneration:Option<Vec<CUserremuneration>>,
}


#[derive(Debug)]
pub struct CRevenuerecognition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istimebased:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub nomonths:Option<f64>,
    /// db data type: character
    pub recognitionfrequency:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_revenuerecognition_plan:Option<Vec<CRevenuerecognitionPlan>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
}


#[derive(Debug)]
pub struct CRevenuerecognitionPlan {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_plan_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub p_revenue_acct:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub recognizedamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub unearnedrevenue_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_revenuerecognition:Option<CRevenuerecognition>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub unearnedrevenue_acct:Option<CValidcombination>,
    /// has one
    pub p_revenue_acct:Option<CValidcombination>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub c_revenuerecognition_run:Option<Vec<CRevenuerecognitionRun>>,
    /// has many
    pub c_servicelevel:Option<Vec<CServicelevel>>,
}


#[derive(Debug)]
pub struct CRevenuerecognitionRun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_run_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_plan_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub gl_journal_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub recognizedamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_revenuerecognition_plan:Option<CRevenuerecognitionPlan>,
    /// has one
    pub gl_journal:Option<GlJournal>,
}


#[derive(Debug)]
pub struct CRfq {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topic_id:f64,
    /// db data type: character
    pub copylines:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createpo:Option<String>,
    /// db data type: character
    pub createso:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateresponse:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateworkcomplete:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateworkstart:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub deliverydays:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: '.'::character varying
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvitedvendorsonly:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isquoteallqty:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isquotetotalamt:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrfqresponseaccepted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// db data type: numeric
    pub margin:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character
    pub publishrfq:Option<String>,
    /// not nullable 
    /// db data type: character
    pub quotetype:String,
    /// db data type: character
    pub rankrfq:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfq_topic:Option<CRfqTopic>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_order:Option<COrder>,
    /// has many
    pub c_rfqline:Option<Vec<CRfqline>>,
    /// has many
    pub c_rfqresponse:Option<Vec<CRfqresponse>>,
}


#[derive(Debug)]
pub struct CRfqTopic {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topic_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has many
    pub c_rfq:Option<Vec<CRfq>>,
    /// has many
    pub c_rfq_topicsubscriber:Option<Vec<CRfqTopicsubscriber>>,
}


#[derive(Debug)]
pub struct CRfqTopicsubscriber {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topicsubscriber_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topic_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: timestamp without time zone
    pub optoutdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub subscribedate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfq_topic:Option<CRfqTopic>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub c_rfq_topicsubscriberonly:Option<Vec<CRfqTopicsubscriberonly>>,
}


#[derive(Debug)]
pub struct CRfqTopicsubscriberonly {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topicsubscriberonly_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_topicsubscriber_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfq_topicsubscriber:Option<CRfqTopicsubscriber>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
}


#[derive(Debug)]
pub struct CRfqline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfqline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateworkcomplete:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateworkstart:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub deliverydays:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfq:Option<CRfq>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has many
    pub c_rfqlineqty:Option<Vec<CRfqlineqty>>,
    /// has many
    pub c_rfqresponseline:Option<Vec<CRfqresponseline>>,
}


#[derive(Debug)]
pub struct CRfqlineqty {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfqlineqty_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub benchmarkprice:f64,
    /// default: 0
    /// db data type: numeric
    pub bestresponseamt:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_rfqline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isofferqty:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispurchaseqty:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrfqqty:String,
    /// db data type: numeric
    pub margin:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub offeramt:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfqline:Option<CRfqline>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has many
    pub c_rfqresponselineqty:Option<Vec<CRfqresponselineqty>>,
}


#[derive(Debug)]
pub struct CRfqresponse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfqresponse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_rfq_id:f64,
    /// db data type: character
    pub checkcomplete:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateinvited:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateresponse:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateworkcomplete:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateworkstart:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub deliverydays:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscomplete:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselectedwinner:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub price:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub ranking:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfq:Option<CRfq>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_order:Option<COrder>,
    /// has many
    pub c_rfqresponseline:Option<Vec<CRfqresponseline>>,
}


#[derive(Debug)]
pub struct CRfqresponseline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfqresponseline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfqline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfqresponse_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateworkcomplete:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateworkstart:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub deliverydays:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselectedwinner:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfqline:Option<CRfqline>,
    /// has one
    pub c_rfqresponse:Option<CRfqresponse>,
    /// has many
    pub c_rfqresponselineqty:Option<Vec<CRfqresponselineqty>>,
}


#[derive(Debug)]
pub struct CRfqresponselineqty {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_rfqresponselineqty_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfqlineqty_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_rfqresponseline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub discount:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub price:f64,
    /// default: 0
    /// db data type: numeric
    pub ranking:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_rfqresponseline:Option<CRfqresponseline>,
    /// has one
    pub c_rfqlineqty:Option<CRfqlineqty>,
}


#[derive(Debug)]
pub struct CSaleshistory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_saleshistory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub costamt:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateinvoiced:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_class_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_classification_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_group_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: numeric
    pub priceinvoiced:Option<f64>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: numeric
    pub totalinvamt:Option<f64>,
    /// db data type: numeric
    pub totalinvcost:Option<f64>,
    /// db data type: numeric
    pub totalinvqty:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product_class:Option<MProductClass>,
    /// has one
    pub m_product_group:Option<MProductGroup>,
    /// has one
    pub m_product_classification:Option<MProductClassification>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub pp_forecastrunline:Option<Vec<PpForecastrunline>>,
}


#[derive(Debug)]
pub struct CSalesregion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_salesregion_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
}


#[derive(Debug)]
pub struct CSalesstage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_salesstage_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isclosed:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub iswon:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub probability:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_opportunity:Option<Vec<COpportunity>>,
}


#[derive(Debug)]
pub struct CServicelevel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_servicelevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_revenuerecognition_plan_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub servicelevelinvoiced:f64,
    /// not nullable 
    /// db data type: numeric
    pub servicelevelprovided:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_revenuerecognition_plan:Option<CRevenuerecognitionPlan>,
    /// has many
    pub c_servicelevelline:Option<Vec<CServicelevelline>>,
}


#[derive(Debug)]
pub struct CServicelevelline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_servicelevelline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_servicelevel_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub servicedate:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub servicelevelprovided:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_servicelevel:Option<CServicelevel>,
}


#[derive(Debug)]
pub struct CSubacct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_subacct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_elementvalue_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
}


#[derive(Debug)]
pub struct CSubscription {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_subscription_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_subscriptiontype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdue:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub paiduntildate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub renewaldate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_subscriptiontype:Option<CSubscriptiontype>,
    /// has many
    pub c_subscription_delivery:Option<Vec<CSubscriptionDelivery>>,
}


#[derive(Debug)]
pub struct CSubscriptionDelivery {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_subscription_delivery_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_subscription_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_subscription:Option<CSubscription>,
}


#[derive(Debug)]
pub struct CSubscriptiontype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_subscriptiontype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_subscription:Option<Vec<CSubscription>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
}


#[derive(Debug)]
pub struct CTask {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_task_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_phase_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub standardqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_phase:Option<CPhase>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub c_projecttask:Option<Vec<CProjecttask>>,
}


#[derive(Debug)]
pub struct CTax {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdocumentlevel:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issalestax:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxexempt:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub parent_tax_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub rate:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub requirestaxcertificate:String,
    /// default: 'B'::bpchar
    /// not nullable 
    /// db data type: character
    pub sopotype:String,
    /// db data type: character varying
    pub taxindicator:Option<String>,
    /// db data type: numeric
    pub to_country_id:Option<f64>,
    /// db data type: numeric
    pub to_region_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// has one, self referential
    pub parent_tax:Option<Box<CTax>>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub to_country:Option<CCountry>,
    /// has one
    pub to_region:Option<CRegion>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has many
    pub c_invoicebatchline:Option<Vec<CInvoicebatchline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_invoicetax:Option<Vec<CInvoicetax>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_ordertax:Option<Vec<COrdertax>>,
    /// has many
    pub c_tax:Option<Vec<CTax>>,
    /// has many
    pub c_tax_acct:Option<Vec<CTaxAcct>>,
    /// has many
    pub c_tax_trl:Option<Vec<CTaxTrl>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub c_taxpostal:Option<Vec<CTaxpostal>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
}


#[derive(Debug)]
pub struct CTaxAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub t_credit_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_due_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_liability_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub t_receivables_acct:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub t_due_acct:Option<CValidcombination>,
    /// has one
    pub t_liability_acct:Option<CValidcombination>,
    /// has one
    pub t_credit_acct:Option<CValidcombination>,
    /// has one
    pub t_receivables_acct:Option<CValidcombination>,
    /// has one
    pub t_expense_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CTaxTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub taxindicator:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CTaxbase {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxbase_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub base:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub percentage:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
}


#[derive(Debug)]
pub struct CTaxcategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub commoditycode:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_charge:Option<Vec<CCharge>>,
    /// has many
    pub c_tax:Option<Vec<CTax>>,
    /// has many
    pub c_taxcategory_trl:Option<Vec<CTaxcategoryTrl>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub i_elementvalue:Option<Vec<IElementvalue>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub s_expensetype:Option<Vec<SExpensetype>>,
    /// has many
    pub s_resourcetype:Option<Vec<SResourcetype>>,
    /// has many
    pub s_training:Option<Vec<STraining>>,
}


#[derive(Debug)]
pub struct CTaxcategoryTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CTaxdeclaration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxdeclaration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datefrom:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateto:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_taxdeclarationacct:Option<Vec<CTaxdeclarationacct>>,
    /// has many
    pub c_taxdeclarationline:Option<Vec<CTaxdeclarationline>>,
}


#[derive(Debug)]
pub struct CTaxdeclarationacct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxdeclarationacct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_taxdeclaration_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_taxdeclaration:Option<CTaxdeclaration>,
    /// has one
    pub fact_acct:Option<FactAcct>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct CTaxdeclarationline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxdeclarationline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_allocationline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_taxdeclaration_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub taxbaseamt:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_taxdeclaration:Option<CTaxdeclaration>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub c_allocationline:Option<CAllocationline>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct CTaxdefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxdefinition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtype_id:Option<f64>,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: numeric
    pub c_taxbase_id:Option<f64>,
    /// db data type: numeric
    pub c_taxcategory_id:Option<f64>,
    /// db data type: numeric
    pub c_taxgroup_id:Option<f64>,
    /// db data type: numeric
    pub c_taxtype_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isinvoiced:Option<String>,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub maxtaxable:Option<f64>,
    /// db data type: numeric
    pub mintaxable:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_taxbase:Option<CTaxbase>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub c_taxgroup:Option<CTaxgroup>,
    /// has one
    pub c_taxtype:Option<CTaxtype>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub ad_orgtype:Option<AdOrgtype>,
}


#[derive(Debug)]
pub struct CTaxgroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxgroup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
}


#[derive(Debug)]
pub struct CTaxpostal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxpostal_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_tax_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub postal:String,
    /// db data type: character varying
    pub postal_to:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_tax:Option<CTax>,
}


#[derive(Debug)]
pub struct CTaxtype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_taxtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
}


#[derive(Debug)]
pub struct CUom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub costingprecision:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub stdprecision:f64,
    /// db data type: character varying
    pub uomsymbol:Option<String>,
    /// db data type: character varying
    pub uomtype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub x12de355:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_rfqlineqty:Option<Vec<CRfqlineqty>>,
    /// has many
    pub c_uom_conversion:Option<Vec<CUomConversion>>,
    /// has many
    pub c_uom_trl:Option<Vec<CUomTrl>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub i_product:Option<Vec<IProduct>>,
    /// has many
    pub i_product_bom:Option<Vec<IProductBom>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_bom:Option<Vec<PpOrderBom>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_product_bom:Option<Vec<PpProductBom>>,
    /// has many
    pub pp_product_bomline:Option<Vec<PpProductBomline>>,
    /// has many
    pub s_expensetype:Option<Vec<SExpensetype>>,
    /// has many
    pub s_resourcetype:Option<Vec<SResourcetype>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub s_training:Option<Vec<STraining>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct CUomConversion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_uom_conversion_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_to_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub dividerate:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub multiplyrate:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_uom_to:Option<CUom>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct CUomTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub uomsymbol:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CUserremuneration {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_userremuneration_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_remuneration_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grossramt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grossrcost:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub overtimeamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub overtimecost:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_remuneration:Option<CRemuneration>,
}


#[derive(Debug)]
pub struct CValidcombination {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_validcombination_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub account_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: character varying
    pub alias:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_subacct_id:Option<f64>,
    /// db data type: character varying
    pub combination:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfullyqualified:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_subacct:Option<CSubacct>,
    /// has many
    pub c_acctschema_default:Option<Vec<CAcctschemaDefault>>,
    /// has many
    pub c_acctschema_gl:Option<Vec<CAcctschemaGl>>,
    /// has many
    pub c_bankaccount_acct:Option<Vec<CBankaccountAcct>>,
    /// has many
    pub c_bp_customer_acct:Option<Vec<CBpCustomerAcct>>,
    /// has many
    pub c_bp_employee_acct:Option<Vec<CBpEmployeeAcct>>,
    /// has many
    pub c_bp_group_acct:Option<Vec<CBpGroupAcct>>,
    /// has many
    pub c_bp_vendor_acct:Option<Vec<CBpVendorAcct>>,
    /// has many
    pub c_cashbook_acct:Option<Vec<CCashbookAcct>>,
    /// has many
    pub c_charge_acct:Option<Vec<CChargeAcct>>,
    /// has many
    pub c_currency_acct:Option<Vec<CCurrencyAcct>>,
    /// has many
    pub c_interorg_acct:Option<Vec<CInterorgAcct>>,
    /// has many
    pub c_project_acct:Option<Vec<CProjectAcct>>,
    /// has many
    pub c_revenuerecognition_plan:Option<Vec<CRevenuerecognitionPlan>>,
    /// has many
    pub c_tax_acct:Option<Vec<CTaxAcct>>,
    /// has many
    pub c_withholding_acct:Option<Vec<CWithholdingAcct>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_concept_acct:Option<Vec<HrConceptAcct>>,
    /// has many
    pub hr_concept_category:Option<Vec<HrConceptCategory>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub m_product_acct:Option<Vec<MProductAcct>>,
    /// has many
    pub m_product_category_acct:Option<Vec<MProductCategoryAcct>>,
    /// has many
    pub m_warehouse_acct:Option<Vec<MWarehouseAcct>>,
    /// has many
    pub test:Option<Vec<Test>>,
}


#[derive(Debug)]
pub struct CWithholding {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_withholding_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub beneficiary:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_paymentterm_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub fixamt:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispaidto3party:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispercentwithholding:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxprorated:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxwithholding:String,
    /// default: 0
    /// db data type: numeric
    pub maxamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub minamt:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// db data type: numeric
    pub percent:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub thresholdmax:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub thresholdmin:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub beneficiary:Option<CBpartner>,
    /// has many
    pub c_bp_withholding:Option<Vec<CBpWithholding>>,
    /// has many
    pub c_withholding_acct:Option<Vec<CWithholdingAcct>>,
}


#[derive(Debug)]
pub struct CWithholdingAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_withholding_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub withholding_acct:f64,
    /// has one
    pub c_withholding:Option<CWithholding>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub withholding_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct CYear {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub fiscalyear:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has many
    pub c_period:Option<Vec<CPeriod>>,
    /// has many
    pub hr_leaveassign:Option<Vec<HrLeaveassign>>,
    /// has many
    pub hr_leavecredithistory:Option<Vec<HrLeavecredithistory>>,
    /// has many
    pub hr_period:Option<Vec<HrPeriod>>,
    /// has many
    pub hr_year:Option<Vec<HrYear>>,
    /// has many
    pub m_demand:Option<Vec<MDemand>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
}


#[derive(Debug)]
pub struct CmAccesscontainer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
    /// has one
    pub cm_container:Option<CmContainer>,
}


#[derive(Debug)]
pub struct CmAccesslistbpgroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
}


#[derive(Debug)]
pub struct CmAccesslistrole {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
    /// has one
    pub ad_role:Option<AdRole>,
}


#[derive(Debug)]
pub struct CmAccessmedia {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_media_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_media:Option<CmMedia>,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
}


#[derive(Debug)]
pub struct CmAccessnewschannel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_newschannel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
    /// has one
    pub cm_newschannel:Option<CmNewschannel>,
}


#[derive(Debug)]
pub struct CmAccessprofile {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexclude:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub cm_accesscontainer:Option<Vec<CmAccesscontainer>>,
    /// has many
    pub cm_accesslistbpgroup:Option<Vec<CmAccesslistbpgroup>>,
    /// has many
    pub cm_accesslistrole:Option<Vec<CmAccesslistrole>>,
    /// has many
    pub cm_accessmedia:Option<Vec<CmAccessmedia>>,
    /// has many
    pub cm_accessnewschannel:Option<Vec<CmAccessnewschannel>>,
    /// has many
    pub cm_accessstage:Option<Vec<CmAccessstage>>,
}


#[derive(Debug)]
pub struct CmAccessstage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_accessprofile_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_accessprofile:Option<CmAccessprofile>,
    /// has one
    pub cm_cstage:Option<CmCstage>,
}


#[derive(Debug)]
pub struct CmAd {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_ad_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub actualclick:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub actualimpression:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_ad_cat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_media_id:f64,
    /// db data type: character varying
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isadflag:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub islogged:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub maxclick:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub maximpression:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub startimpression:f64,
    /// not nullable 
    /// db data type: character varying
    pub target_frame:String,
    /// db data type: character varying
    pub targeturl:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_ad_cat:Option<CmAdCat>,
    /// has one
    pub cm_media:Option<CmMedia>,
}


#[derive(Debug)]
pub struct CmAdCat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_ad_cat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has many
    pub cm_ad:Option<Vec<CmAd>>,
    /// has many
    pub cm_template_ad_cat:Option<Vec<CmTemplateAdCat>>,
}


#[derive(Debug)]
pub struct CmBroadcastserver {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_broadcastserver_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub cm_webproject_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub ip_address:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: timestamp without time zone
    pub lastsynchronized:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has many
    pub cm_webaccesslog:Option<Vec<CmWebaccesslog>>,
}


#[derive(Debug)]
pub struct CmChat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_chat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub cm_chattype_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub confidentialtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub moderationtype:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub cm_chattype:Option<CmChattype>,
    /// has many
    pub cm_chatentry:Option<Vec<CmChatentry>>,
    /// has many
    pub cm_chatupdate:Option<Vec<CmChatupdate>>,
}


#[derive(Debug)]
pub struct CmChatentry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_chatentry_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: text
    pub characterdata:Option<String>,
    /// not nullable 
    /// db data type: character
    pub chatentrytype:String,
    /// not nullable 
    /// db data type: numeric
    pub cm_chat_id:f64,
    /// db data type: numeric
    pub cm_chatentrygrandparent_id:Option<f64>,
    /// db data type: numeric
    pub cm_chatentryparent_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub confidentialtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub moderatorstatus:Option<String>,
    /// db data type: character varying
    pub subject:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_chat:Option<CmChat>,
    /// has one, self referential
    pub cm_chatentryparent:Option<Box<CmChatentry>>,
    /// has one, self referential
    pub cm_chatentrygrandparent:Option<Box<CmChatentry>>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub cm_chatentry:Option<Vec<CmChatentry>>,
}


#[derive(Debug)]
pub struct CmChattype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_chattype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub moderationtype:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub cm_chat:Option<Vec<CmChat>>,
    /// has many
    pub cm_chattypeupdate:Option<Vec<CmChattypeupdate>>,
}


#[derive(Debug)]
pub struct CmChattypeupdate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_chattype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_chattype:Option<CmChattype>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct CmChatupdate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_chat_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_chat:Option<CmChat>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct CmContainer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub cm_containerlink_id:Option<f64>,
    /// db data type: numeric
    pub cm_template_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// db data type: character varying
    pub containerlinkurl:Option<String>,
    /// db data type: character
    pub containertype:Option<String>,
    /// db data type: character varying
    pub containerxml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindexed:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issecure:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// db data type: character varying
    pub meta_author:Option<String>,
    /// db data type: character varying
    pub meta_content:Option<String>,
    /// db data type: character varying
    pub meta_copyright:Option<String>,
    /// db data type: character varying
    pub meta_description:Option<String>,
    /// db data type: character varying
    pub meta_keywords:Option<String>,
    /// db data type: character
    pub meta_language:Option<String>,
    /// db data type: character varying
    pub meta_publisher:Option<String>,
    /// db data type: character varying
    pub meta_robotstag:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub notice:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub priority:Option<f64>,
    /// db data type: character varying
    pub relativeurl:Option<String>,
    /// db data type: character varying
    pub structurexml:Option<String>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub cm_template:Option<CmTemplate>,
    /// has one, self referential
    pub cm_containerlink:Option<Box<CmContainer>>,
    /// has many
    pub cm_accesscontainer:Option<Vec<CmAccesscontainer>>,
    /// has many
    pub cm_container:Option<Vec<CmContainer>>,
    /// has many
    pub cm_container_element:Option<Vec<CmContainerElement>>,
    /// has many
    pub cm_container_trl:Option<Vec<CmContainerTrl>>,
    /// has many
    pub cm_container_url:Option<Vec<CmContainerUrl>>,
    /// has many
    pub cm_containerttable:Option<Vec<CmContainerttable>>,
    /// has many
    pub cm_webproject_domain:Option<Vec<CmWebprojectDomain>>,
}


#[derive(Debug)]
pub struct CmContainerElement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// db data type: text
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_container:Option<CmContainer>,
    /// has many
    pub cm_container_element_trl:Option<Vec<CmContainerElementTrl>>,
}


#[derive(Debug)]
pub struct CmContainerElementTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: text
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_container_element:Option<CmContainerElement>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CmContainerTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub containerxml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub meta_description:Option<String>,
    /// db data type: character varying
    pub meta_keywords:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub structurexml:Option<String>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_container:Option<CmContainer>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CmContainerUrl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_container_url_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub checked:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub last_result:String,
    /// not nullable 
    /// db data type: character
    pub status:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_container:Option<CmContainer>,
}


#[derive(Debug)]
pub struct CmContainerttable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_containerttable_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_container_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_templatetable_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub otherclause:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub cm_container:Option<CmContainer>,
    /// has one
    pub cm_templatetable:Option<CmTemplatetable>,
}


#[derive(Debug)]
pub struct CmCstage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub cm_cstagelink_id:Option<f64>,
    /// db data type: numeric
    pub cm_template_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// db data type: character varying
    pub containerlinkurl:Option<String>,
    /// db data type: character
    pub containertype:Option<String>,
    /// db data type: character varying
    pub containerxml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindexed:String,
    /// not nullable 
    /// db data type: character
    pub ismodified:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issecure:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isvalid:Option<String>,
    /// db data type: character varying
    pub meta_author:Option<String>,
    /// db data type: character varying
    pub meta_content:Option<String>,
    /// db data type: character varying
    pub meta_copyright:Option<String>,
    /// db data type: character varying
    pub meta_description:Option<String>,
    /// db data type: character varying
    pub meta_keywords:Option<String>,
    /// db data type: character
    pub meta_language:Option<String>,
    /// db data type: character varying
    pub meta_publisher:Option<String>,
    /// db data type: character varying
    pub meta_robotstag:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub notice:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub priority:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub relativeurl:Option<String>,
    /// db data type: character varying
    pub structurexml:Option<String>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub cm_template:Option<CmTemplate>,
    /// has one, self referential
    pub cm_cstagelink:Option<Box<CmCstage>>,
    /// has many
    pub cm_accessstage:Option<Vec<CmAccessstage>>,
    /// has many
    pub cm_cstage:Option<Vec<CmCstage>>,
    /// has many
    pub cm_cstage_element:Option<Vec<CmCstageElement>>,
    /// has many
    pub cm_cstage_trl:Option<Vec<CmCstageTrl>>,
    /// has many
    pub cm_cstagettable:Option<Vec<CmCstagettable>>,
}


#[derive(Debug)]
pub struct CmCstageElement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_id:f64,
    /// db data type: text
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_cstage:Option<CmCstage>,
    /// has many
    pub cm_cstage_element_trl:Option<Vec<CmCstageElementTrl>>,
}


#[derive(Debug)]
pub struct CmCstageElementTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_element_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: text
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_cstage_element:Option<CmCstageElement>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CmCstageTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub containerxml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub meta_description:Option<String>,
    /// db data type: character varying
    pub meta_keywords:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub structurexml:Option<String>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_cstage:Option<CmCstage>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct CmCstagettable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_cstagettable_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_cstage_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_templatetable_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub otherclause:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub cm_cstage:Option<CmCstage>,
    /// has one
    pub cm_templatetable:Option<CmTemplatetable>,
}


#[derive(Debug)]
pub struct CmMedia {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_media_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// db data type: text
    pub contenttext:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub directdeploy:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// db data type: character
    pub mediatype:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has many
    pub cm_accessmedia:Option<Vec<CmAccessmedia>>,
    /// has many
    pub cm_ad:Option<Vec<CmAd>>,
    /// has many
    pub cm_mediadeploy:Option<Vec<CmMediadeploy>>,
    /// has many
    pub cm_webaccesslog:Option<Vec<CmWebaccesslog>>,
}


#[derive(Debug)]
pub struct CmMediaServer {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_media_server_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub folder:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub ip_address:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispassive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub password:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub url:Option<String>,
    /// db data type: character varying
    pub username:Option<String>,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has many
    pub cm_mediadeploy:Option<Vec<CmMediadeploy>>,
}


#[derive(Debug)]
pub struct CmMediadeploy {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_mediadeploy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_media_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_media_server_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdeployed:String,
    /// db data type: timestamp without time zone
    pub lastsynchronized:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_media_server:Option<CmMediaServer>,
    /// has one
    pub cm_media:Option<CmMedia>,
}


#[derive(Debug)]
pub struct CmNewschannel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_newschannel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: character varying
    pub ad_language:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub link:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has many
    pub cm_accessnewschannel:Option<Vec<CmAccessnewschannel>>,
    /// has many
    pub cm_newsitem:Option<Vec<CmNewsitem>>,
}


#[derive(Debug)]
pub struct CmNewsitem {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_newsitem_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub author:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub cm_newschannel_id:f64,
    /// db data type: text
    pub contenthtml:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub linkurl:Option<String>,
    /// db data type: timestamp without time zone
    pub pubdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_newschannel:Option<CmNewschannel>,
}


#[derive(Debug)]
pub struct CmTemplate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_template_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub cm_webproject_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub elements:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinclude:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isnews:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isusead:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: text
    pub templatexst:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has many
    pub cm_container:Option<Vec<CmContainer>>,
    /// has many
    pub cm_cstage:Option<Vec<CmCstage>>,
    /// has many
    pub cm_template_ad_cat:Option<Vec<CmTemplateAdCat>>,
    /// has many
    pub cm_templatetable:Option<Vec<CmTemplatetable>>,
}


#[derive(Debug)]
pub struct CmTemplateAdCat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_ad_cat_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_template_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_ad_cat:Option<CmAdCat>,
    /// has one
    pub cm_template:Option<CmTemplate>,
}


#[derive(Debug)]
pub struct CmTemplatetable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_templatetable_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub cm_template_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub otherclause:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub cm_template:Option<CmTemplate>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub cm_containerttable:Option<Vec<CmContainerttable>>,
    /// has many
    pub cm_cstagettable:Option<Vec<CmCstagettable>>,
}


#[derive(Debug)]
pub struct CmWebaccesslog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_webaccesslog_id:f64,
    /// db data type: character varying
    pub acceptlanguage:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub cm_broadcastserver_id:Option<f64>,
    /// db data type: numeric
    pub cm_media_id:Option<f64>,
    /// db data type: numeric
    pub cm_webproject_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub filesize:Option<f64>,
    /// db data type: character varying
    pub hyphen:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub ip_address:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub logtype:String,
    /// db data type: character varying
    pub pageurl:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub protocol:String,
    /// db data type: character varying
    pub referrer:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub requesttype:String,
    /// default: 0
    /// db data type: numeric
    pub statuscode:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub useragent:Option<String>,
    /// db data type: character varying
    pub websession:Option<String>,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub cm_broadcastserver:Option<CmBroadcastserver>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub cm_media:Option<CmMedia>,
}


#[derive(Debug)]
pub struct CmWebproject {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_treecmc_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_treecmm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_treecms_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_treecmt_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub meta_author:String,
    /// not nullable 
    /// db data type: character varying
    pub meta_content:String,
    /// not nullable 
    /// db data type: character varying
    pub meta_copyright:String,
    /// not nullable 
    /// db data type: character varying
    pub meta_publisher:String,
    /// not nullable 
    /// db data type: character varying
    pub meta_robotstag:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_treecmc:Option<AdTree>,
    /// has one
    pub ad_treecms:Option<AdTree>,
    /// has one
    pub ad_treecmm:Option<AdTree>,
    /// has one
    pub ad_treecmt:Option<AdTree>,
    /// has many
    pub cm_ad_cat:Option<Vec<CmAdCat>>,
    /// has many
    pub cm_broadcastserver:Option<Vec<CmBroadcastserver>>,
    /// has many
    pub cm_container:Option<Vec<CmContainer>>,
    /// has many
    pub cm_cstage:Option<Vec<CmCstage>>,
    /// has many
    pub cm_media:Option<Vec<CmMedia>>,
    /// has many
    pub cm_media_server:Option<Vec<CmMediaServer>>,
    /// has many
    pub cm_newschannel:Option<Vec<CmNewschannel>>,
    /// has many
    pub cm_template:Option<Vec<CmTemplate>>,
    /// has many
    pub cm_webaccesslog:Option<Vec<CmWebaccesslog>>,
    /// has many
    pub cm_webproject_domain:Option<Vec<CmWebprojectDomain>>,
    /// has many
    pub k_index:Option<Vec<KIndex>>,
    /// has many
    pub k_indexstop:Option<Vec<KIndexstop>>,
}


#[derive(Debug)]
pub struct CmWebprojectDomain {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_domain_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub cm_container_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub cm_webproject_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub fqdn:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub cm_container:Option<CmContainer>,
}


#[derive(Debug)]
pub struct CmWikitoken {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub cm_wikitoken_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub macro_:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub selectclause:Option<String>,
    /// not nullable 
    /// db data type: character
    pub tokentype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct DdNetworkdistribution {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub dd_networkdistribution_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub revision:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has many
    pub dd_networkdistributionline:Option<Vec<DdNetworkdistributionline>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
}


#[derive(Debug)]
pub struct DdNetworkdistributionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub dd_networkdistributionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub dd_networkdistribution_id:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_shipper_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehousesource_id:f64,
    /// db data type: numeric
    pub percent:Option<f64>,
    /// db data type: numeric
    pub priorityno:Option<f64>,
    /// db data type: numeric
    pub transfertime:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub m_warehousesource:Option<MWarehouse>,
    /// has one
    pub dd_networkdistribution:Option<DdNetworkdistribution>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
}


#[derive(Debug)]
pub struct DdOrder {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub dd_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character
    pub createconfirm:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: character
    pub createpackage:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateordered:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateprinted:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datepromised:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub datereceived:Option<NaiveDateTime>,
    /// default: 'A'::bpchar
    /// not nullable 
    /// db data type: character
    pub deliveryrule:String,
    /// default: 'P'::bpchar
    /// not nullable 
    /// db data type: character
    pub deliveryviarule:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'CO'::bpchar
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// default: 'DR'::bpchar
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// default: 'I'::bpchar
    /// not nullable 
    /// db data type: character
    pub freightcostrule:String,
    /// db data type: character
    pub generateto:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// db data type: character
    pub isdelivered:Option<String>,
    /// db data type: character
    pub isdropship:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isindispute:String,
    /// not nullable 
    /// db data type: character
    pub isintransit:String,
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// db data type: character
    pub isselected:Option<String>,
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: numeric
    pub nopackages:Option<f64>,
    /// db data type: timestamp without time zone
    pub pickdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: '5'::bpchar
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub ref_order_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// db data type: timestamp without time zone
    pub shipdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub trackingno:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub volume:Option<f64>,
    /// db data type: numeric
    pub weight:Option<f64>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct DdOrderline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub dd_orderline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// db data type: numeric
    pub confirmedqty:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datedelivered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateordered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub dd_order_id:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdescription:String,
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub linenetamt:Option<f64>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_attributesetinstanceto_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_locatorto_id:f64,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// db data type: numeric
    pub pickedqty:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub qtydelivered:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub qtyentered:f64,
    /// db data type: numeric
    pub qtyintransit:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub qtyordered:f64,
    /// db data type: numeric
    pub qtyreserved:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// db data type: numeric
    pub targetqty:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub wm_inoutboundline_id:Option<f64>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub dd_order:Option<DdOrder>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstanceto:Option<MAttributesetinstance>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_locatorto:Option<MLocator>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub wm_inoutboundline:Option<WmInoutboundline>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct ExpFormat {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub exp_format_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character
    pub testexportmodel:Option<String>,
    /// db data type: character
    pub testimportmodel:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// not nullable 
    /// db data type: character varying
    pub version:String,
    /// db data type: character varying
    pub whereclause:Option<String>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has many
    pub exp_formatline:Option<Vec<ExpFormatline>>,
}


#[derive(Debug)]
pub struct ExpFormatline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub exp_formatline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub dateformat:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub exp_embeddedformat_id:Option<f64>,
    /// db data type: numeric
    pub exp_format_id:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub ismandatory:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ispartuniqueindex:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub position:Option<f64>,
    /// default: 'E'::bpchar
    /// not nullable 
    /// db data type: character
    pub type_:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub exp_format:Option<ExpFormat>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub exp_embeddedformat:Option<ExpFormat>,
}


#[derive(Debug)]
pub struct ExpProcessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub exp_processor_id:f64,
    /// db data type: character varying
    pub account:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub exp_processor_type_id:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub host:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub passwordinfo:Option<String>,
    /// db data type: numeric
    pub port:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub exp_processor_type:Option<ExpProcessorType>,
    /// has many
    pub ad_replicationstrategy:Option<Vec<AdReplicationstrategy>>,
    /// has many
    pub exp_processorparameter:Option<Vec<ExpProcessorparameter>>,
}


#[derive(Debug)]
pub struct ExpProcessorType {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub exp_processor_type_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub javaclass:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub exp_processor:Option<Vec<ExpProcessor>>,
}


#[derive(Debug)]
pub struct ExpProcessorparameter {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub exp_processorparameter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub exp_processor_id:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub parametervalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub exp_processor:Option<ExpProcessor>,
}


#[derive(Debug)]
pub struct FactAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub account_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtacctcr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtacctdr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtsourcecr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtsourcedr:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_subacct_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_subacct:Option<CSubacct>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one, extension table
    pub fact_reconciliation:Option<Box<FactReconciliation>>,
    /// has many
    pub c_taxdeclarationacct:Option<Vec<CTaxdeclarationacct>>,
    /// has many
    pub t_invoicegl:Option<Vec<TInvoicegl>>,
}


#[derive(Debug)]
pub struct FactAcctSummary {
    /// not nullable 
    /// db data type: numeric
    pub account_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub amtacctcr:f64,
    /// not nullable 
    /// db data type: numeric
    pub amtacctdr:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_subacct_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcube_id:f64,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_subacct:Option<CSubacct>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pa_reportcube:Option<PaReportcube>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct FactReconciliation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub matchcode:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub fact_acct:Option<FactAcct>,
}


#[derive(Debug)]
pub struct GlBudget {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_budget_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub budgetstatus:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprimary:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_budgetcontrol:Option<Vec<GlBudgetcontrol>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportline:Option<Vec<PaReportline>>,
}


#[derive(Debug)]
pub struct GlBudgetcontrol {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_budgetcontrol_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub budgetcontrolscope:String,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: character
    pub commitmenttype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub gl_budget_id:f64,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbeforeapproval:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub gl_budget:Option<GlBudget>,
}


#[derive(Debug)]
pub struct GlCategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub categorytype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub docbasetype:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub a_asset_reval_entry:Option<Vec<AAssetRevalEntry>>,
    /// has many
    pub a_depreciation_entry:Option<Vec<ADepreciationEntry>>,
    /// has many
    pub c_doctype:Option<Vec<CDoctype>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalbatch:Option<Vec<GlJournalbatch>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
}


#[derive(Debug)]
pub struct GlDistribution {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_distribution_id:f64,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyacct:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyactivity:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anybpartner:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anycampaign:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anylocfrom:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anylocto:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyorg:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyorgtrx:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyproduct:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyproject:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anysalesregion:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyuser1:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub anyuser2:String,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreatereversal:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isvalid:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub percenttotal:f64,
    /// db data type: character
    pub postingtype:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
}


#[derive(Debug)]
pub struct GlDistributionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_distributionline_id:f64,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub gl_distribution_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteacct:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteactivity:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritebpartner:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritecampaign:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritelocfrom:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritelocto:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteorg:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteorgtrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteproduct:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteproject:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwritesalesregion:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteuser1:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub overwriteuser2:String,
    /// not nullable 
    /// db data type: numeric
    pub percent:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub gl_distribution:Option<GlDistribution>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct GlFund {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_fund_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amt:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datefrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has many
    pub gl_fundrestriction:Option<Vec<GlFundrestriction>>,
}


#[derive(Debug)]
pub struct GlFundrestriction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_fundrestriction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_elementvalue_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub gl_fund_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub gl_fund:Option<GlFund>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct GlJournal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_journal_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontype_id:f64,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// default: 0
    /// db data type: numeric
    pub controlamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currencyrate:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub gl_category_id:f64,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalcr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totaldr:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one, self referential
    pub reversal:Option<Box<GlJournal>>,
    /// has many
    pub c_revenuerecognition_run:Option<Vec<CRevenuerecognitionRun>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
}


#[derive(Debug)]
pub struct GlJournalbatch {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_journalbatch_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub controlamt:Option<f64>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datedoc:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isapproved:Option<String>,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalcr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totaldr:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one, self referential
    pub reversal:Option<Box<GlJournalbatch>>,
    /// has many
    pub a_asset_addition:Option<Vec<AAssetAddition>>,
    /// has many
    pub c_recurring:Option<Vec<CRecurring>>,
    /// has many
    pub c_recurring_run:Option<Vec<CRecurringRun>>,
    /// has many
    pub gl_journal:Option<Vec<GlJournal>>,
    /// has many
    pub gl_journalbatch:Option<Vec<GlJournalbatch>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
}


#[derive(Debug)]
pub struct GlJournalline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub gl_journalline_id:f64,
    /// db data type: numeric
    pub a_asset_group_id:Option<f64>,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub a_createasset:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub a_processed:Option<String>,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub alias_validcombination_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtacctcr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtacctdr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtsourcecr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtsourcedr:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_subacct_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: numeric
    pub c_validcombination_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currencyrate:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub gl_journal_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isgenerated:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub gl_journal:Option<GlJournal>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_validcombination:Option<CValidcombination>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub alias_validcombination:Option<CValidcombination>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_subacct:Option<CSubacct>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub userelement1:Option<CElementvalue>,
    /// has one
    pub userelement2:Option<CElementvalue>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
}


#[derive(Debug)]
pub struct HrAttribute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_attribute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// db data type: numeric
    pub amount:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: character
    pub columntype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_attribute_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// db data type: numeric
    pub hr_job_id:Option<f64>,
    /// db data type: numeric
    pub hr_payroll_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isprinted:Option<String>,
    /// db data type: numeric
    pub maxvalue:Option<f64>,
    /// db data type: numeric
    pub minvalue:Option<f64>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: timestamp without time zone
    pub servicedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub hr_attribute_acct:Option<CValidcombination>,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_job:Option<HrJob>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_charge:Option<CCharge>,
}


#[derive(Debug)]
pub struct HrCareerlevel {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_careerlevel_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
}


#[derive(Debug)]
pub struct HrConcept {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// db data type: character
    pub accountsign:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_reference_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub columntype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_concept_category_id:Option<f64>,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// db data type: numeric
    pub hr_job_id:Option<f64>,
    /// db data type: numeric
    pub hr_payroll_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdefault:Option<String>,
    /// db data type: character
    pub isemployee:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isinvoiced:Option<String>,
    /// db data type: character
    pub ismanual:Option<String>,
    /// db data type: character
    pub ispaid:Option<String>,
    /// db data type: character
    pub isprinted:Option<String>,
    /// db data type: character
    pub isreceipt:Option<String>,
    /// db data type: character
    pub issaveinhistoric:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub type_:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_concept_category:Option<HrConceptCategory>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_job:Option<HrJob>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has one
    pub ad_reference:Option<AdReference>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_concept_acct:Option<Vec<HrConceptAcct>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_payrollconcept:Option<Vec<HrPayrollconcept>>,
    /// has many
    pub hr_salarystructureline:Option<Vec<HrSalarystructureline>>,
    /// has many
    pub i_hr_movement:Option<Vec<IHrMovement>>,
}


#[derive(Debug)]
pub struct HrConceptAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_acct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_expense_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_revenue_acct:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isbalancing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CValidcombination>,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_revenue_acct:Option<CValidcombination>,
    /// has one
    pub hr_expense_acct:Option<CValidcombination>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct HrConceptCategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_concept_acct:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdefault:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_concept_acct:Option<CValidcombination>,
    /// has many
    pub hr_concept:Option<Vec<HrConcept>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
}


#[derive(Debug)]
pub struct HrContract {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_contract_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub netdays:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_project:Option<CProject>,
    /// has many
    pub hr_payroll:Option<Vec<HrPayroll>>,
}


#[derive(Debug)]
pub struct HrDegree {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_degree_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_education:Option<Vec<HrEducation>>,
}


#[derive(Debug)]
pub struct HrDepartment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_department_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub strengthrequired:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_concept:Option<Vec<HrConcept>>,
    /// has many
    pub hr_departmentproduct:Option<Vec<HrDepartmentproduct>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_job:Option<Vec<HrJob>>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
    /// has many
    pub hr_list:Option<Vec<HrList>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
}


#[derive(Debug)]
pub struct HrDepartmentproduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_departmentproduct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub actualqty:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datefrom:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateto:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub hr_department_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyplan:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub hr_department:Option<HrDepartment>,
}


#[derive(Debug)]
pub struct HrDesignation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_designation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_employeetype_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_payroll_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_salarystructure_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_salarystructure:Option<HrSalarystructure>,
    /// has one
    pub hr_employeetype:Option<HrEmployeetype>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has many
    pub hr_jobapplication:Option<Vec<HrJobapplication>>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
}


#[derive(Debug)]
pub struct HrEducation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_education_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub duration:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_degree_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_employee_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub schoolcollege:Option<String>,
    /// db data type: character varying
    pub schoolcollegeaddress:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub yearofpassing:String,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_degree:Option<HrDegree>,
}


#[derive(Debug)]
pub struct HrEmployee {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employee_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub birthday:Option<NaiveDateTime>,
    /// db data type: character varying
    pub bloodgroup:Option<String>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// db data type: character varying
    pub code:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub dailysalary:Option<f64>,
    /// db data type: numeric
    pub employeeimage_id:Option<f64>,
    /// db data type: character varying
    pub employeestatus:Option<String>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub fathersname:Option<String>,
    /// db data type: character varying
    pub gender:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_department_id:f64,
    /// db data type: numeric
    pub hr_employeetype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_job_id:f64,
    /// db data type: numeric
    pub hr_payroll_id:Option<f64>,
    /// db data type: numeric
    pub hr_race_id:Option<f64>,
    /// db data type: numeric
    pub hr_skilltype_id:Option<f64>,
    /// db data type: character varying
    pub identificationmark:Option<String>,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismanager:Option<String>,
    /// db data type: numeric
    pub logo_id:Option<f64>,
    /// db data type: character varying
    pub maritalstatus:Option<String>,
    /// db data type: timestamp without time zone
    pub marriageanniversarydate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub monthlysalary:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub name2:Option<String>,
    /// db data type: character varying
    pub nationalcode:Option<String>,
    /// db data type: numeric
    pub nationality_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub partnersbirthdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub partnersname:Option<String>,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// db data type: character varying
    pub placeofbirth:Option<String>,
    /// db data type: character varying
    pub sscode:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// db data type: numeric
    pub thumbimage_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_job:Option<HrJob>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub nationality:Option<CCountry>,
    /// has one
    pub hr_race:Option<HrRace>,
    /// has one
    pub hr_skilltype:Option<HrSkilltype>,
    /// has one
    pub hr_employeetype:Option<HrEmployeetype>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_education:Option<Vec<HrEducation>>,
    /// has many
    pub hr_employeedependent:Option<Vec<HrEmployeedependent>>,
    /// has many
    pub hr_employeeexperience:Option<Vec<HrEmployeeexperience>>,
    /// has many
    pub hr_employeeinsurance:Option<Vec<HrEmployeeinsurance>>,
    /// has many
    pub hr_employeeweeklyoff:Option<Vec<HrEmployeeweeklyoff>>,
    /// has many
    pub hr_leaveassign:Option<Vec<HrLeaveassign>>,
    /// has many
    pub hr_leavecredithistory:Option<Vec<HrLeavecredithistory>>,
    /// has many
    pub hr_list:Option<Vec<HrList>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
}


#[derive(Debug)]
pub struct HrEmployeedependent {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employeedependent_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub age:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub birthday:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_employee_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_relationship_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub iscollectcash:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_relationship:Option<HrRelationship>,
}


#[derive(Debug)]
pub struct HrEmployeeexperience {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employeeexperience_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub company:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datefrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub designationwhenleft:Option<String>,
    /// db data type: character varying
    pub designationwherejoined:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_employee_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_employee:Option<HrEmployee>,
}


#[derive(Debug)]
pub struct HrEmployeeinsurance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employeeinsurance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub balanceamount:Option<f64>,
    /// db data type: numeric
    pub claimedamount:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub coverageamount:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastpaid:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datelastpremium:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_employee_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_insurancetype_id:f64,
    /// db data type: numeric
    pub hr_period_id:Option<f64>,
    /// db data type: character varying
    pub insuranceplan:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub paydate:NaiveDateTime,
    /// not nullable 
    /// db data type: character varying
    pub paymentfrequency:String,
    /// not nullable 
    /// db data type: numeric
    pub premiumamount:f64,
    /// not nullable 
    /// db data type: character varying
    pub reference:String,
    /// not nullable 
    /// db data type: character varying
    pub sponsorname:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_insurancetype:Option<HrInsurancetype>,
    /// has one
    pub hr_period:Option<HrPeriod>,
}


#[derive(Debug)]
pub struct HrEmployeetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employeetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub wagelevel:String,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has many
    pub hr_designation:Option<Vec<HrDesignation>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_leavetypeemployeetype:Option<Vec<HrLeavetypeemployeetype>>,
}


#[derive(Debug)]
pub struct HrEmployeeweeklyoff {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_employeeweeklyoff_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub onfriday:Option<String>,
    /// db data type: character
    pub onmonday:Option<String>,
    /// db data type: character
    pub onsaturday:Option<String>,
    /// db data type: character
    pub onsunday:Option<String>,
    /// db data type: character
    pub onthursday:Option<String>,
    /// db data type: character
    pub ontuesday:Option<String>,
    /// db data type: character
    pub onwednesday:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_employee:Option<HrEmployee>,
}


#[derive(Debug)]
pub struct HrGrade {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_grade_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
}


#[derive(Debug)]
pub struct HrInsurancetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_insurancetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_employeeinsurance:Option<Vec<HrEmployeeinsurance>>,
}


#[derive(Debug)]
pub struct HrInterview {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_interview_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpname:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub feedback:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_jobapplication_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isinterviewover:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isselected:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub rating:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_jobapplication:Option<HrJobapplication>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
}


#[derive(Debug)]
pub struct HrJob {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_job_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isparent:Option<String>,
    /// db data type: numeric
    pub jobcant:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub next_job_id:Option<f64>,
    /// db data type: numeric
    pub supervisor_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one, self referential
    pub next_job:Option<Box<HrJob>>,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_concept:Option<Vec<HrConcept>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_job:Option<Vec<HrJob>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
}


#[derive(Debug)]
pub struct HrJobapplication {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobapplication_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub applicantsno:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub city:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub comments:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub company:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub email:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub fathername:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub firstname:String,
    /// not nullable 
    /// db data type: character varying
    pub highesteducation:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_designation_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_jobopening_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub identityproof:String,
    /// not nullable 
    /// db data type: character varying
    pub identityproofno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isformeremployee:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isinterviewover:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isselected:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub iswillingtorelocate:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub iswillingtotravel:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub jobapplicationdate:NaiveDateTime,
    /// db data type: character varying
    pub lastname:Option<String>,
    /// db data type: character varying
    pub middlename:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub phone:String,
    /// not nullable 
    /// db data type: character varying
    pub phone2:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub recruitedemployee_id:Option<f64>,
    /// db data type: numeric
    pub ref_bpartner_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// default: 'Applied'::character varying
    /// db data type: character varying
    pub status:Option<String>,
    /// db data type: timestamp without time zone
    pub terminationdate:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub totalrelevantexperience:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub yearofpassing:String,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ref_bpartner:Option<CBpartner>,
    /// has one
    pub hr_designation:Option<HrDesignation>,
    /// has one
    pub hr_jobopening:Option<HrJobopening>,
    /// has one
    pub recruitedemployee:Option<CBpartner>,
    /// has many
    pub hr_interview:Option<Vec<HrInterview>>,
    /// has many
    pub hr_jobapplicationhistory:Option<Vec<HrJobapplicationhistory>>,
}


#[derive(Debug)]
pub struct HrJobapplicationhistory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobapplicationhistory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_jobapplication_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub remarks:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub status:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_jobapplication:Option<HrJobapplication>,
}


#[derive(Debug)]
pub struct HrJobeducation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobeducation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
}


#[derive(Debug)]
pub struct HrJobopening {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobopening_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'CO'::bpchar
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// default: 'DR'::character varying
    /// not nullable 
    /// db data type: character varying
    pub docstatus:String,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: numeric
    pub hr_careerlevel_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_designation_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_jobeducation_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_jobtype_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_salaryrange_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: character
    pub ishrapproved:String,
    /// not nullable 
    /// db data type: character
    pub ismanagerapproved:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub openpositions:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub primaryskills:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub pubdate:NaiveDateTime,
    /// default: NULL::character varying
    /// db data type: character varying
    pub responsibilities:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub secondaryskills:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub supervisor_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// db data type: character varying
    pub value:Option<String>,
    /// default: 'Requested'::character varying
    /// db data type: character varying
    pub wfstate:Option<String>,
    /// has one, self referential
    pub hr_jobopening:Option<Box<HrJobopening>>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_careerlevel:Option<HrCareerlevel>,
    /// has one
    pub hr_jobeducation:Option<HrJobeducation>,
    /// has one
    pub hr_jobtype:Option<HrJobtype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub hr_designation:Option<HrDesignation>,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub hr_salaryrange:Option<HrSalaryrange>,
    /// has one, extension table
    pub hr_jobopening:Option<Box<HrJobopening>>,
    /// has many
    pub hr_jobapplication:Option<Vec<HrJobapplication>>,
    /// has many
    pub hr_jobopeninghistory:Option<Vec<HrJobopeninghistory>>,
}


#[derive(Debug)]
pub struct HrJobopeninghistory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobopeninghistory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub currentstatus:Option<String>,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_jobopening_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub remarks:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub status:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_jobopening:Option<HrJobopening>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct HrJobtype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_jobtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
}


#[derive(Debug)]
pub struct HrLeaveassign {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leaveassign_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub balance:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetype_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub noofleavesallocated:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub totalleaves:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub usedleaves:Option<f64>,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_leavetype:Option<HrLeavetype>,
    /// has one
    pub c_year:Option<CYear>,
    /// has many
    pub hr_leavecredithistory:Option<Vec<HrLeavecredithistory>>,
}


#[derive(Debug)]
pub struct HrLeavecredithistory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leavecredithistory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_leaveassign_id:f64,
    /// db data type: numeric
    pub hr_leavereason_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetype_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub noofleavescredited:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_leavereason:Option<HrLeavereason>,
    /// has one
    pub hr_leavetype:Option<HrLeavetype>,
    /// has one
    pub c_year:Option<CYear>,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_leaveassign:Option<HrLeaveassign>,
}


#[derive(Debug)]
pub struct HrLeavereason {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leavereason_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub leavereasontype:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_leavecredithistory:Option<Vec<HrLeavecredithistory>>,
}


#[derive(Debug)]
pub struct HrLeavetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub adjacentholidaytype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isadjacentholidayasleave:Option<String>,
    /// db data type: character
    pub isallowedencashment:Option<String>,
    /// db data type: character
    pub ishalfdayleaveallowed:Option<String>,
    /// db data type: character
    pub isleaverepeated:Option<String>,
    /// db data type: character
    pub isleavesforwardtonextyear:Option<String>,
    /// db data type: character
    pub isprovidentfund:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub leavecredittimetype:String,
    /// db data type: numeric
    pub maxcontinousleaves:Option<f64>,
    /// db data type: numeric
    pub maxleavestoforward:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub minattendancerequire:f64,
    /// db data type: numeric
    pub minforencashmentdays:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub noofleavesallocated:f64,
    /// db data type: character varying
    pub repeatedtype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_leaveassign:Option<Vec<HrLeaveassign>>,
    /// has many
    pub hr_leavecredithistory:Option<Vec<HrLeavecredithistory>>,
    /// has many
    pub hr_leavetypecombination:Option<Vec<HrLeavetypecombination>>,
    /// has many
    pub hr_leavetypeemployeetype:Option<Vec<HrLeavetypeemployeetype>>,
}


#[derive(Debug)]
pub struct HrLeavetypecombination {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetypecombination_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub allowedleavetype_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetype_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_leavetype:Option<HrLeavetype>,
    /// has one
    pub allowedleavetype:Option<HrLeavetype>,
}


#[derive(Debug)]
pub struct HrLeavetypeemployeetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetypeemployeetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_employeetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_leavetype_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_leavetype:Option<HrLeavetype>,
    /// has one
    pub hr_employeetype:Option<HrEmployeetype>,
}


#[derive(Debug)]
pub struct HrList {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_list_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// db data type: numeric
    pub hr_listtype_id:Option<f64>,
    /// db data type: numeric
    pub hr_payroll_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isemployee:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub hr_listtype:Option<HrListtype>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has many
    pub hr_listversion:Option<Vec<HrListversion>>,
}


#[derive(Debug)]
pub struct HrListline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_listline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub col_1:Option<f64>,
    /// db data type: numeric
    pub col_2:Option<f64>,
    /// db data type: numeric
    pub col_3:Option<f64>,
    /// db data type: numeric
    pub col_4:Option<f64>,
    /// db data type: numeric
    pub col_5:Option<f64>,
    /// db data type: numeric
    pub col_6:Option<f64>,
    /// db data type: numeric
    pub col_7:Option<f64>,
    /// db data type: numeric
    pub col_8:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub hr_listversion_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub maxvalue:f64,
    /// not nullable 
    /// db data type: numeric
    pub minvalue:f64,
    /// db data type: character varying
    pub name:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_listversion:Option<HrListversion>,
}


#[derive(Debug)]
pub struct HrListtype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_listtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_list:Option<Vec<HrList>>,
}


#[derive(Debug)]
pub struct HrListversion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_listversion_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_list_id:f64,
    /// db data type: numeric
    pub hr_listbase_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// has one
    pub hr_listbase:Option<HrList>,
    /// has one
    pub hr_list:Option<HrList>,
    /// has many
    pub hr_listline:Option<Vec<HrListline>>,
}


#[derive(Debug)]
pub struct HrMovement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_movement_id:f64,
    /// db data type: character
    pub accountsign:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// db data type: numeric
    pub amount:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bp_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// db data type: character
    pub columntype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_concept_category_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// db data type: numeric
    pub hr_job_id:Option<f64>,
    /// db data type: numeric
    pub hr_process_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub ismanual:Option<String>,
    /// db data type: character
    pub isprinted:Option<String>,
    /// db data type: numeric
    pub pp_cost_collector_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: timestamp without time zone
    pub servicedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub hr_concept_category:Option<HrConceptCategory>,
    /// has one
    pub hr_process:Option<HrProcess>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_job:Option<HrJob>,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub pp_cost_collector:Option<PpCostCollector>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_bp_bankaccount:Option<CBpBankaccount>,
    /// has many
    pub hr_payselectionline:Option<Vec<HrPayselectionline>>,
    /// has many
    pub i_hr_movement:Option<Vec<IHrMovement>>,
}


#[derive(Debug)]
pub struct HrPayroll {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_contract_id:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub hr_contract:Option<HrContract>,
    /// has many
    pub hr_attribute:Option<Vec<HrAttribute>>,
    /// has many
    pub hr_concept:Option<Vec<HrConcept>>,
    /// has many
    pub hr_designation:Option<Vec<HrDesignation>>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
    /// has many
    pub hr_employeetype:Option<Vec<HrEmployeetype>>,
    /// has many
    pub hr_list:Option<Vec<HrList>>,
    /// has many
    pub hr_payrollconcept:Option<Vec<HrPayrollconcept>>,
    /// has many
    pub hr_period:Option<Vec<HrPeriod>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub hr_year:Option<Vec<HrYear>>,
}


#[derive(Debug)]
pub struct HrPayrollconcept {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_payrollconcept_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isdisplayed:Option<String>,
    /// db data type: character
    pub isinclude:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
}


#[derive(Debug)]
pub struct HrPayselection {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_payselection_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::bpchar
    /// db data type: character
    pub createfrom:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub paydate:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: numeric
    pub totalamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has many
    pub hr_payselectioncheck:Option<Vec<HrPayselectioncheck>>,
    /// has many
    pub hr_payselectionline:Option<Vec<HrPayselectionline>>,
}


#[derive(Debug)]
pub struct HrPayselectioncheck {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_payselectioncheck_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bp_bankaccount_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub documentno:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub hr_payselection_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isgenerateddraft:String,
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// not nullable 
    /// db data type: character
    pub isreceipt:String,
    /// not nullable 
    /// db data type: numeric
    pub payamt:f64,
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bp_bankaccount:Option<CBpBankaccount>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub hr_payselection:Option<HrPayselection>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has many
    pub hr_payselectionline:Option<Vec<HrPayselectionline>>,
}


#[derive(Debug)]
pub struct HrPayselectionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_payselectionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub differenceamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub discountamt:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_movement_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_payselection_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_payselectioncheck_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub payamt:f64,
    /// default: 'S'::bpchar
    /// not nullable 
    /// db data type: character
    pub paymentrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_payselectioncheck:Option<HrPayselectioncheck>,
    /// has one
    pub hr_payselection:Option<HrPayselection>,
    /// has one
    pub hr_movement:Option<HrMovement>,
}


#[derive(Debug)]
pub struct HrPeriod {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_period_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// db data type: numeric
    pub hr_year_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub periodaction:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub periodno:f64,
    /// db data type: character varying
    pub periodstatus:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character varying
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_year:Option<CYear>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has one
    pub hr_year:Option<HrYear>,
    /// has many
    pub hr_employeeinsurance:Option<Vec<HrEmployeeinsurance>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
}


#[derive(Debug)]
pub struct HrProcess {
    /// primary
    /// default: (-1)
    /// not nullable 
    /// db data type: numeric
    pub hr_process_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctypetarget_id:f64,
    /// db data type: numeric
    pub c_payselection_id:Option<f64>,
    /// db data type: character varying
    pub columnsql:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// default: 'CO'::bpchar
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// default: 'DR'::character varying
    /// not nullable 
    /// db data type: character varying
    pub docstatus:String,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: numeric
    pub hr_department_id:Option<f64>,
    /// db data type: numeric
    pub hr_employee_id:Option<f64>,
    /// db data type: numeric
    pub hr_job_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// db data type: numeric
    pub hr_period_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_job:Option<HrJob>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_payselection:Option<CPayselection>,
    /// has one
    pub hr_employee:Option<HrEmployee>,
    /// has one
    pub c_doctypetarget:Option<CDoctype>,
    /// has one
    pub hr_department:Option<HrDepartment>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has one
    pub hr_period:Option<HrPeriod>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one, self referential
    pub reversal:Option<Box<HrProcess>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub hr_process:Option<Vec<HrProcess>>,
    /// has many
    pub i_hr_movement:Option<Vec<IHrMovement>>,
}


#[derive(Debug)]
pub struct HrRace {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_race_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
}


#[derive(Debug)]
pub struct HrRelationship {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_relationship_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub c_bpartner_location:Option<Vec<CBpartnerLocation>>,
    /// has many
    pub hr_employeedependent:Option<Vec<HrEmployeedependent>>,
}


#[derive(Debug)]
pub struct HrSalaryrange {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_salaryrange_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub maxvalue:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub minvalue:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_jobopening:Option<Vec<HrJobopening>>,
}


#[derive(Debug)]
pub struct HrSalarystructure {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_salarystructure_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validto:NaiveDateTime,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has one, self referential
    pub hr_salarystructure:Option<Box<HrSalarystructure>>,
    /// has one, extension table
    pub hr_salarystructure:Option<Box<HrSalarystructure>>,
    /// has many
    pub hr_designation:Option<Vec<HrDesignation>>,
    /// has many
    pub hr_salarystructureline:Option<Vec<HrSalarystructureline>>,
}


#[derive(Debug)]
pub struct HrSalarystructureline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_salarystructureline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub amount:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_concept_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_salarystructure_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub percentage:f64,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_salarystructure:Option<HrSalarystructure>,
}


#[derive(Debug)]
pub struct HrShiftgroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_shiftgroup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub noofhoursthisshift:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has one, self referential
    pub hr_shiftgroup:Option<Box<HrShiftgroup>>,
    /// has one, extension table
    pub hr_shiftgroup:Option<Box<HrShiftgroup>>,
    /// has many
    pub hr_workgroup:Option<Vec<HrWorkgroup>>,
    /// has many
    pub hr_workshift:Option<Vec<HrWorkshift>>,
}


#[derive(Debug)]
pub struct HrSkilltype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_skilltype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has many
    pub hr_employee:Option<Vec<HrEmployee>>,
}


#[derive(Debug)]
pub struct HrWorkgroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_workgroup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_shiftgroup_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_workshift_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isshiftallocation:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_workshift:Option<HrWorkshift>,
    /// has one
    pub hr_shiftgroup:Option<HrShiftgroup>,
}


#[derive(Debug)]
pub struct HrWorkshift {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_workshift_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub hr_shiftgroup_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub ishasfixedworkgroup:String,
    /// not nullable 
    /// db data type: character
    pub isovertimeapplicable:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub noofhours:Option<f64>,
    /// db data type: numeric
    pub overtimeamount:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub shiftfromtime:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub shifttotime:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub hr_shiftgroup:Option<HrShiftgroup>,
    /// has many
    pub hr_workgroup:Option<Vec<HrWorkgroup>>,
}


#[derive(Debug)]
pub struct HrYear {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub hr_year_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub hr_payroll_id:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub netdays:f64,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_year:Option<CYear>,
    /// has one
    pub hr_payroll:Option<HrPayroll>,
    /// has many
    pub hr_period:Option<Vec<HrPeriod>>,
}


#[derive(Debug)]
pub struct IAsset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_asset_id:f64,
    /// db data type: numeric
    pub a_accumdepreciation_acct:Option<f64>,
    /// db data type: numeric
    pub a_accumulated_depr:Option<f64>,
    /// db data type: numeric
    pub a_asset_acct:Option<f64>,
    /// db data type: numeric
    pub a_asset_cost:Option<f64>,
    /// db data type: numeric
    pub a_asset_group_id:Option<f64>,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_asset_life_current_year:Option<f64>,
    /// db data type: numeric
    pub a_asset_life_years:Option<f64>,
    /// db data type: character varying
    pub a_asset_spread_type:Option<String>,
    /// db data type: numeric
    pub a_base_amount:Option<f64>,
    /// db data type: numeric
    pub a_calc_accumulated_depr:Option<f64>,
    /// db data type: numeric
    pub a_curr_dep_exp:Option<f64>,
    /// db data type: numeric
    pub a_current_period:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_acct:Option<f64>,
    /// db data type: character varying
    pub a_depreciation_calc_type:Option<String>,
    /// db data type: numeric
    pub a_depreciation_manual_amount:Option<f64>,
    /// db data type: character varying
    pub a_depreciation_manual_period:Option<String>,
    /// db data type: numeric
    pub a_depreciation_table_header_id:Option<f64>,
    /// db data type: numeric
    pub a_depreciation_variable_perc:Option<f64>,
    /// db data type: character varying
    pub a_disposal_loss:Option<String>,
    /// db data type: character varying
    pub a_disposal_revenue:Option<String>,
    /// db data type: numeric
    pub a_life_period:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub a_parent_asset_id:Option<f64>,
    /// db data type: numeric
    pub a_period_end:Option<f64>,
    /// db data type: numeric
    pub a_period_posted:Option<f64>,
    /// db data type: numeric
    pub a_period_start:Option<f64>,
    /// db data type: numeric
    pub a_prior_year_accumulated_depr:Option<f64>,
    /// db data type: numeric
    pub a_qty_current:Option<f64>,
    /// db data type: numeric
    pub a_qty_original:Option<f64>,
    /// db data type: character varying
    pub a_reval_accumdep_offset_cur:Option<String>,
    /// db data type: character varying
    pub a_reval_accumdep_offset_prior:Option<String>,
    /// db data type: character varying
    pub a_reval_cal_method:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset:Option<String>,
    /// db data type: character varying
    pub a_reval_cost_offset_prior:Option<String>,
    /// db data type: character varying
    pub a_reval_depexp_offset:Option<String>,
    /// db data type: numeric
    pub a_salvage_value:Option<f64>,
    /// db data type: numeric
    pub a_split_percent:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetdepreciationdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub assetdisposaldate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub assetmarketvalueamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub assetservicedate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: character varying
    pub conventiontype:Option<String>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub depreciationtype:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub guaranteedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// db data type: character
    pub i_isimported:Option<String>,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub isdepreciated:Option<String>,
    /// db data type: character
    pub isdisposed:Option<String>,
    /// db data type: character
    pub isfullydepreciated:Option<String>,
    /// db data type: character
    pub isinposession:Option<String>,
    /// db data type: character
    pub isowned:Option<String>,
    /// db data type: numeric
    pub lifeuseunits:Option<f64>,
    /// db data type: character varying
    pub locationcomment:Option<String>,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub postingtype:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub uselifemonths:Option<f64>,
    /// db data type: numeric
    pub uselifeyears:Option<f64>,
    /// db data type: numeric
    pub useunits:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// db data type: character varying
    pub versionno:Option<String>,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has one
    pub a_depreciation_table_header:Option<ADepreciationTableHeader>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_location:Option<CLocation>,
}


#[derive(Debug)]
pub struct IBankstatement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_bankstatement_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: character varying
    pub bankaccountno:Option<String>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bankstatement_id:Option<f64>,
    /// db data type: numeric
    pub c_bankstatementline_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character varying
    pub chargename:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character
    pub createpayment:Option<String>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub eftamt:Option<f64>,
    /// db data type: character varying
    pub eftcheckno:Option<String>,
    /// db data type: character varying
    pub eftcurrency:Option<String>,
    /// db data type: character varying
    pub eftmemo:Option<String>,
    /// db data type: character varying
    pub eftpayee:Option<String>,
    /// db data type: character varying
    pub eftpayeeaccount:Option<String>,
    /// db data type: character varying
    pub eftreference:Option<String>,
    /// db data type: timestamp without time zone
    pub eftstatementdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub eftstatementlinedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub eftstatementreference:Option<String>,
    /// db data type: character varying
    pub efttrxid:Option<String>,
    /// db data type: character varying
    pub efttrxtype:Option<String>,
    /// db data type: timestamp without time zone
    pub eftvalutadate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 0
    /// db data type: numeric
    pub interestamt:Option<f64>,
    /// db data type: character varying
    pub invoicedocumentno:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iso_code:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isreversal:Option<String>,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: character varying
    pub linedescription:Option<String>,
    /// db data type: character
    pub matchstatement:Option<String>,
    /// db data type: character varying
    pub memo:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub paymentdocumentno:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub referenceno:Option<String>,
    /// db data type: character varying
    pub routingno:Option<String>,
    /// db data type: timestamp without time zone
    pub statementdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub statementlinedate:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub stmtamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub trxamt:Option<f64>,
    /// db data type: character varying
    pub trxtype:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: timestamp without time zone
    pub valutadate:Option<NaiveDateTime>,
    /// has one
    pub c_bankstatement:Option<CBankstatement>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_bankstatementline:Option<CBankstatementline>,
}


#[derive(Debug)]
pub struct IBpartner {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_bpartner_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub address1:Option<String>,
    /// db data type: character varying
    pub address2:Option<String>,
    /// db data type: timestamp without time zone
    pub birthday:Option<NaiveDateTime>,
    /// db data type: character varying
    pub bpcontactgreeting:Option<String>,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// db data type: numeric
    pub c_greeting_id:Option<f64>,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// db data type: character varying
    pub city:Option<String>,
    /// db data type: character varying
    pub comments:Option<String>,
    /// db data type: character varying
    pub contactdescription:Option<String>,
    /// db data type: character varying
    pub contactname:Option<String>,
    /// db data type: character
    pub countrycode:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub duns:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character varying
    pub fax:Option<String>,
    /// db data type: character varying
    pub groupvalue:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// db data type: character varying
    pub interestareaname:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iscustomer:Option<String>,
    /// db data type: character
    pub isemployee:Option<String>,
    /// db data type: character
    pub isvendor:Option<String>,
    /// db data type: character
    pub naics:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub name2:Option<String>,
    /// db data type: character varying
    pub password:Option<String>,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub phone2:Option<String>,
    /// db data type: character varying
    pub postal:Option<String>,
    /// db data type: character varying
    pub postal_add:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub r_interestarea_id:Option<f64>,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// db data type: character varying
    pub taxid:Option<String>,
    /// db data type: character varying
    pub title:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub c_greeting:Option<CGreeting>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_interestarea:Option<RInterestarea>,
}


#[derive(Debug)]
pub struct IBudget {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_budget_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub accountvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub acctschemaname:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub assetvalue:Option<String>,
    /// db data type: character varying
    pub batchdocumentno:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub budgetcode:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_validcombination_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub campaignvalue:Option<String>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// db data type: character
    pub i_isimported:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub jnl_line_description:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub month_0_amt:Option<f64>,
    /// db data type: numeric
    pub month_0_qty:Option<f64>,
    /// db data type: numeric
    pub month_10_amt:Option<f64>,
    /// db data type: numeric
    pub month_10_qty:Option<f64>,
    /// db data type: numeric
    pub month_11_amt:Option<f64>,
    /// db data type: numeric
    pub month_11_qty:Option<f64>,
    /// db data type: numeric
    pub month_1_amt:Option<f64>,
    /// db data type: numeric
    pub month_1_qty:Option<f64>,
    /// db data type: numeric
    pub month_2_amt:Option<f64>,
    /// db data type: numeric
    pub month_2_qty:Option<f64>,
    /// db data type: numeric
    pub month_3_amt:Option<f64>,
    /// db data type: numeric
    pub month_3_qty:Option<f64>,
    /// db data type: numeric
    pub month_4_amt:Option<f64>,
    /// db data type: numeric
    pub month_4_qty:Option<f64>,
    /// db data type: numeric
    pub month_5_amt:Option<f64>,
    /// db data type: numeric
    pub month_5_qty:Option<f64>,
    /// db data type: numeric
    pub month_6_amt:Option<f64>,
    /// db data type: numeric
    pub month_6_qty:Option<f64>,
    /// db data type: numeric
    pub month_7_amt:Option<f64>,
    /// db data type: numeric
    pub month_7_qty:Option<f64>,
    /// db data type: numeric
    pub month_8_amt:Option<f64>,
    /// db data type: numeric
    pub month_8_qty:Option<f64>,
    /// db data type: numeric
    pub month_9_amt:Option<f64>,
    /// db data type: numeric
    pub month_9_qty:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub orgtrxvalue:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub projectvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub salesregionvalue:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
}


#[derive(Debug)]
pub struct IConversionRate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_conversion_rate_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub c_conversion_rate_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id_to:Option<f64>,
    /// db data type: character varying
    pub conversiontypevalue:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub createreciprocalrate:Option<String>,
    /// db data type: numeric
    pub dividerate:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub i_isimported:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iso_code:Option<String>,
    /// db data type: character
    pub iso_code_to:Option<String>,
    /// db data type: numeric
    pub multiplyrate:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub c_conversion_rate:Option<CConversionRate>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_currency_id_to:Option<CCurrency>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
}


#[derive(Debug)]
pub struct IElementvalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_elementvalue_id:f64,
    /// db data type: character
    pub accountsign:Option<String>,
    /// db data type: character
    pub accounttype:Option<String>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_element_id:Option<f64>,
    /// db data type: numeric
    pub c_elementvalue_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_taxcategory_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub chargename:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub default_account:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub elementname:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdoccontrolled:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub issummary:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub parentelementvalue_id:Option<f64>,
    /// db data type: character varying
    pub parentvalue:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub postactual:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub postbudget:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub postencumbrance:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub poststatistical:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub taxcategoryname:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub c_element:Option<CElement>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has one
    pub parentelementvalue:Option<CElementvalue>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
}


#[derive(Debug)]
pub struct IFajournal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_fajournal_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// db data type: character varying
    pub a_entry_type:Option<String>,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// db data type: character varying
    pub accountvalue:Option<String>,
    /// db data type: character varying
    pub acctschemaname:Option<String>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgdoc_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub amtacctcr:Option<f64>,
    /// db data type: numeric
    pub amtacctdr:Option<f64>,
    /// db data type: numeric
    pub amtsourcecr:Option<f64>,
    /// db data type: numeric
    pub amtsourcedr:Option<f64>,
    /// db data type: character varying
    pub batchdescription:Option<String>,
    /// db data type: character varying
    pub batchdocumentno:Option<String>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_subacct_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: numeric
    pub c_validcombination_id:Option<f64>,
    /// db data type: character varying
    pub categoryname:Option<String>,
    /// db data type: character varying
    pub clientvalue:Option<String>,
    /// db data type: character varying
    pub conversiontypevalue:Option<String>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: numeric
    pub currencyrate:Option<f64>,
    /// db data type: character
    pub currencyratetype:Option<String>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// db data type: numeric
    pub gl_journal_id:Option<f64>,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// db data type: numeric
    pub gl_journalline_id:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub isdepreciated:Option<String>,
    /// db data type: character varying
    pub iso_code:Option<String>,
    /// db data type: character varying
    pub journaldocumentno:Option<String>,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub orgtrxvalue:Option<String>,
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: character varying
    pub projectvalue:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub ad_orgdoc:Option<AdOrg>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub gl_journal:Option<GlJournal>,
    /// has one
    pub gl_journalline:Option<GlJournalline>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_validcombination:Option<CValidcombination>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
}


#[derive(Debug)]
pub struct IForecast {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_forecast_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub i_isimported:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_forecast_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_forecastline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub salesrep_name:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub warehousevalue:Option<String>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub m_forecast:Option<MForecast>,
    /// has one
    pub m_forecastline:Option<MForecastline>,
}


#[derive(Debug)]
pub struct IGljournal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_gljournal_id:f64,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// db data type: character varying
    pub accountvalue:Option<String>,
    /// db data type: character varying
    pub acctschemaname:Option<String>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgdoc_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub amtacctcr:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub amtacctdr:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub amtsourcecr:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub amtsourcedr:Option<f64>,
    /// db data type: character varying
    pub batchdescription:Option<String>,
    /// db data type: character varying
    pub batchdocumentno:Option<String>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_conversiontype_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: numeric
    pub c_validcombination_id:Option<f64>,
    /// db data type: character varying
    pub categoryname:Option<String>,
    /// db data type: character varying
    pub clientvalue:Option<String>,
    /// db data type: character varying
    pub conversiontypevalue:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub currencyrate:Option<f64>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// db data type: numeric
    pub gl_journal_id:Option<f64>,
    /// db data type: numeric
    pub gl_journalbatch_id:Option<f64>,
    /// db data type: numeric
    pub gl_journalline_id:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iscreatenewbatch:Option<String>,
    /// db data type: character
    pub iscreatenewjournal:Option<String>,
    /// db data type: character
    pub iso_code:Option<String>,
    /// db data type: character varying
    pub journaldocumentno:Option<String>,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub orgtrxvalue:Option<String>,
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: character varying
    pub projectvalue:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_orgdoc:Option<AdOrg>,
    /// has one
    pub gl_journalbatch:Option<GlJournalbatch>,
    /// has one
    pub gl_journal:Option<GlJournal>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub gl_category:Option<GlCategory>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub gl_journalline:Option<GlJournalline>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_validcombination:Option<CValidcombination>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_locto:Option<CLocation>,
    /// has one
    pub c_locfrom:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct IHrMovement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_hr_movement_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub amount:Option<f64>,
    /// db data type: character varying
    pub bpartner_value:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: character varying
    pub conceptvalue:Option<String>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub hr_concept_id:Option<f64>,
    /// db data type: numeric
    pub hr_movement_id:Option<f64>,
    /// db data type: numeric
    pub hr_process_id:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::character varying
    /// not nullable 
    /// db data type: character varying
    pub i_isimported:String,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub processname:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: timestamp without time zone
    pub servicedate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub hr_concept:Option<HrConcept>,
    /// has one
    pub hr_process:Option<HrProcess>,
    /// has one
    pub hr_movement:Option<HrMovement>,
}


#[derive(Debug)]
pub struct IInoutlineconfirm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_inoutlineconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub confirmationno:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub confirmedqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub differenceqty:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_inoutlineconfirm_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inoutlineconfirm:Option<MInoutlineconfirm>,
}


#[derive(Debug)]
pub struct IInventory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_inventory_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character varying
    pub locatorvalue:Option<String>,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: numeric
    pub m_inventory_id:Option<f64>,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub movementdate:Option<NaiveDateTime>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qtybook:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtycount:Option<f64>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// db data type: character varying
    pub warehousevalue:Option<String>,
    /// db data type: character varying
    pub x:Option<String>,
    /// db data type: character varying
    pub y:Option<String>,
    /// db data type: character varying
    pub z:Option<String>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_inventory:Option<MInventory>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
}


#[derive(Debug)]
pub struct IInvoice {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_invoice_id:f64,
    /// db data type: character varying
    pub activityvalue:Option<String>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub address1:Option<String>,
    /// db data type: character varying
    pub address2:Option<String>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_dunninglevel_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: character varying
    pub chargename:Option<String>,
    /// db data type: character varying
    pub city:Option<String>,
    /// db data type: character varying
    pub contactname:Option<String>,
    /// db data type: character
    pub countrycode:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateinvoiced:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: timestamp without time zone
    pub dunninggrace:Option<NaiveDateTime>,
    /// db data type: character varying
    pub email:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub invoicecollectiontype:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub issotrx:Option<String>,
    /// db data type: character varying
    pub linedescription:Option<String>,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub paymenttermvalue:Option<String>,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub postal:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub priceactual:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: character varying
    pub projectvalue:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qtyordered:Option<f64>,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub taxamt:Option<f64>,
    /// db data type: character varying
    pub taxindicator:Option<String>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_dunninglevel:Option<CDunninglevel>,
}


#[derive(Debug)]
pub struct IMovement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_movement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: character varying
    pub campaignvalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub deliveryrule:Option<String>,
    /// db data type: character varying
    pub deliveryviarule:Option<String>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: character varying
    pub freightcostrule:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub locatortovalue:Option<String>,
    /// db data type: character varying
    pub locatorvalue:Option<String>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_locatorto_id:Option<f64>,
    /// db data type: numeric
    pub m_movement_id:Option<f64>,
    /// db data type: numeric
    pub m_movementline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub movementdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub movementqty:Option<f64>,
    /// db data type: character varying
    pub orgtrxvalue:Option<String>,
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: character varying
    pub priorityrule:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: character varying
    pub projectvalue:Option<String>,
    /// db data type: character varying
    pub shippername:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub user1_id:Option<String>,
    /// db data type: character varying
    pub user2_id:Option<String>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub m_movement:Option<MMovement>,
    /// has one
    pub m_movementline:Option<MMovementline>,
}


#[derive(Debug)]
pub struct IOrder {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_order_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub address1:Option<String>,
    /// db data type: character varying
    pub address2:Option<String>,
    /// db data type: numeric
    pub billto_id:Option<f64>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_ordersource_id:Option<f64>,
    /// db data type: character varying
    pub c_ordersourcevalue:Option<String>,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: character varying
    pub chargename:Option<String>,
    /// db data type: character varying
    pub city:Option<String>,
    /// db data type: character varying
    pub contactname:Option<String>,
    /// db data type: character
    pub countrycode:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateordered:Option<NaiveDateTime>,
    /// db data type: character
    pub deliveryrule:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub issotrx:Option<String>,
    /// db data type: character varying
    pub linedescription:Option<String>,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub paymenttermvalue:Option<String>,
    /// db data type: character varying
    pub phone:Option<String>,
    /// db data type: character varying
    pub postal:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub priceactual:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qtyordered:Option<f64>,
    /// db data type: character varying
    pub regionname:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub taxamt:Option<f64>,
    /// db data type: character varying
    pub taxindicator:Option<String>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub billto:Option<CBpartnerLocation>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_tax:Option<CTax>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_ordersource:Option<COrdersource>,
}


#[derive(Debug)]
pub struct IPayment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_payment_id:f64,
    /// db data type: character varying
    pub a_city:Option<String>,
    /// db data type: character varying
    pub a_country:Option<String>,
    /// db data type: character varying
    pub a_email:Option<String>,
    /// db data type: character varying
    pub a_ident_dl:Option<String>,
    /// db data type: character varying
    pub a_ident_ssn:Option<String>,
    /// db data type: character varying
    pub a_name:Option<String>,
    /// db data type: character varying
    pub a_state:Option<String>,
    /// db data type: character varying
    pub a_street:Option<String>,
    /// db data type: character varying
    pub a_zip:Option<String>,
    /// db data type: character varying
    pub accountno:Option<String>,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: character varying
    pub bankaccountno:Option<String>,
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// db data type: numeric
    pub c_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character varying
    pub chargename:Option<String>,
    /// db data type: character varying
    pub checkno:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: numeric
    pub creditcardexpmm:Option<f64>,
    /// db data type: numeric
    pub creditcardexpyy:Option<f64>,
    /// db data type: character varying
    pub creditcardnumber:Option<String>,
    /// db data type: character
    pub creditcardtype:Option<String>,
    /// db data type: character varying
    pub creditcardvv:Option<String>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub discountamt:Option<f64>,
    /// db data type: character varying
    pub doctypename:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// db data type: character varying
    pub invoicedocumentno:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isapproved:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdelayedcapture:Option<String>,
    /// db data type: character
    pub iso_code:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isoverunderpayment:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isreceipt:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isselfservice:Option<String>,
    /// db data type: character varying
    pub micr:Option<String>,
    /// db data type: character varying
    pub orig_trxid:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub overunderamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub payamt:Option<f64>,
    /// db data type: character varying
    pub ponum:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub r_authcode:Option<String>,
    /// db data type: character varying
    pub r_info:Option<String>,
    /// db data type: character varying
    pub r_pnref:Option<String>,
    /// db data type: character varying
    pub r_respmsg:Option<String>,
    /// db data type: character varying
    pub r_result:Option<String>,
    /// db data type: character varying
    pub routingno:Option<String>,
    /// db data type: character varying
    pub swipe:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub taxamt:Option<f64>,
    /// db data type: character
    pub tendertype:Option<String>,
    /// db data type: character
    pub trxtype:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub voiceauthcode:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub writeoffamt:Option<f64>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_bankaccount:Option<CBankaccount>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_charge:Option<CCharge>,
}


#[derive(Debug)]
pub struct IPricelist {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_pricelist_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: character varying
    pub bpartner_value:Option<String>,
    /// db data type: numeric
    pub breakvalue:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub enforcepricelimit:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character varying
    pub iso_code:Option<String>,
    /// db data type: character
    pub issopricelist:Option<String>,
    /// db data type: character
    pub istaxincluded:Option<String>,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// db data type: numeric
    pub m_pricelist_version_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub pricelimit:Option<f64>,
    /// db data type: numeric
    pub pricelist:Option<f64>,
    /// db data type: numeric
    pub priceprecision:Option<f64>,
    /// db data type: numeric
    pub pricestd:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: character varying
    pub x12de355:Option<String>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_pricelist_version:Option<MPricelistVersion>,
}


#[derive(Debug)]
pub struct IProduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_product_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: character varying
    pub bpartner_value:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: character
    pub classification:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub costperorder:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: numeric
    pub deliverytime_promised:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub descriptionurl:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub discontinued:Option<String>,
    /// db data type: timestamp without time zone
    pub discontinuedat:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub discontinuedby:Option<NaiveDateTime>,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iso_code:Option<String>,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub manufacturer:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub order_min:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub order_pack:Option<f64>,
    /// db data type: timestamp without time zone
    pub priceeffective:Option<NaiveDateTime>,
    /// db data type: numeric
    pub pricelimit:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelist:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricepo:Option<f64>,
    /// db data type: numeric
    pub pricestd:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub productcategory_value:Option<String>,
    /// default: 'I'::bpchar
    /// db data type: character
    pub producttype:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub royaltyamt:Option<f64>,
    /// db data type: numeric
    pub shelfdepth:Option<f64>,
    /// db data type: numeric
    pub shelfheight:Option<f64>,
    /// db data type: numeric
    pub shelfwidth:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// db data type: numeric
    pub unitsperpallet:Option<f64>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// db data type: character varying
    pub vendorcategory:Option<String>,
    /// db data type: character varying
    pub vendorproductno:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub volume:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub weight:Option<f64>,
    /// db data type: character varying
    pub x12de355:Option<String>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct IProductAsi {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_product_asi_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributename:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributesearchname:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributesetname:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub attributevaluetype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub elementname:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub guaranteedays:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub i_isimported:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isguaranteedate:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isguaranteedatemandatory:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isinstanceattribute:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub islot:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub islotmandatory:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub ismandatory:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isserno:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub issernomandatory:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attribute_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attributesearch_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attributeset_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attributevalue_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub mandatorytype:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
    /// has one
    pub m_attributesearch:Option<MAttributesearch>,
    /// has one
    pub m_attribute:Option<MAttribute>,
    /// has one
    pub m_attributevalue:Option<MAttributevalue>,
}


#[derive(Debug)]
pub struct IProductBom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_product_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub assay:Option<f64>,
    /// db data type: character varying
    pub backflushgroup:Option<String>,
    /// db data type: character varying
    pub bomtype:Option<String>,
    /// db data type: character varying
    pub bomuse:Option<String>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: character varying
    pub componenttype:Option<String>,
    /// db data type: numeric
    pub costallocationperc:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iscritical:Option<String>,
    /// db data type: character
    pub isqtypercentage:Option<String>,
    /// db data type: character
    pub issuemethod:Option<String>,
    /// db data type: numeric
    pub leadtimeoffset:Option<f64>,
    /// db data type: numeric
    pub m_bomproduct_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// db data type: numeric
    pub pp_product_bomline_id:Option<f64>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub product_bom_value:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// db data type: numeric
    pub qtybatch:Option<f64>,
    /// db data type: numeric
    pub qtybom:Option<f64>,
    /// db data type: numeric
    pub scrap:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// db data type: character varying
    pub x12de355:Option<String>,
    /// has one
    pub pp_product_bomline:Option<PpProductBomline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_bomproduct:Option<MProduct>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
}


#[derive(Debug)]
pub struct IProductplanning {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_productplanning_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// db data type: character varying
    pub bpartner_value:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// db data type: numeric
    pub dd_networkdistribution_id:Option<f64>,
    /// db data type: numeric
    pub deliverytime_promised:Option<f64>,
    /// db data type: character varying
    pub forecastvalue:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub iscreateplan:String,
    /// db data type: character
    pub ismps:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isphantom:String,
    /// db data type: numeric
    pub m_forecast_id:Option<f64>,
    /// db data type: numeric
    pub m_forecastline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: character varying
    pub networkdistributionvalue:Option<String>,
    /// db data type: numeric
    pub order_max:Option<f64>,
    /// db data type: numeric
    pub order_min:Option<f64>,
    /// db data type: numeric
    pub order_pack:Option<f64>,
    /// db data type: numeric
    pub order_period:Option<f64>,
    /// db data type: character varying
    pub order_policy:Option<String>,
    /// db data type: numeric
    pub order_qty:Option<f64>,
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: numeric
    pub planner_id:Option<f64>,
    /// db data type: character varying
    pub plannervalue:Option<String>,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// db data type: numeric
    pub pp_product_planning_id:Option<f64>,
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub product_bom_value:Option<String>,
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// db data type: character varying
    pub resourcevalue:Option<String>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub safetystock:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: numeric
    pub timefence:Option<f64>,
    /// db data type: numeric
    pub transfertime:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub vendorproductno:Option<String>,
    /// db data type: character varying
    pub warehousevalue:Option<String>,
    /// db data type: numeric
    pub workingtime:Option<f64>,
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub planner:Option<AdUser>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub m_forecast:Option<MForecast>,
    /// has one
    pub m_forecastline:Option<MForecastline>,
    /// has one
    pub pp_product_planning:Option<PpProductPlanning>,
}


#[derive(Debug)]
pub struct IReportline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_reportline_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: character
    pub amounttype:Option<String>,
    /// db data type: numeric
    pub c_elementvalue_id:Option<f64>,
    /// db data type: character
    pub calculationtype:Option<String>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub elementvalue:Option<String>,
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isprinted:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub issummary:Option<String>,
    /// db data type: character
    pub linetype:Option<String>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub pa_reportline_id:Option<f64>,
    /// db data type: numeric
    pub pa_reportlineset_id:Option<f64>,
    /// db data type: numeric
    pub pa_reportsource_id:Option<f64>,
    /// db data type: character
    pub paamounttype:Option<String>,
    /// db data type: character
    pub paperiodtype:Option<String>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub reportlinesetname:Option<String>,
    /// db data type: character
    pub reportlinestyle:Option<String>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// db data type: numeric
    pub tablevel:Option<f64>,
    /// default: now()
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub pa_reportlineset:Option<PaReportlineset>,
    /// has one
    pub pa_reportline:Option<PaReportline>,
    /// has one
    pub pa_reportsource:Option<PaReportsource>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct ISaleshistory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_saleshistory_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub activityvalue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub bpartnervalue:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_saleshistory_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub campaignvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub categoryname:Option<String>,
    /// db data type: numeric
    pub costamt:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateinvoiced:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub groupvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub i_isimported:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_class_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_classification_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_group_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// db data type: numeric
    pub priceinvoiced:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub productvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub projectname:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub projectphasename:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub regionname:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub salesrep_name:Option<String>,
    /// db data type: numeric
    pub totalinvamt:Option<f64>,
    /// db data type: numeric
    pub totalinvcost:Option<f64>,
    /// db data type: numeric
    pub totalinvqty:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub warehousevalue:Option<String>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product_class:Option<MProductClass>,
    /// has one
    pub m_product_classification:Option<MProductClassification>,
    /// has one
    pub m_product_group:Option<MProductGroup>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_saleshistory:Option<CSaleshistory>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
}


#[derive(Debug)]
pub struct IWorkflow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub i_workflow_id:f64,
    /// default: '1'::bpchar
    /// db data type: character
    pub accesslevel:Option<String>,
    /// default: 'W'::bpchar
    /// db data type: character
    pub action:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_wf_node_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_workflowprocessor_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributename:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub author:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub columnname:Option<String>,
    /// db data type: numeric
    pub cost:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// default: NULL::numeric
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub docaction:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub docvaluelogic:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub duration:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub durationunit:Option<String>,
    /// db data type: numeric
    pub dynprioritychange:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub dynpriorityunit:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub email:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub emailrecipient:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub entitytype:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub finishmode:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub i_errormsg:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub i_isimported:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isbetafunctionality:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub iscentrallymaintained:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isdefault:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub ismilestone:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// default: 'X'::bpchar
    /// db data type: character
    pub joinelement:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub limit:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub movingtime:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub nodename:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub nodenextvalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub nodevalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub orgvalue:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub overlapunits:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub priority:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub processtype:Option<String>,
    /// default: 'U'::bpchar
    /// db data type: character
    pub publishstatus:Option<String>,
    /// db data type: numeric
    pub qtybatchsize:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub r_mailtext_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub resourcevalue:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub responsiblename:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// default: 'X'::bpchar
    /// db data type: character
    pub splitelement:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub startmode:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub subflowexecution:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub tablename:Option<String>,
    /// db data type: numeric
    pub unitscycles:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub value:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub version:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub waitingtime:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub waittime:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub wfprocessorname:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub workflowtype:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub workingtime:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_workflowprocessor:Option<AdWorkflowprocessor>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub s_resource:Option<SResource>,
}


#[derive(Debug)]
pub struct ImpProcessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub imp_processor_id:f64,
    /// db data type: character varying
    pub account:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub host:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub imp_processor_type_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 7
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub passwordinfo:Option<String>,
    /// db data type: numeric
    pub port:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub imp_processor_type:Option<ImpProcessorType>,
    /// has many
    pub imp_processorlog:Option<Vec<ImpProcessorlog>>,
    /// has many
    pub imp_processorparameter:Option<Vec<ImpProcessorparameter>>,
}


#[derive(Debug)]
pub struct ImpProcessorType {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub imp_processor_type_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub javaclass:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub imp_processor:Option<Vec<ImpProcessor>>,
}


#[derive(Debug)]
pub struct ImpProcessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub imp_processorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub imp_processor_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub imp_processor:Option<ImpProcessor>,
}


#[derive(Debug)]
pub struct ImpProcessorparameter {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub imp_processorparameter_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub imp_processor_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub parametervalue:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub imp_processor:Option<ImpProcessor>,
}


#[derive(Debug)]
pub struct KCategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub k_categoryvalue:Option<Vec<KCategoryvalue>>,
    /// has many
    pub k_entrycategory:Option<Vec<KEntrycategory>>,
}


#[derive(Debug)]
pub struct KCategoryvalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_categoryvalue_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub k_category_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub k_category:Option<KCategory>,
    /// has many
    pub k_entrycategory:Option<Vec<KEntrycategory>>,
}


#[derive(Debug)]
pub struct KComment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_comment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_session_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublic:String,
    /// not nullable 
    /// db data type: numeric
    pub k_entry_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub rating:f64,
    /// not nullable 
    /// db data type: character varying
    pub textmsg:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub k_entry:Option<KEntry>,
    /// has one
    pub ad_session:Option<AdSession>,
}


#[derive(Debug)]
pub struct KEntry {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_entry_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_session_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub descriptionurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublic:String,
    /// db data type: numeric
    pub k_source_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub k_topic_id:f64,
    /// db data type: character varying
    pub keywords:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub rating:f64,
    /// not nullable 
    /// db data type: character varying
    pub textmsg:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub k_topic:Option<KTopic>,
    /// has one
    pub k_source:Option<KSource>,
    /// has one
    pub ad_session:Option<AdSession>,
    /// has one, extension table
    pub k_entryrelated:Option<Box<KEntryrelated>>,
    /// has one, extension table
    pub k_entryrelated:Option<Box<KEntryrelated>>,
    /// has many
    pub k_comment:Option<Vec<KComment>>,
    /// has many
    pub k_entrycategory:Option<Vec<KEntrycategory>>,
}


#[derive(Debug)]
pub struct KEntrycategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_category_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_entry_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub k_categoryvalue_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub k_category:Option<KCategory>,
    /// has one
    pub k_entry:Option<KEntry>,
    /// has one
    pub k_categoryvalue:Option<KCategoryvalue>,
}


#[derive(Debug)]
pub struct KEntryrelated {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_entry_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_entryrelated_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub k_entry:Option<KEntry>,
    /// has one
    pub k_entryrelated:Option<KEntry>,
}


#[derive(Debug)]
pub struct KIndex {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_index_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub cm_webproject_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub excerpt:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub keyword:String,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub sourceupdated:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
}


#[derive(Debug)]
pub struct KIndexlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_indexlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub indexquery:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub indexqueryresult:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub querysource:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct KIndexstop {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_indexstop_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// db data type: numeric
    pub cm_webproject_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// not nullable 
    /// db data type: character varying
    pub keyword:String,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub cm_webproject:Option<CmWebproject>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
}


#[derive(Debug)]
pub struct KSource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_source_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub descriptionurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub k_entry:Option<Vec<KEntry>>,
}


#[derive(Debug)]
pub struct KSynonym {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_synonym_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub synonymname:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct KTopic {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_topic_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublic:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublicwrite:String,
    /// not nullable 
    /// db data type: numeric
    pub k_type_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub k_type:Option<KType>,
    /// has many
    pub k_entry:Option<Vec<KEntry>>,
}


#[derive(Debug)]
pub struct KType {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub k_type_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublic:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispublicwrite:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub k_topic:Option<Vec<KTopic>>,
}


#[derive(Debug)]
pub struct MAttribute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attribute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'S'::bpchar
    /// not nullable 
    /// db data type: character
    pub attributevaluetype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinstanceattribute:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatory:String,
    /// db data type: numeric
    pub m_attributesearch_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_attributesearch:Option<MAttributesearch>,
    /// has many
    pub i_product_asi:Option<Vec<IProductAsi>>,
    /// has many
    pub m_attributeinstance:Option<Vec<MAttributeinstance>>,
    /// has many
    pub m_attributeuse:Option<Vec<MAttributeuse>>,
    /// has many
    pub m_attributevalue:Option<Vec<MAttributevalue>>,
    /// has many
    pub qm_specificationline:Option<Vec<QmSpecificationline>>,
}


#[derive(Debug)]
pub struct MAttributeinstance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attribute_id:f64,
    /// primary
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributevalue_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub value:Option<String>,
    /// db data type: numeric
    pub valuenumber:Option<f64>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_attribute:Option<MAttribute>,
    /// has one
    pub m_attributevalue:Option<MAttributevalue>,
}


#[derive(Debug)]
pub struct MAttributesearch {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesearch_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub i_product_asi:Option<Vec<IProductAsi>>,
    /// has many
    pub m_attribute:Option<Vec<MAttribute>>,
}


#[derive(Debug)]
pub struct MAttributeset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributeset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub guaranteedays:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isguaranteedate:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isguaranteedatemandatory:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinstanceattribute:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub islot:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub islotmandatory:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isserno:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issernomandatory:String,
    /// db data type: character
    pub lotchareoverwrite:Option<String>,
    /// db data type: character
    pub lotcharsoverwrite:Option<String>,
    /// db data type: numeric
    pub m_lotctl_id:Option<f64>,
    /// db data type: numeric
    pub m_sernoctl_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub mandatorytype:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub sernochareoverwrite:Option<String>,
    /// db data type: character
    pub sernocharsoverwrite:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_sernoctl:Option<MSernoctl>,
    /// has one
    pub m_lotctl:Option<MLotctl>,
    /// has many
    pub i_product_asi:Option<Vec<IProductAsi>>,
    /// has many
    pub m_attributesetexclude:Option<Vec<MAttributesetexclude>>,
    /// has many
    pub m_attributesetinstance:Option<Vec<MAttributesetinstance>>,
    /// has many
    pub m_attributeuse:Option<Vec<MAttributeuse>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub qm_specification:Option<Vec<QmSpecification>>,
}


#[derive(Debug)]
pub struct MAttributesetexclude {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetexclude_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributeset_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct MAttributesetinstance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: timestamp without time zone
    pub guaranteedate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: numeric
    pub m_attributeset_id:Option<f64>,
    /// db data type: numeric
    pub m_lot_id:Option<f64>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
    /// has one
    pub m_lot:Option<MLot>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_landedcostallocation:Option<Vec<CLandedcostallocation>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
    /// has many
    pub c_projectissuema:Option<Vec<CProjectissuema>>,
    /// has many
    pub c_rfqline:Option<Vec<CRfqline>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub m_attributeinstance:Option<Vec<MAttributeinstance>>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_costqueue:Option<Vec<MCostqueue>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inoutlinema:Option<Vec<MInoutlinema>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_inventorylinema:Option<Vec<MInventorylinema>>,
    /// has many
    pub m_matchinv:Option<Vec<MMatchinv>>,
    /// has many
    pub m_matchpo:Option<Vec<MMatchpo>>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
    /// has many
    pub m_movementlinema:Option<Vec<MMovementlinema>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_productionline:Option<Vec<MProductionline>>,
    /// has many
    pub m_productionlinema:Option<Vec<MProductionlinema>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub m_storage:Option<Vec<MStorage>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub m_transactionallocation:Option<Vec<MTransactionallocation>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_cost_collectorma:Option<Vec<PpCostCollectorma>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_bom:Option<Vec<PpOrderBom>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
    /// has many
    pub pp_product_bom:Option<Vec<PpProductBom>>,
    /// has many
    pub pp_product_bomline:Option<Vec<PpProductBomline>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MAttributeuse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attribute_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributeset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_attribute:Option<MAttribute>,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
}


#[derive(Debug)]
pub struct MAttributevalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributevalue_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attribute_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub m_attribute:Option<MAttribute>,
    /// has many
    pub i_product_asi:Option<Vec<IProductAsi>>,
    /// has many
    pub m_attributeinstance:Option<Vec<MAttributeinstance>>,
}


#[derive(Debug)]
pub struct MBom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub bomtype:String,
    /// not nullable 
    /// db data type: character
    pub bomuse:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
    /// has many
    pub r_group:Option<Vec<RGroup>>,
}


#[derive(Debug)]
pub struct MBomalternative {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_bomalternative_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
}


#[derive(Debug)]
pub struct MBomproduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_bomproduct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub bomproducttype:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub bomqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isphantom:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub leadtimeoffset:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_bom_id:f64,
    /// db data type: numeric
    pub m_bomalternative_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// db data type: numeric
    pub m_productbom_id:Option<f64>,
    /// db data type: numeric
    pub m_productoperation_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_bom:Option<MBom>,
    /// has one
    pub m_productbom:Option<MProduct>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_bomalternative:Option<MBomalternative>,
    /// has one
    pub m_productoperation:Option<MProductoperation>,
}


#[derive(Debug)]
pub struct MBpPrice {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_bp_price_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub breakvalue:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub comments:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub discount:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isnetprice:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pricelimit:f64,
    /// not nullable 
    /// db data type: numeric
    pub pricelist:f64,
    /// default: NULL::bpchar
    /// db data type: character
    pub priceoverridetype:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub pricestd:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct MChangenotice {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_changenotice_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: text
    pub detailinfo:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub dd_networkdistribution:Option<Vec<DdNetworkdistribution>>,
    /// has many
    pub i_product_bom:Option<Vec<IProductBom>>,
    /// has many
    pub m_bom:Option<Vec<MBom>>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
    /// has many
    pub m_changerequest:Option<Vec<MChangerequest>>,
    /// has many
    pub pp_order_bom:Option<Vec<PpOrderBom>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_product_bom:Option<Vec<PpProductBom>>,
    /// has many
    pub pp_product_bomline:Option<Vec<PpProductBomline>>,
    /// has many
    pub r_group:Option<Vec<RGroup>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
}


#[derive(Debug)]
pub struct MChangerequest {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_changerequest_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: text
    pub detailinfo:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// db data type: numeric
    pub m_fixchangenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_fixchangenotice:Option<MChangenotice>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
}


#[derive(Debug)]
pub struct MCost {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costtype_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// db data type: numeric
    pub cumulatedamt:Option<f64>,
    /// db data type: numeric
    pub cumulatedamtll:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub cumulatedqty:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub currentcostprice:f64,
    /// default: 0
    /// db data type: numeric
    pub currentcostpricell:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currentqty:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub futurecostprice:Option<f64>,
    /// db data type: numeric
    pub futurecostpricell:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iscostfrozen:Option<String>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub percent:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_costtype:Option<MCosttype>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub m_costelement:Option<MCostelement>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
}


#[derive(Debug)]
pub struct MCostdetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costdetail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amt:f64,
    /// db data type: numeric
    pub amtll:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_landedcostallocation_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_projectissue_id:Option<f64>,
    /// db data type: numeric
    pub costadjustment:Option<f64>,
    /// db data type: timestamp without time zone
    pub costadjustmentdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub costadjustmentdatell:Option<NaiveDateTime>,
    /// db data type: numeric
    pub costadjustmentll:Option<f64>,
    /// db data type: numeric
    pub costamt:Option<f64>,
    /// db data type: numeric
    pub costamtll:Option<f64>,
    /// db data type: character
    pub costingmethod:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub cumulatedamt:Option<f64>,
    /// db data type: numeric
    pub cumulatedamtll:Option<f64>,
    /// db data type: numeric
    pub cumulatedqty:Option<f64>,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: numeric
    pub currentcostpricell:Option<f64>,
    /// db data type: numeric
    pub currentqty:Option<f64>,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub deltaamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub deltaqty:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isreversal:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// db data type: numeric
    pub m_costelement_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_costtype_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// db data type: numeric
    pub m_movementline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: numeric
    pub m_productionline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_transaction_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: numeric
    pub pp_cost_collector_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_costelement:Option<MCostelement>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub m_movementline:Option<MMovementline>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub m_productionline:Option<MProductionline>,
    /// has one
    pub c_projectissue:Option<CProjectissue>,
    /// has one
    pub pp_cost_collector:Option<PpCostCollector>,
    /// has one
    pub m_costtype:Option<MCosttype>,
    /// has one
    pub c_landedcostallocation:Option<CLandedcostallocation>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
}


#[derive(Debug)]
pub struct MCostelement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub costelementtype:String,
    /// db data type: character
    pub costingmethod:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscalculated:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdefault:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_landedcost:Option<Vec<CLandedcost>>,
    /// has many
    pub c_landedcostallocation:Option<Vec<CLandedcostallocation>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_costqueue:Option<Vec<MCostqueue>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
}


#[derive(Debug)]
pub struct MCostqueue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costqueue_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currentcostprice:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currentqty:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_costtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_costtype:Option<MCosttype>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_costelement:Option<MCostelement>,
}


#[derive(Debug)]
pub struct MCosttype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'S'::bpchar
    /// not nullable 
    /// db data type: character
    pub costingmethod:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub c_acctschema:Option<Vec<CAcctschema>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_costqueue:Option<Vec<MCostqueue>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
}


#[derive(Debug)]
pub struct MDemand {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_demand_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_year_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has one
    pub c_year:Option<CYear>,
    /// has many
    pub m_demandline:Option<Vec<MDemandline>>,
}


#[derive(Debug)]
pub struct MDemanddetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_demanddetail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_demandline_id:f64,
    /// db data type: numeric
    pub m_forecastline_id:Option<f64>,
    /// db data type: numeric
    pub m_requisitionline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_demandline:Option<MDemandline>,
    /// has one
    pub m_forecastline:Option<MForecastline>,
    /// has one
    pub m_requisitionline:Option<MRequisitionline>,
    /// has one
    pub c_orderline:Option<COrderline>,
}


#[derive(Debug)]
pub struct MDemandline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_demandline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_period_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_demand_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtycalculated:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_demand:Option<MDemand>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub m_demanddetail:Option<Vec<MDemanddetail>>,
}


#[derive(Debug)]
pub struct MDiscountschema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_discountschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub cumulativelevel:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub discounttype:String,
    /// db data type: numeric
    pub flatdiscount:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbpartnerflatdiscount:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isquantitybased:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub script:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// has many
    pub c_bp_group:Option<Vec<CBpGroup>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub m_discountschemabreak:Option<Vec<MDiscountschemabreak>>,
    /// has many
    pub m_discountschemaline:Option<Vec<MDiscountschemaline>>,
    /// has many
    pub m_pricelist_version:Option<Vec<MPricelistVersion>>,
}


#[derive(Debug)]
pub struct MDiscountschemabreak {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_discountschemabreak_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub breakdiscount:f64,
    /// not nullable 
    /// db data type: numeric
    pub breakvalue:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbpartnerflatdiscount:String,
    /// not nullable 
    /// db data type: numeric
    pub m_discountschema_id:f64,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_discountschema:Option<MDiscountschema>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct MDiscountschemaline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_discountschemaline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontype_id:f64,
    /// db data type: character varying
    pub classification:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub conversiondate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub group1:Option<String>,
    /// db data type: character varying
    pub group2:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub limit_addamt:f64,
    /// not nullable 
    /// db data type: character
    pub limit_base:String,
    /// not nullable 
    /// db data type: numeric
    pub limit_discount:f64,
    /// default: 0
    /// db data type: numeric
    pub limit_fixed:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub limit_maxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub limit_minamt:f64,
    /// not nullable 
    /// db data type: character
    pub limit_rounding:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub list_addamt:f64,
    /// not nullable 
    /// db data type: character
    pub list_base:String,
    /// not nullable 
    /// db data type: numeric
    pub list_discount:f64,
    /// default: 0
    /// db data type: numeric
    pub list_fixed:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub list_maxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub list_minamt:f64,
    /// not nullable 
    /// db data type: character
    pub list_rounding:String,
    /// not nullable 
    /// db data type: numeric
    pub m_discountschema_id:f64,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub std_addamt:f64,
    /// not nullable 
    /// db data type: character
    pub std_base:String,
    /// not nullable 
    /// db data type: numeric
    pub std_discount:f64,
    /// default: 0
    /// db data type: numeric
    pub std_fixed:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub std_maxamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub std_minamt:f64,
    /// not nullable 
    /// db data type: character
    pub std_rounding:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_discountschema:Option<MDiscountschema>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_conversiontype:Option<CConversiontype>,
}


#[derive(Debug)]
pub struct MDistributionlist {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub ratiototal:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_distributionlistline:Option<Vec<MDistributionlistline>>,
    /// has many
    pub m_distributionrunline:Option<Vec<MDistributionrunline>>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
}


#[derive(Debug)]
pub struct MDistributionlistline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlistline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlist_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub minqty:f64,
    /// db data type: numeric
    pub ratio:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_distributionlist:Option<MDistributionlist>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
}


#[derive(Debug)]
pub struct MDistributionrun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionrun_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreatesingleorder:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has many
    pub m_distributionrunline:Option<Vec<MDistributionrunline>>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
}


#[derive(Debug)]
pub struct MDistributionrunline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionrunline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_distributionrun_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub minqty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_distributionrun:Option<MDistributionrun>,
    /// has one
    pub m_distributionlist:Option<MDistributionlist>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
}


#[derive(Debug)]
pub struct MEdi {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_edi_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bp_edi_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// not nullable 
    /// db data type: character
    pub edistatus:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// db data type: numeric
    pub reply_price:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub reply_qtyavailable:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub reply_qtyconfirmed:Option<f64>,
    /// db data type: timestamp without time zone
    pub reply_received:Option<NaiveDateTime>,
    /// db data type: character varying
    pub reply_remarks:Option<String>,
    /// db data type: timestamp without time zone
    pub reply_shipdate:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub request_price:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub request_qty:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub request_shipdate:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub trxreceived:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub trxsent:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub trxtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bp_edi:Option<CBpEdi>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub m_edi_info:Option<Vec<MEdiInfo>>,
}


#[derive(Debug)]
pub struct MEdiInfo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_edi_info_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: text
    pub info:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_edi_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_edi:Option<MEdi>,
}


#[derive(Debug)]
pub struct MForecast {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_forecast_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_calendar_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_year_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_calendar_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_perioddefinition_id:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has one
    pub c_year:Option<CYear>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub pp_calendar:Option<PpCalendar>,
    /// has one
    pub pp_perioddefinition:Option<PpPerioddefinition>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has many
    pub i_forecast:Option<Vec<IForecast>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub m_forecastline:Option<Vec<MForecastline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct MForecastline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_forecastline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datepromised:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_forecast_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_period_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtycalculated:f64,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_forecast:Option<MForecast>,
    /// has one
    pub c_period:Option<CPeriod>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_period:Option<PpPeriod>,
    /// has many
    pub i_forecast:Option<Vec<IForecast>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub m_demanddetail:Option<Vec<MDemanddetail>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct MFreight {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_freight_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_country_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// db data type: numeric
    pub c_region_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub freightamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_freightcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_shipper_id:f64,
    /// db data type: numeric
    pub to_country_id:Option<f64>,
    /// db data type: numeric
    pub to_region_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub m_freightcategory:Option<MFreightcategory>,
    /// has one
    pub c_country:Option<CCountry>,
    /// has one
    pub to_country:Option<CCountry>,
    /// has one
    pub c_region:Option<CRegion>,
    /// has one
    pub to_region:Option<CRegion>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct MFreightcategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_freightcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub m_freight:Option<Vec<MFreight>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
}


#[derive(Debug)]
pub struct MInout {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inout_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// db data type: character
    pub createconfirm:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: character
    pub createpackage:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateordered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateprinted:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datereceived:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character
    pub deliveryrule:String,
    /// not nullable 
    /// db data type: character
    pub deliveryviarule:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub dropship_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub dropship_location_id:Option<f64>,
    /// db data type: numeric
    pub dropship_user_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub freightcostrule:String,
    /// db data type: character
    pub generateto:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdropship:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindispute:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isintransit:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// db data type: numeric
    pub m_rma_id:Option<f64>,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// not nullable 
    /// db data type: character
    pub movementtype:String,
    /// db data type: numeric
    pub nopackages:Option<f64>,
    /// db data type: timestamp without time zone
    pub pickdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub ref_inout_id:Option<f64>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// db data type: timestamp without time zone
    pub shipdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub trackingno:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub volume:Option<f64>,
    /// db data type: numeric
    pub weight:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one, self referential
    pub ref_inout:Option<Box<MInout>>,
    /// has one
    pub m_rma:Option<MRma>,
    /// has one, self referential
    pub reversal:Option<Box<MInout>>,
    /// has one
    pub dropship_bpartner:Option<CBpartner>,
    /// has one
    pub dropship_location:Option<CBpartnerLocation>,
    /// has one
    pub dropship_user:Option<AdUser>,
    /// has many
    pub c_landedcost:Option<Vec<CLandedcost>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inoutconfirm:Option<Vec<MInoutconfirm>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_package:Option<Vec<MPackage>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct MInoutconfirm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inoutconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub approvalamt:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: character varying
    pub confirmationno:Option<String>,
    /// not nullable 
    /// db data type: character
    pub confirmtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createpackage:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscancelled:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindispute:String,
    /// not nullable 
    /// db data type: numeric
    pub m_inout_id:f64,
    /// db data type: numeric
    pub m_inventory_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub m_inventory:Option<MInventory>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has many
    pub m_inoutlineconfirm:Option<Vec<MInoutlineconfirm>>,
}


#[derive(Debug)]
pub struct MInoutline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inoutline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: 0
    /// db data type: numeric
    pub confirmedqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdescription:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_inout_id:f64,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_rmaline_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: 0
    /// db data type: numeric
    pub pickedqty:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// not nullable 
    /// db data type: numeric
    pub qtyentered:f64,
    /// db data type: numeric
    pub ref_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub reversalline_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub targetqty:Option<f64>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub tobeinvoiced:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one, self referential
    pub ref_inoutline:Option<Box<MInoutline>>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub m_rmaline:Option<MRmaline>,
    /// has one, self referential
    pub reversalline:Option<Box<MInoutline>>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_asset_delivery:Option<Vec<AAssetDelivery>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_landedcost:Option<Vec<CLandedcost>>,
    /// has many
    pub c_landedcostallocation:Option<Vec<CLandedcostallocation>>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inoutlineconfirm:Option<Vec<MInoutlineconfirm>>,
    /// has many
    pub m_inoutlinema:Option<Vec<MInoutlinema>>,
    /// has many
    pub m_matchinv:Option<Vec<MMatchinv>>,
    /// has many
    pub m_matchpo:Option<Vec<MMatchpo>>,
    /// has many
    pub m_packageline:Option<Vec<MPackageline>>,
    /// has many
    pub m_rmaline:Option<Vec<MRmaline>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub m_transactionallocation:Option<Vec<MTransactionallocation>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MInoutlineconfirm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inoutlineconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// db data type: character varying
    pub confirmationno:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub confirmedqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub differenceqty:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_inoutconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_inoutline_id:f64,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub targetqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inoutconfirm:Option<MInoutconfirm>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has many
    pub i_inoutlineconfirm:Option<Vec<IInoutlineconfirm>>,
}


#[derive(Debug)]
pub struct MInoutlinema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inoutline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MInventory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inventory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub approvalamt:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub generatelist:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// db data type: numeric
    pub m_perpetualinv_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub updateqty:Option<String>,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_perpetualinv:Option<MPerpetualinv>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one, self referential
    pub reversal:Option<Box<MInventory>>,
    /// has many
    pub i_inventory:Option<Vec<IInventory>>,
    /// has many
    pub m_inoutconfirm:Option<Vec<MInoutconfirm>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_movementconfirm:Option<Vec<MMovementconfirm>>,
}


#[derive(Debug)]
pub struct MInventoryline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inventoryline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'D'::bpchar
    /// not nullable 
    /// db data type: character
    pub inventorytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_inventory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtybook:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtycount:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtycsv:f64,
    /// db data type: numeric
    pub qtyinternaluse:Option<f64>,
    /// db data type: numeric
    pub reversalline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inventory:Option<MInventory>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one, self referential
    pub reversalline:Option<Box<MInventoryline>>,
    /// has many
    pub i_inventory:Option<Vec<IInventory>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_inoutlineconfirm:Option<Vec<MInoutlineconfirm>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_inventorylinema:Option<Vec<MInventorylinema>>,
    /// has many
    pub m_movementlineconfirm:Option<Vec<MMovementlineconfirm>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub m_transactionallocation:Option<Vec<MTransactionallocation>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MInventorylinema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_inventoryline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MLocator {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub priorityno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub x:Option<String>,
    /// db data type: character varying
    pub y:Option<String>,
    /// db data type: character varying
    pub z:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_inventory:Option<Vec<IInventory>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_productionline:Option<Vec<MProductionline>>,
    /// has many
    pub m_productionplan:Option<Vec<MProductionplan>>,
    /// has many
    pub m_replenish:Option<Vec<MReplenish>>,
    /// has many
    pub m_storage:Option<Vec<MStorage>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MLot {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_lot_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datefrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_lotctl_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_lotctl:Option<MLotctl>,
    /// has many
    pub m_attributesetinstance:Option<Vec<MAttributesetinstance>>,
}


#[derive(Debug)]
pub struct MLotctl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_lotctl_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnext:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub incrementno:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub prefix:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub startno:f64,
    /// db data type: character varying
    pub suffix:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_attributeset:Option<Vec<MAttributeset>>,
    /// has many
    pub m_lot:Option<Vec<MLot>>,
    /// has many
    pub m_lotctlexclude:Option<Vec<MLotctlexclude>>,
}


#[derive(Debug)]
pub struct MLotctlexclude {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_lotctlexclude_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub m_lotctl_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_lotctl:Option<MLotctl>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct MMatchinv {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_matchinv_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_invoiceline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_inoutline_id:f64,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MMatchpo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_matchpo_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_orderline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateacct:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isapproved:Option<String>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// db data type: numeric
    pub pricematchdifference:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MMovement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_movement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub approvalamt:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_location_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub chargeamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: timestamp without time zone
    pub datereceived:Option<NaiveDateTime>,
    /// db data type: numeric
    pub dd_order_id:Option<f64>,
    /// db data type: character
    pub deliveryrule:Option<String>,
    /// db data type: character
    pub deliveryviarule:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// db data type: character
    pub freightcostrule:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isintransit:String,
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// db data type: character
    pub priorityrule:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CLocation>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub dd_order:Option<DdOrder>,
    /// has one, self referential
    pub reversal:Option<Box<MMovement>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_movementconfirm:Option<Vec<MMovementconfirm>>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
}


#[derive(Debug)]
pub struct MMovementconfirm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_movementconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// db data type: numeric
    pub approvalamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// db data type: numeric
    pub m_inventory_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_movement_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_movement:Option<MMovement>,
    /// has one
    pub m_inventory:Option<MInventory>,
    /// has many
    pub m_movementlineconfirm:Option<Vec<MMovementlineconfirm>>,
}


#[derive(Debug)]
pub struct MMovementline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_movementline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// db data type: numeric
    pub confirmedqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub dd_orderline_id:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub line:Option<f64>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_attributesetinstanceto_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_locatorto_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_movement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub reversalline_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub targetqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_movement:Option<MMovement>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_locatorto:Option<MLocator>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_attributesetinstanceto:Option<MAttributesetinstance>,
    /// has one
    pub dd_orderline:Option<DdOrderline>,
    /// has one, self referential
    pub reversalline:Option<Box<MMovementline>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
    /// has many
    pub m_movementlineconfirm:Option<Vec<MMovementlineconfirm>>,
    /// has many
    pub m_movementlinema:Option<Vec<MMovementlinema>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MMovementlineconfirm {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_movementlineconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub confirmedqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub differenceqty:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_movementconfirm_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_movementline_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub scrappedqty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub targetqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_movementconfirm:Option<MMovementconfirm>,
    /// has one
    pub m_movementline:Option<MMovementline>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
}


#[derive(Debug)]
pub struct MMovementlinema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_movementline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub movementqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_movementline:Option<MMovementline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MOperationresource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_operationresource_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_job_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_productoperation_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub setuptime:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub teardowntime:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub unitruntime:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_productoperation:Option<MProductoperation>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_job:Option<CJob>,
}


#[derive(Debug)]
pub struct MPackage {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_package_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datereceived:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_inout_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_shipper_id:f64,
    /// db data type: character varying
    pub receivedinfo:Option<String>,
    /// db data type: timestamp without time zone
    pub shipdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub trackinginfo:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has many
    pub m_packageline:Option<Vec<MPackageline>>,
}


#[derive(Debug)]
pub struct MPackageline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_packageline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_inoutline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_package_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_package:Option<MPackage>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
}


#[derive(Debug)]
pub struct MParttype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_parttype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
}


#[derive(Debug)]
pub struct MPerpetualinv {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_perpetualinv_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub counthighmovement:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datenextrun:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub noinventorycount:f64,
    /// not nullable 
    /// db data type: numeric
    pub noproductcount:f64,
    /// not nullable 
    /// db data type: numeric
    pub numberofruns:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
}


#[derive(Debug)]
pub struct MPricelist {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub basepricelist_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub enforcepricelimit:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismandatory:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isnetprice:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ispresentforproduct:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issopricelist:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istaxincluded:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 2
    /// not nullable 
    /// db data type: numeric
    pub priceprecision:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one, self referential
    pub basepricelist:Option<Box<MPricelist>>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has many
    pub b_topictype:Option<Vec<BTopictype>>,
    /// has many
    pub c_bp_group:Option<Vec<CBpGroup>>,
    /// has many
    pub c_bpartner:Option<Vec<CBpartner>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub m_pricelist:Option<Vec<MPricelist>>,
    /// has many
    pub m_pricelist_version:Option<Vec<MPricelistVersion>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub m_requisition:Option<Vec<MRequisition>>,
    /// has many
    pub s_timeexpense:Option<Vec<STimeexpense>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
    /// has many
    pub w_basket:Option<Vec<WBasket>>,
    /// has many
    pub w_store:Option<Vec<WStore>>,
}


#[derive(Debug)]
pub struct MPricelistVersion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_version_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_discountschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// db data type: numeric
    pub m_pricelist_version_base_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub proccreate:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_discountschema:Option<MDiscountschema>,
    /// has one, self referential
    pub m_pricelist_version_base:Option<Box<MPricelistVersion>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub m_pricelist_version:Option<Vec<MPricelistVersion>>,
    /// has many
    pub m_productprice:Option<Vec<MProductprice>>,
    /// has many
    pub m_productpricevendorbreak:Option<Vec<MProductpricevendorbreak>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
}


#[derive(Debug)]
pub struct MProduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_revenuerecognition_id:Option<f64>,
    /// db data type: numeric
    pub c_subscriptiontype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// db data type: character varying
    pub classification:Option<String>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub descriptionurl:Option<String>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub discontinued:Option<String>,
    /// db data type: timestamp without time zone
    pub discontinuedat:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub discontinuedby:Option<NaiveDateTime>,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// db data type: character varying
    pub downloadurl:Option<String>,
    /// db data type: character varying
    pub group1:Option<String>,
    /// db data type: character varying
    pub group2:Option<String>,
    /// db data type: numeric
    pub guaranteedays:Option<f64>,
    /// db data type: numeric
    pub guaranteedaysmin:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isbom:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdropship:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isexcludeautodelivery:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiceprintdetails:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iskanban:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanufactured:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isphantom:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispicklistprintdetails:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ispurchased:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issold:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isstocked:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// db data type: character
    pub istoformule:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isverified:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iswebstorefeatured:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub lowlevel:f64,
    /// db data type: numeric
    pub m_attributeset_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_freightcategory_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_parttype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_class_id:Option<f64>,
    /// db data type: numeric
    pub m_product_classification_id:Option<f64>,
    /// db data type: numeric
    pub m_product_group_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 'I'::bpchar
    /// not nullable 
    /// db data type: character
    pub producttype:String,
    /// db data type: numeric
    pub r_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub s_expensetype_id:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: numeric
    pub shelfdepth:Option<f64>,
    /// db data type: numeric
    pub shelfheight:Option<f64>,
    /// db data type: numeric
    pub shelfwidth:Option<f64>,
    /// db data type: character varying
    pub sku:Option<String>,
    /// default: 1
    /// not nullable 
    /// db data type: numeric
    pub unitsperpack:f64,
    /// db data type: numeric
    pub unitsperpallet:Option<f64>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: character varying
    pub versionno:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub volume:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub weight:Option<f64>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub c_revenuerecognition:Option<CRevenuerecognition>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub s_expensetype:Option<SExpensetype>,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_freightcategory:Option<MFreightcategory>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub c_subscriptiontype:Option<CSubscriptiontype>,
    /// has one
    pub m_parttype:Option<MParttype>,
    /// has one
    pub m_product_class:Option<MProductClass>,
    /// has one
    pub m_product_group:Option<MProductGroup>,
    /// has one
    pub m_product_classification:Option<MProductClassification>,
    /// has one, extension table
    pub m_relatedproduct:Option<Box<MRelatedproduct>>,
    /// has one, extension table
    pub m_relatedproduct:Option<Box<MRelatedproduct>>,
    /// has one, extension table
    pub m_substitute:Option<Box<MSubstitute>>,
    /// has one, extension table
    pub m_substitute:Option<Box<MSubstitute>>,
    /// has many
    pub a_asset:Option<Vec<AAsset>>,
    /// has many
    pub a_registration:Option<Vec<ARegistration>>,
    /// has many
    pub a_registrationproduct:Option<Vec<ARegistrationproduct>>,
    /// has many
    pub ad_clientinfo:Option<Vec<AdClientinfo>>,
    /// has many
    pub ad_memo:Option<Vec<AdMemo>>,
    /// has many
    pub b_topictype:Option<Vec<BTopictype>>,
    /// has many
    pub c_acctschema_element:Option<Vec<CAcctschemaElement>>,
    /// has many
    pub c_bpartner_product:Option<Vec<CBpartnerProduct>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_landedcost:Option<Vec<CLandedcost>>,
    /// has many
    pub c_landedcostallocation:Option<Vec<CLandedcostallocation>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_phase:Option<Vec<CPhase>>,
    /// has many
    pub c_poskey:Option<Vec<CPoskey>>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_projectphase:Option<Vec<CProjectphase>>,
    /// has many
    pub c_projecttask:Option<Vec<CProjecttask>>,
    /// has many
    pub c_rfq_topicsubscriberonly:Option<Vec<CRfqTopicsubscriberonly>>,
    /// has many
    pub c_rfqline:Option<Vec<CRfqline>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_servicelevel:Option<Vec<CServicelevel>>,
    /// has many
    pub c_subscription:Option<Vec<CSubscription>>,
    /// has many
    pub c_task:Option<Vec<CTask>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub c_uom_conversion:Option<Vec<CUomConversion>>,
    /// has many
    pub c_validcombination:Option<Vec<CValidcombination>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub fact_acct:Option<Vec<FactAcct>>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub gl_distribution:Option<Vec<GlDistribution>>,
    /// has many
    pub gl_distributionline:Option<Vec<GlDistributionline>>,
    /// has many
    pub gl_journalline:Option<Vec<GlJournalline>>,
    /// has many
    pub hr_departmentproduct:Option<Vec<HrDepartmentproduct>>,
    /// has many
    pub i_asset:Option<Vec<IAsset>>,
    /// has many
    pub i_fajournal:Option<Vec<IFajournal>>,
    /// has many
    pub i_forecast:Option<Vec<IForecast>>,
    /// has many
    pub i_gljournal:Option<Vec<IGljournal>>,
    /// has many
    pub i_inventory:Option<Vec<IInventory>>,
    /// has many
    pub i_invoice:Option<Vec<IInvoice>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_pricelist:Option<Vec<IPricelist>>,
    /// has many
    pub i_product:Option<Vec<IProduct>>,
    /// has many
    pub i_product_asi:Option<Vec<IProductAsi>>,
    /// has many
    pub i_product_bom:Option<Vec<IProductBom>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_bom:Option<Vec<MBom>>,
    /// has many
    pub m_bomalternative:Option<Vec<MBomalternative>>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
    /// has many
    pub m_bp_price:Option<Vec<MBpPrice>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_costqueue:Option<Vec<MCostqueue>>,
    /// has many
    pub m_demandline:Option<Vec<MDemandline>>,
    /// has many
    pub m_discountschemabreak:Option<Vec<MDiscountschemabreak>>,
    /// has many
    pub m_discountschemaline:Option<Vec<MDiscountschemaline>>,
    /// has many
    pub m_distributionrunline:Option<Vec<MDistributionrunline>>,
    /// has many
    pub m_edi:Option<Vec<MEdi>>,
    /// has many
    pub m_forecastline:Option<Vec<MForecastline>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_inventoryline:Option<Vec<MInventoryline>>,
    /// has many
    pub m_lot:Option<Vec<MLot>>,
    /// has many
    pub m_matchinv:Option<Vec<MMatchinv>>,
    /// has many
    pub m_matchpo:Option<Vec<MMatchpo>>,
    /// has many
    pub m_movementline:Option<Vec<MMovementline>>,
    /// has many
    pub m_product_acct:Option<Vec<MProductAcct>>,
    /// has many
    pub m_product_bom:Option<Vec<MProductBom>>,
    /// has many
    pub m_product_costing:Option<Vec<MProductCosting>>,
    /// has many
    pub m_product_po:Option<Vec<MProductPo>>,
    /// has many
    pub m_product_qualitytest:Option<Vec<MProductQualitytest>>,
    /// has many
    pub m_product_trl:Option<Vec<MProductTrl>>,
    /// has many
    pub m_productdownload:Option<Vec<MProductdownload>>,
    /// has many
    pub m_production:Option<Vec<MProduction>>,
    /// has many
    pub m_productionline:Option<Vec<MProductionline>>,
    /// has many
    pub m_productionplan:Option<Vec<MProductionplan>>,
    /// has many
    pub m_productoperation:Option<Vec<MProductoperation>>,
    /// has many
    pub m_productprice:Option<Vec<MProductprice>>,
    /// has many
    pub m_productpricevendorbreak:Option<Vec<MProductpricevendorbreak>>,
    /// has many
    pub m_promotiongroupline:Option<Vec<MPromotiongroupline>>,
    /// has many
    pub m_replenish:Option<Vec<MReplenish>>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub m_storage:Option<Vec<MStorage>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub m_transactionallocation:Option<Vec<MTransactionallocation>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub pp_forecastrunmaster:Option<Vec<PpForecastrunmaster>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_bom:Option<Vec<PpOrderBom>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
    /// has many
    pub pp_order_node_product:Option<Vec<PpOrderNodeProduct>>,
    /// has many
    pub pp_product_bom:Option<Vec<PpProductBom>>,
    /// has many
    pub pp_product_bomline:Option<Vec<PpProductBomline>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub pp_wf_node_product:Option<Vec<PpWfNodeProduct>>,
    /// has many
    pub qm_specification:Option<Vec<QmSpecification>>,
    /// has many
    pub r_category:Option<Vec<RCategory>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub r_requestupdate:Option<Vec<RRequestupdate>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
    /// has many
    pub s_training_class:Option<Vec<STrainingClass>>,
    /// has many
    pub t_distributionrundetail:Option<Vec<TDistributionrundetail>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
    /// has many
    pub t_replenish:Option<Vec<TReplenish>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
    /// has many
    pub w_basketline:Option<Vec<WBasketline>>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct MProductAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub p_asset_acct:f64,
    /// db data type: numeric
    pub p_averagecostvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_burden_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_cogs_acct:f64,
    /// db data type: numeric
    pub p_costadjustment_acct:Option<f64>,
    /// db data type: numeric
    pub p_costofproduction_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_expense_acct:f64,
    /// db data type: numeric
    pub p_floorstock_acct:Option<f64>,
    /// db data type: numeric
    pub p_inventoryclearing_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_invoicepricevariance_acct:f64,
    /// db data type: numeric
    pub p_labor_acct:Option<f64>,
    /// db data type: numeric
    pub p_methodchangevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_mixvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_outsideprocessing_acct:Option<f64>,
    /// db data type: numeric
    pub p_overhead_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_purchasepricevariance_acct:f64,
    /// db data type: numeric
    pub p_ratevariance_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_revenue_acct:f64,
    /// db data type: numeric
    pub p_scrap_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountgrant_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountrec_acct:f64,
    /// db data type: numeric
    pub p_usagevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_wip_acct:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub p_revenue_acct:Option<CValidcombination>,
    /// has one
    pub p_expense_acct:Option<CValidcombination>,
    /// has one
    pub p_asset_acct:Option<CValidcombination>,
    /// has one
    pub p_purchasepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_invoicepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_cogs_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountrec_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountgrant_acct:Option<CValidcombination>,
    /// has one
    pub p_inventoryclearing_acct:Option<CValidcombination>,
    /// has one
    pub p_costadjustment_acct:Option<CValidcombination>,
    /// has one
    pub p_wip_acct:Option<CValidcombination>,
    /// has one
    pub p_methodchangevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_usagevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_ratevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_mixvariance_acct:Option<CValidcombination>,
    /// has one
    pub p_floorstock_acct:Option<CValidcombination>,
    /// has one
    pub p_costofproduction_acct:Option<CValidcombination>,
    /// has one
    pub p_labor_acct:Option<CValidcombination>,
    /// has one
    pub p_burden_acct:Option<CValidcombination>,
    /// has one
    pub p_outsideprocessing_acct:Option<CValidcombination>,
    /// has one
    pub p_overhead_acct:Option<CValidcombination>,
    /// has one
    pub p_scrap_acct:Option<CValidcombination>,
    /// has one
    pub p_averagecostvariance_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct MProductBom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub bomqty:f64,
    /// db data type: character
    pub bomtype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_productbom_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_productbom:Option<MProduct>,
}


#[derive(Debug)]
pub struct MProductCategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// db data type: numeric
    pub a_asset_group_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_printcolor_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// db data type: numeric
    pub m_product_category_parent_id:Option<f64>,
    /// default: 'F'::bpchar
    /// not nullable 
    /// db data type: character
    pub mmpolicy:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub plannedmargin:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub a_asset_group:Option<AAssetGroup>,
    /// has one
    pub ad_printcolor:Option<AdPrintcolor>,
    /// has one, self referential
    pub m_product_category_parent:Option<Box<MProductCategory>>,
    /// has many
    pub c_commissionline:Option<Vec<CCommissionline>>,
    /// has many
    pub c_projectline:Option<Vec<CProjectline>>,
    /// has many
    pub c_rfq_topicsubscriberonly:Option<Vec<CRfqTopicsubscriberonly>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub c_taxdefinition:Option<Vec<CTaxdefinition>>,
    /// has many
    pub i_product:Option<Vec<IProduct>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_discountschemabreak:Option<Vec<MDiscountschemabreak>>,
    /// has many
    pub m_discountschemaline:Option<Vec<MDiscountschemaline>>,
    /// has many
    pub m_perpetualinv:Option<Vec<MPerpetualinv>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_category:Option<Vec<MProductCategory>>,
    /// has many
    pub m_product_category_acct:Option<Vec<MProductCategoryAcct>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub s_expensetype:Option<Vec<SExpensetype>>,
    /// has many
    pub s_resourcetype:Option<Vec<SResourcetype>>,
    /// has many
    pub s_training:Option<Vec<STraining>>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
}


#[derive(Debug)]
pub struct MProductCategoryAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub costinglevel:Option<String>,
    /// db data type: character
    pub costingmethod:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub p_asset_acct:f64,
    /// db data type: numeric
    pub p_averagecostvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_burden_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_cogs_acct:f64,
    /// db data type: numeric
    pub p_costadjustment_acct:Option<f64>,
    /// db data type: numeric
    pub p_costofproduction_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_expense_acct:f64,
    /// db data type: numeric
    pub p_floorstock_acct:Option<f64>,
    /// db data type: numeric
    pub p_inventoryclearing_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_invoicepricevariance_acct:f64,
    /// db data type: numeric
    pub p_labor_acct:Option<f64>,
    /// db data type: numeric
    pub p_methodchangevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_mixvariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_outsideprocessing_acct:Option<f64>,
    /// db data type: numeric
    pub p_overhead_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_purchasepricevariance_acct:f64,
    /// db data type: numeric
    pub p_ratevariance_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_revenue_acct:f64,
    /// db data type: numeric
    pub p_scrap_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountgrant_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub p_tradediscountrec_acct:f64,
    /// db data type: numeric
    pub p_usagevariance_acct:Option<f64>,
    /// db data type: numeric
    pub p_wip_acct:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub p_revenue_acct:Option<CValidcombination>,
    /// has one
    pub p_expense_acct:Option<CValidcombination>,
    /// has one
    pub p_asset_acct:Option<CValidcombination>,
    /// has one
    pub p_cogs_acct:Option<CValidcombination>,
    /// has one
    pub p_purchasepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_invoicepricevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountrec_acct:Option<CValidcombination>,
    /// has one
    pub p_tradediscountgrant_acct:Option<CValidcombination>,
    /// has one
    pub p_inventoryclearing_acct:Option<CValidcombination>,
    /// has one
    pub p_costadjustment_acct:Option<CValidcombination>,
    /// has one
    pub p_floorstock_acct:Option<CValidcombination>,
    /// has one
    pub p_wip_acct:Option<CValidcombination>,
    /// has one
    pub p_methodchangevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_usagevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_ratevariance_acct:Option<CValidcombination>,
    /// has one
    pub p_mixvariance_acct:Option<CValidcombination>,
    /// has one
    pub p_costofproduction_acct:Option<CValidcombination>,
    /// has one
    pub p_labor_acct:Option<CValidcombination>,
    /// has one
    pub p_burden_acct:Option<CValidcombination>,
    /// has one
    pub p_outsideprocessing_acct:Option<CValidcombination>,
    /// has one
    pub p_overhead_acct:Option<CValidcombination>,
    /// has one
    pub p_scrap_acct:Option<CValidcombination>,
    /// has one
    pub p_averagecostvariance_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct MProductClass {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_class_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_class_parent_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one, self referential
    pub m_product_class_parent:Option<Box<MProductClass>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_class:Option<Vec<MProductClass>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
}


#[derive(Debug)]
pub struct MProductClassification {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_classification_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_classification_parent_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one, self referential
    pub m_classification_parent:Option<Box<MProductClassification>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_classification:Option<Vec<MProductClassification>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
}


#[derive(Debug)]
pub struct MProductCosting {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub costaverage:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub costaveragecumamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub costaveragecumqty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub coststandard:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub coststandardcumamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub coststandardcumqty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub coststandardpoamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub coststandardpoqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub currentcostprice:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub futurecostprice:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelastinv:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelastpo:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalinvamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totalinvqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
}


#[derive(Debug)]
pub struct MProductGroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_group_parent_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one, self referential
    pub m_product_group_parent:Option<Box<MProductGroup>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub m_product_group:Option<Vec<MProductGroup>>,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
}


#[derive(Debug)]
pub struct MProductPo {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub costperorder:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub deliverytime_actual:Option<f64>,
    /// db data type: numeric
    pub deliverytime_promised:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub discontinued:Option<String>,
    /// db data type: timestamp without time zone
    pub discontinuedat:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub discontinuedby:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscurrentvendor:String,
    /// db data type: character
    pub manufacturer:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub order_min:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub order_pack:Option<f64>,
    /// db data type: timestamp without time zone
    pub priceeffective:Option<NaiveDateTime>,
    /// default: 0
    /// db data type: numeric
    pub pricelastinv:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelastpo:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelist:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricepo:Option<f64>,
    /// db data type: numeric
    pub qualityrating:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub royaltyamt:Option<f64>,
    /// db data type: character varying
    pub upc:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character
    pub vendorcategory:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub vendorproductno:String,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_currency:Option<CCurrency>,
}


#[derive(Debug)]
pub struct MProductQualitytest {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_qualitytest_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub expectedresult:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_qualitytest_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_qualitytest:Option<MQualitytest>,
}


#[derive(Debug)]
pub struct MProductTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct MProductdownload {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productdownload_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub downloadurl:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub a_asset_delivery:Option<Vec<AAssetDelivery>>,
}


#[derive(Debug)]
pub struct MProduction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_production_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub createfrom:Option<String>,
    /// db data type: timestamp without time zone
    pub datepromised:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub iscomplete:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreated:String,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: (0)::numeric
    /// not nullable 
    /// db data type: numeric
    pub productionqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has many
    pub m_productionline:Option<Vec<MProductionline>>,
    /// has many
    pub m_productionplan:Option<Vec<MProductionplan>>,
}


#[derive(Debug)]
pub struct MProductionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isendproduct:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_production_id:f64,
    /// db data type: numeric
    pub m_productionplan_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// db data type: numeric
    pub plannedqty:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub qtyused:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_productionplan:Option<MProductionplan>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_production:Option<MProduction>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_productionlinema:Option<Vec<MProductionlinema>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub m_transactionallocation:Option<Vec<MTransactionallocation>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MProductionlinema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_productionline:Option<MProductionline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MProductionplan {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productionplan_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_production_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub productionqty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_production:Option<MProduction>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has many
    pub m_productionline:Option<Vec<MProductionline>>,
}


#[derive(Debug)]
pub struct MProductoperation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productoperation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub teardowntime:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub unitruntime:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub m_bomproduct:Option<Vec<MBomproduct>>,
    /// has many
    pub m_operationresource:Option<Vec<MOperationresource>>,
}


#[derive(Debug)]
pub struct MProductprice {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_version_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelimit:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricelist:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pricestd:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_pricelist_version:Option<MPricelistVersion>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct MProductpricevendorbreak {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_productpricevendorbreak_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub breakvalue:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_version_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pricelimit:f64,
    /// not nullable 
    /// db data type: numeric
    pub pricelist:f64,
    /// not nullable 
    /// db data type: numeric
    pub pricestd:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_pricelist_version:Option<MPricelistVersion>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct MPromotion {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotion_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub promotionpriority:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub m_promotiondistribution:Option<Vec<MPromotiondistribution>>,
    /// has many
    pub m_promotionline:Option<Vec<MPromotionline>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub m_promotionreward:Option<Vec<MPromotionreward>>,
}


#[derive(Debug)]
pub struct MPromotiondistribution {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotiondistribution_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub distributionsorting:Option<String>,
    /// not nullable 
    /// db data type: character
    pub distributiontype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_promotion_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_promotionline_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub operation:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_promotionline:Option<MPromotionline>,
    /// has one
    pub m_promotion:Option<MPromotion>,
    /// has many
    pub m_promotionreward:Option<Vec<MPromotionreward>>,
}


#[derive(Debug)]
pub struct MPromotiongroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotiongroup_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_promotiongroupline:Option<Vec<MPromotiongroupline>>,
    /// has many
    pub m_promotionline:Option<Vec<MPromotionline>>,
}


#[derive(Debug)]
pub struct MPromotiongroupline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotiongroupline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_promotiongroup_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_promotiongroup:Option<MPromotiongroup>,
}


#[derive(Debug)]
pub struct MPromotionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismandatorypl:String,
    /// not nullable 
    /// db data type: numeric
    pub m_promotion_id:f64,
    /// db data type: numeric
    pub m_promotiongroup_id:Option<f64>,
    /// db data type: numeric
    pub minimumamt:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_promotiongroup:Option<MPromotiongroup>,
    /// has one
    pub m_promotion:Option<MPromotion>,
    /// has many
    pub m_promotiondistribution:Option<Vec<MPromotiondistribution>>,
}


#[derive(Debug)]
pub struct MPromotionprecondition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotionprecondition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_promotion_id:f64,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: character varying
    pub promotioncode:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub promotioncounter:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub promotionusagelimit:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_promotion:Option<MPromotion>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_activity:Option<CActivity>,
}


#[derive(Debug)]
pub struct MPromotionreward {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_promotionreward_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub amount:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub distributionsorting:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isforalldistribution:String,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub issamedistribution:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub m_promotion_id:f64,
    /// db data type: numeric
    pub m_promotiondistribution_id:Option<f64>,
    /// db data type: numeric
    pub m_targetdistribution_id:Option<f64>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub rewardtype:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub m_promotiondistribution:Option<MPromotiondistribution>,
    /// has one
    pub m_promotion:Option<MPromotion>,
    /// has one
    pub m_targetdistribution:Option<MPromotiondistribution>,
}


#[derive(Debug)]
pub struct MQualitytest {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_qualitytest_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_product_qualitytest:Option<Vec<MProductQualitytest>>,
    /// has many
    pub m_qualitytestresult:Option<Vec<MQualitytestresult>>,
}


#[derive(Debug)]
pub struct MQualitytestresult {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_qualitytestresult_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isqcpass:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_qualitytest_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub result:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_qualitytest:Option<MQualitytest>,
}


#[derive(Debug)]
pub struct MRelatedproduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub relatedproduct_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character
    pub relatedproducttype:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub relatedproduct:Option<MProduct>,
}


#[derive(Debug)]
pub struct MReplenish {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub level_max:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub level_min:f64,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_warehousesource_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub replenishtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_warehousesource:Option<MWarehouse>,
    /// has one
    pub m_locator:Option<MLocator>,
}


#[derive(Debug)]
pub struct MRequisition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_requisition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datedoc:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub daterequired:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub totallines:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has many
    pub m_requisitionline:Option<Vec<MRequisitionline>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct MRequisitionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_requisitionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub linenetamt:f64,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_requisition_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub priceactual:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_requisition:Option<MRequisition>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has many
    pub m_demanddetail:Option<Vec<MDemanddetail>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
}


#[derive(Debug)]
pub struct MRma {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_rma_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub amt:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: character
    pub generateto:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub inout_id:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// db data type: numeric
    pub m_rmatype_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub ref_rma_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub inout:Option<MInout>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub m_rmatype:Option<MRmatype>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one, self referential
    pub ref_rma:Option<Box<MRma>>,
    /// has many
    pub c_invoice:Option<Vec<CInvoice>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
    /// has many
    pub m_rmaline:Option<Vec<MRmaline>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct MRmaline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_rmaline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub amt:Option<f64>,
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub linenetamt:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_rma_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// db data type: numeric
    pub qtydelivered:Option<f64>,
    /// db data type: numeric
    pub qtyinvoiced:Option<f64>,
    /// db data type: numeric
    pub ref_rmaline_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_rma:Option<MRma>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one, self referential
    pub ref_rmaline:Option<Box<MRmaline>>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub m_inoutline:Option<Vec<MInoutline>>,
    /// has many
    pub m_rmaline:Option<Vec<MRmaline>>,
}


#[derive(Debug)]
pub struct MRmatype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_rmatype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_rma:Option<Vec<MRma>>,
}


#[derive(Debug)]
pub struct MSernoctl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_sernoctl_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub currentnext:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub incrementno:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub prefix:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub startno:f64,
    /// db data type: character varying
    pub suffix:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_attributeset:Option<Vec<MAttributeset>>,
    /// has many
    pub m_sernoctlexclude:Option<Vec<MSernoctlexclude>>,
}


#[derive(Debug)]
pub struct MSernoctlexclude {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_sernoctlexclude_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub m_sernoctl_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_sernoctl:Option<MSernoctl>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct MShipper {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_shipper_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub trackingurl:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub dd_networkdistributionline:Option<Vec<DdNetworkdistributionline>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
    /// has many
    pub i_movement:Option<Vec<IMovement>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub m_freight:Option<Vec<MFreight>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_movement:Option<Vec<MMovement>>,
    /// has many
    pub m_package:Option<Vec<MPackage>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
}


#[derive(Debug)]
pub struct MStorage {
    /// primary
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastinventory:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyonhand:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyordered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyreserved:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
}


#[derive(Debug)]
pub struct MSubstitute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub substitute_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub substitute:Option<MProduct>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
}


#[derive(Debug)]
pub struct MTransaction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_transaction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_projectissue_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// db data type: numeric
    pub m_movementline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: numeric
    pub m_productionline_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// not nullable 
    /// db data type: character
    pub movementtype:String,
    /// db data type: numeric
    pub pp_cost_collector_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub m_movementline:Option<MMovementline>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_productionline:Option<MProductionline>,
    /// has one
    pub c_projectissue:Option<CProjectissue>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub pp_cost_collector:Option<PpCostCollector>,
    /// has one, extension table
    pub m_transactionallocation:Option<Box<MTransactionallocation>>,
    /// has one, extension table
    pub m_transactionallocation:Option<Box<MTransactionallocation>>,
    /// has many
    pub t_transaction:Option<Vec<TTransaction>>,
}


#[derive(Debug)]
pub struct MTransactionallocation {
    /// primary
    /// not nullable 
    /// db data type: character
    pub allocationstrategytype:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_transaction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallocated:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: numeric
    pub m_productionline_id:Option<f64>,
    /// db data type: numeric
    pub out_m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub out_m_inventoryline_id:Option<f64>,
    /// db data type: numeric
    pub out_m_productionline_id:Option<f64>,
    /// db data type: numeric
    pub out_m_transaction_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_transaction:Option<MTransaction>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_productionline:Option<MProductionline>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub out:Option<MTransaction>,
    /// has one
    pub out:Option<MInoutline>,
    /// has one
    pub out:Option<MProductionline>,
    /// has one
    pub out:Option<MInventoryline>,
}


#[derive(Debug)]
pub struct MWarehouse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_location_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isintransit:Option<String>,
    /// db data type: numeric
    pub m_warehousesource_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub replenishmentclass:Option<String>,
    /// not nullable 
    /// db data type: character
    pub separator:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one, self referential
    pub m_warehousesource:Option<Box<MWarehouse>>,
    /// has many
    pub ad_orginfo:Option<Vec<AdOrginfo>>,
    /// has many
    pub c_bp_edi:Option<Vec<CBpEdi>>,
    /// has many
    pub c_order:Option<Vec<COrder>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub c_pos:Option<Vec<CPos>>,
    /// has many
    pub c_project:Option<Vec<CProject>>,
    /// has many
    pub c_saleshistory:Option<Vec<CSaleshistory>>,
    /// has many
    pub dd_networkdistributionline:Option<Vec<DdNetworkdistributionline>>,
    /// has many
    pub dd_order:Option<Vec<DdOrder>>,
    /// has many
    pub i_forecast:Option<Vec<IForecast>>,
    /// has many
    pub i_inventory:Option<Vec<IInventory>>,
    /// has many
    pub i_order:Option<Vec<IOrder>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub i_saleshistory:Option<Vec<ISaleshistory>>,
    /// has many
    pub m_cost:Option<Vec<MCost>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_edi:Option<Vec<MEdi>>,
    /// has many
    pub m_forecastline:Option<Vec<MForecastline>>,
    /// has many
    pub m_inout:Option<Vec<MInout>>,
    /// has many
    pub m_inventory:Option<Vec<MInventory>>,
    /// has many
    pub m_locator:Option<Vec<MLocator>>,
    /// has many
    pub m_perpetualinv:Option<Vec<MPerpetualinv>>,
    /// has many
    pub m_promotionprecondition:Option<Vec<MPromotionprecondition>>,
    /// has many
    pub m_replenish:Option<Vec<MReplenish>>,
    /// has many
    pub m_requisition:Option<Vec<MRequisition>>,
    /// has many
    pub m_warehouse:Option<Vec<MWarehouse>>,
    /// has many
    pub m_warehouse_acct:Option<Vec<MWarehouseAcct>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_forecastrun:Option<Vec<PpForecastrun>>,
    /// has many
    pub pp_forecastrunmaster:Option<Vec<PpForecastrunmaster>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub s_resource:Option<Vec<SResource>>,
    /// has many
    pub s_timeexpense:Option<Vec<STimeexpense>>,
    /// has many
    pub t_inventoryvalue:Option<Vec<TInventoryvalue>>,
    /// has many
    pub t_replenish:Option<Vec<TReplenish>>,
    /// has many
    pub u_posterminal:Option<Vec<UPosterminal>>,
    /// has many
    pub w_store:Option<Vec<WStore>>,
    /// has many
    pub wm_area:Option<Vec<WmArea>>,
    /// has many
    pub wm_inoutbound:Option<Vec<WmInoutbound>>,
    /// has many
    pub wm_strategy:Option<Vec<WmStrategy>>,
}


#[derive(Debug)]
pub struct MWarehouseAcct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_differences_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_invactualadjust_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_inventory_acct:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_revaluation_acct:f64,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub w_inventory_acct:Option<CValidcombination>,
    /// has one
    pub w_invactualadjust_acct:Option<CValidcombination>,
    /// has one
    pub w_differences_acct:Option<CValidcombination>,
    /// has one
    pub w_revaluation_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct PaAchievement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_achievement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datedoc:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isachieved:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub manualactual:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub pa_measure_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_measure:Option<PaMeasure>,
}


#[derive(Debug)]
pub struct PaBenchmark {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_benchmark_id:f64,
    /// not nullable 
    /// db data type: character
    pub accumulationtype:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub pa_benchmarkdata:Option<Vec<PaBenchmarkdata>>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
}


#[derive(Debug)]
pub struct PaBenchmarkdata {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_benchmarkdata_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub benchmarkdate:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub benchmarkvalue:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub pa_benchmark_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_benchmark:Option<PaBenchmark>,
}


#[derive(Debug)]
pub struct PaColorschema {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_colorschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printcolor1_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_printcolor2_id:f64,
    /// db data type: numeric
    pub ad_printcolor3_id:Option<f64>,
    /// db data type: numeric
    pub ad_printcolor4_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub mark1percent:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub mark2percent:f64,
    /// default: 0
    /// db data type: numeric
    pub mark3percent:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub mark4percent:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_printcolor1:Option<AdPrintcolor>,
    /// has one
    pub ad_printcolor2:Option<AdPrintcolor>,
    /// has one
    pub ad_printcolor3:Option<AdPrintcolor>,
    /// has one
    pub ad_printcolor4:Option<AdPrintcolor>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub pa_goal:Option<Vec<PaGoal>>,
}


#[derive(Debug)]
pub struct PaDashboardcontent {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_dashboardcontent_id:f64,
    /// db data type: numeric
    pub ad_browse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// default: 1
    /// db data type: numeric
    pub columnno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'T'::bpchar
    /// db data type: character
    pub goaldisplay:Option<String>,
    /// db data type: text
    pub html:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscollapsible:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iseventrequired:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isopenbydefault:Option<String>,
    /// db data type: numeric
    pub line:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub onevent:Option<String>,
    /// db data type: numeric
    pub pa_goal_id:Option<f64>,
    /// db data type: numeric
    pub pagesize:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub zoom_field_id:Option<f64>,
    /// db data type: numeric
    pub zoom_tab_id:Option<f64>,
    /// db data type: numeric
    pub zoom_window_id:Option<f64>,
    /// db data type: character varying
    pub zulfilepath:Option<String>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub pa_goal:Option<PaGoal>,
    /// has one
    pub zoom_window:Option<AdWindow>,
    /// has one
    pub zoom_tab:Option<AdTab>,
    /// has one
    pub ad_browse:Option<AdBrowse>,
    /// has one
    pub zoom_field:Option<AdBrowseField>,
    /// has many
    pub pa_dashboardcontent_trl:Option<Vec<PaDashboardcontentTrl>>,
}


#[derive(Debug)]
pub struct PaDashboardcontentTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_dashboardcontent_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pa_dashboardcontent:Option<PaDashboardcontent>,
}


#[derive(Debug)]
pub struct PaGoal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_goal_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: 'BC'::character varying
    /// not nullable 
    /// db data type: character varying
    pub charttype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datefrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub dateto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub goalperformance:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// default: 0
    /// db data type: numeric
    pub measureactual:Option<f64>,
    /// db data type: character
    pub measuredisplay:Option<String>,
    /// not nullable 
    /// db data type: character
    pub measurescope:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub measuretarget:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub note:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub pa_colorschema_id:f64,
    /// db data type: numeric
    pub pa_goalparent_id:Option<f64>,
    /// db data type: numeric
    pub pa_measure_id:Option<f64>,
    /// db data type: numeric
    pub relativeweight:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub pa_colorschema:Option<PaColorschema>,
    /// has one, self referential
    pub pa_goalparent:Option<Box<PaGoal>>,
    /// has one
    pub pa_measure:Option<PaMeasure>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has many
    pub pa_dashboardcontent:Option<Vec<PaDashboardcontent>>,
    /// has many
    pub pa_goal:Option<Vec<PaGoal>>,
    /// has many
    pub pa_goalrestriction:Option<Vec<PaGoalrestriction>>,
}


#[derive(Debug)]
pub struct PaGoalrestriction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_goalrestriction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub goalrestrictiontype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_goal_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub pa_goal:Option<PaGoal>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
}


#[derive(Debug)]
pub struct PaHierarchy {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_hierarchy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_account_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_activity_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_campaign_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_project_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_tree_salesregion_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_tree_org:Option<AdTree>,
    /// has one
    pub ad_tree_bpartner:Option<AdTree>,
    /// has one
    pub ad_tree_project:Option<AdTree>,
    /// has one
    pub ad_tree_salesregion:Option<AdTree>,
    /// has one
    pub ad_tree_product:Option<AdTree>,
    /// has one
    pub ad_tree_campaign:Option<AdTree>,
    /// has one
    pub ad_tree_activity:Option<AdTree>,
    /// has one
    pub ad_tree_account:Option<AdTree>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
}


#[derive(Debug)]
pub struct PaMeasure {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_measure_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_projecttype_id:Option<f64>,
    /// db data type: character varying
    pub calculationclass:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub manualactual:Option<f64>,
    /// db data type: character varying
    pub manualnote:Option<String>,
    /// not nullable 
    /// db data type: character
    pub measuredatatype:String,
    /// not nullable 
    /// db data type: character
    pub measuretype:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub pa_benchmark_id:Option<f64>,
    /// db data type: numeric
    pub pa_hierarchy_id:Option<f64>,
    /// db data type: numeric
    pub pa_measurecalc_id:Option<f64>,
    /// db data type: numeric
    pub pa_ratio_id:Option<f64>,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_measurecalc:Option<PaMeasurecalc>,
    /// has one
    pub pa_benchmark:Option<PaBenchmark>,
    /// has one
    pub pa_ratio:Option<PaRatio>,
    /// has one
    pub pa_hierarchy:Option<PaHierarchy>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one
    pub c_projecttype:Option<CProjecttype>,
    /// has many
    pub pa_achievement:Option<Vec<PaAchievement>>,
    /// has many
    pub pa_goal:Option<Vec<PaGoal>>,
}


#[derive(Debug)]
pub struct PaMeasurecalc {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_measurecalc_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_table_id:f64,
    /// db data type: character varying
    pub bpartnercolumn:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub datecolumn:String,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub keycolumn:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub orgcolumn:Option<String>,
    /// db data type: character varying
    pub productcolumn:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub selectclause:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub whereclause:String,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
    /// has many
    pub pa_ratioelement:Option<Vec<PaRatioelement>>,
}


#[derive(Debug)]
pub struct PaRatio {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_ratio_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
    /// has many
    pub pa_ratioelement:Option<Vec<PaRatioelement>>,
}


#[derive(Debug)]
pub struct PaRatioelement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_ratioelement_id:f64,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub constantvalue:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub pa_measurecalc_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_ratio_id:f64,
    /// db data type: numeric
    pub pa_ratioused_id:Option<f64>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub ratioelementtype:String,
    /// not nullable 
    /// db data type: character
    pub ratiooperand:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_ratio:Option<PaRatio>,
    /// has one
    pub account:Option<CElementvalue>,
    /// has one
    pub pa_ratioused:Option<PaRatio>,
    /// has one
    pub pa_measurecalc:Option<PaMeasurecalc>,
}


#[derive(Debug)]
pub struct PaReport {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_report_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_printformat_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub jasperprocess_id:Option<f64>,
    /// db data type: character
    pub jasperprocessing:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub listsources:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub listtrx:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcolumnset_id:f64,
    /// db data type: numeric
    pub pa_reportcube_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportlineset_id:f64,
    /// db data type: character varying
    pub posperiodname:Option<String>,
    /// db data type: character varying
    pub preperiodname:Option<String>,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_org:Option<AdOrg>,
    /// has one
    pub pa_reportlineset:Option<PaReportlineset>,
    /// has one
    pub pa_reportcolumnset:Option<PaReportcolumnset>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has one
    pub ad_printformat:Option<AdPrintformat>,
    /// has one
    pub jasperprocess:Option<AdProcess>,
    /// has one
    pub pa_reportcube:Option<PaReportcube>,
}


#[derive(Debug)]
pub struct PaReportcolumn {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcolumn_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: character
    pub amounttype:Option<String>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_elementvalue_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: character
    pub calculationtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub columntype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character
    pub currencytype:Option<String>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub elementtype:Option<String>,
    /// db data type: character
    pub factor:Option<String>,
    /// db data type: character varying
    pub formatpattern:Option<String>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isadhocconversion:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsactivity:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsbpartner:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullscampaign:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullselementvalue:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullslocation:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsorg:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsorgtrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsproduct:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsproject:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullssalesregion:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsuserelement1:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsuserelement2:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub oper_1_id:Option<f64>,
    /// db data type: numeric
    pub oper_2_id:Option<f64>,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcolumnset_id:f64,
    /// default: 'B'::bpchar
    /// db data type: character
    pub paamounttype:Option<String>,
    /// default: 'P'::bpchar
    /// db data type: character
    pub paperiodtype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// db data type: numeric
    pub relativeperiod:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub pa_reportcolumnset:Option<PaReportcolumnset>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one, self referential
    pub oper_1:Option<Box<PaReportcolumn>>,
    /// has one, self referential
    pub oper_2:Option<Box<PaReportcolumn>>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
}


#[derive(Debug)]
pub struct PaReportcolumnset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcolumnset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pa_reportcolumn:Option<Vec<PaReportcolumn>>,
}


#[derive(Debug)]
pub struct PaReportcube {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportcube_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_calendar_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub isactivitydim:Option<String>,
    /// db data type: character
    pub isbpartnerdim:Option<String>,
    /// db data type: character
    pub iscampaigndim:Option<String>,
    /// db data type: character
    pub isglbudgetdim:Option<String>,
    /// db data type: character
    pub islocfromdim:Option<String>,
    /// db data type: character
    pub isloctodim:Option<String>,
    /// db data type: character
    pub isorgtrxdim:Option<String>,
    /// db data type: character
    pub isproductdim:Option<String>,
    /// db data type: character
    pub isprojectdim:Option<String>,
    /// db data type: character
    pub isprojectphasedim:Option<String>,
    /// db data type: character
    pub isprojecttaskdim:Option<String>,
    /// db data type: character
    pub issalesregiondim:Option<String>,
    /// db data type: character
    pub issubacctdim:Option<String>,
    /// db data type: character
    pub isuser1dim:Option<String>,
    /// db data type: character
    pub isuser2dim:Option<String>,
    /// db data type: character
    pub isuserelement1dim:Option<String>,
    /// db data type: character
    pub isuserelement2dim:Option<String>,
    /// db data type: timestamp without time zone
    pub lastrecalculated:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_calendar:Option<CCalendar>,
    /// has many
    pub fact_acct_summary:Option<Vec<FactAcctSummary>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
}


#[derive(Debug)]
pub struct PaReportline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub amounttype:Option<String>,
    /// db data type: character
    pub calculationtype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub fixedpercentage:Option<f64>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issummary:String,
    /// not nullable 
    /// db data type: character
    pub linetype:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub oper_1_id:Option<f64>,
    /// db data type: numeric
    pub oper_2_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportlineset_id:f64,
    /// db data type: character
    pub paamounttype:Option<String>,
    /// db data type: character
    pub paperiodtype:Option<String>,
    /// db data type: numeric
    pub parent_id:Option<f64>,
    /// db data type: character
    pub postingtype:Option<String>,
    /// db data type: character
    pub reportlinestyle:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: numeric
    pub tablevel:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_reportlineset:Option<PaReportlineset>,
    /// has one, self referential
    pub parent:Option<Box<PaReportline>>,
    /// has one, self referential
    pub oper_1:Option<Box<PaReportline>>,
    /// has one, self referential
    pub oper_2:Option<Box<PaReportline>>,
    /// has one
    pub gl_budget:Option<GlBudget>,
    /// has many
    pub i_reportline:Option<Vec<IReportline>>,
    /// has many
    pub pa_reportline:Option<Vec<PaReportline>>,
    /// has many
    pub pa_reportsource:Option<Vec<PaReportsource>>,
    /// has many
    pub t_report:Option<Vec<TReport>>,
}


#[derive(Debug)]
pub struct PaReportlineset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportlineset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character
    pub processing:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub i_reportline:Option<Vec<IReportline>>,
    /// has many
    pub pa_report:Option<Vec<PaReport>>,
    /// has many
    pub pa_reportline:Option<Vec<PaReportline>>,
}


#[derive(Debug)]
pub struct PaReportsource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportsource_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_elementvalue_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub elementtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsactivity:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsbpartner:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullscampaign:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullselementvalue:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullslocation:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsorg:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsorgtrx:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsproduct:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsproject:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullssalesregion:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsuserelement1:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isincludenullsuserelement2:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pa_reportline_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub userelement1_id:Option<f64>,
    /// db data type: numeric
    pub userelement2_id:Option<f64>,
    /// has one
    pub pa_reportline:Option<PaReportline>,
    /// has one
    pub org:Option<AdOrg>,
    /// has one
    pub c_elementvalue:Option<CElementvalue>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_location:Option<CLocation>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has many
    pub i_reportline:Option<Vec<IReportline>>,
}


#[derive(Debug)]
pub struct PaSlaCriteria {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_sla_criteria_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub classname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismanual:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub pa_sla_goal:Option<Vec<PaSlaGoal>>,
}


#[derive(Debug)]
pub struct PaSlaGoal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_sla_goal_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub measureactual:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub measuretarget:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub pa_sla_criteria_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub pa_sla_criteria:Option<PaSlaCriteria>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has many
    pub pa_sla_measure:Option<Vec<PaSlaMeasure>>,
}


#[derive(Debug)]
pub struct PaSlaMeasure {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_sla_measure_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datetrx:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub measureactual:f64,
    /// not nullable 
    /// db data type: numeric
    pub pa_sla_goal_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pa_sla_goal:Option<PaSlaGoal>,
    /// has one
    pub ad_table:Option<AdTable>,
}


#[derive(Debug)]
pub struct PpCalendar {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_calendar_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub pp_forecastrun:Option<Vec<PpForecastrun>>,
    /// has many
    pub pp_perioddefinition:Option<Vec<PpPerioddefinition>>,
}


#[derive(Debug)]
pub struct PpCostCollector {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_cost_collector_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_doctypetarget_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub costcollectortype:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'CO'::bpchar
    /// db data type: character
    pub docaction:Option<String>,
    /// default: 'DR'::bpchar
    /// db data type: character
    pub docstatus:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub durationreal:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isbatchtime:Option<String>,
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// not nullable 
    /// db data type: character
    pub posted:String,
    /// db data type: numeric
    pub pp_order_bomline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// db data type: numeric
    pub pp_order_node_id:Option<f64>,
    /// db data type: numeric
    pub pp_order_workflow_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qtyreject:Option<f64>,
    /// db data type: numeric
    pub reversal_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub s_resource_id:f64,
    /// default: 0
    /// db data type: numeric
    pub scrappedqty:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub setuptimereal:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_doctypetarget:Option<CDoctype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_order_bomline:Option<PpOrderBomline>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
    /// has one
    pub pp_order_workflow:Option<PpOrderWorkflow>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub user1:Option<AdUser>,
    /// has one
    pub user2:Option<AdUser>,
    /// has one, self referential
    pub reversal:Option<Box<PpCostCollector>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub hr_movement:Option<Vec<HrMovement>>,
    /// has many
    pub m_costdetail:Option<Vec<MCostdetail>>,
    /// has many
    pub m_transaction:Option<Vec<MTransaction>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_cost_collectorma:Option<Vec<PpCostCollectorma>>,
}


#[derive(Debug)]
pub struct PpCostCollectorma {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_cost_collectorma_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_cost_collector_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub pp_cost_collector:Option<PpCostCollector>,
}


#[derive(Debug)]
pub struct PpForecastdefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastdefinition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub pp_forecastdefinitionline:Option<Vec<PpForecastdefinitionline>>,
    /// has many
    pub pp_forecastrun:Option<Vec<PpForecastrun>>,
}


#[derive(Debug)]
pub struct PpForecastdefinitionline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastdefinitionline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub factoralpha:Option<f64>,
    /// db data type: numeric
    pub factorbeta:Option<f64>,
    /// db data type: numeric
    pub factorgamma:Option<f64>,
    /// db data type: numeric
    pub factormultiplier:Option<f64>,
    /// db data type: numeric
    pub factorscale:Option<f64>,
    /// db data type: numeric
    pub factoruser:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_class_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_classification_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_group_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastdefinition_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_forecastdefinition:Option<PpForecastdefinition>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub m_product_classification:Option<MProductClassification>,
    /// has one
    pub m_product_class:Option<MProductClass>,
    /// has one
    pub m_product_group:Option<MProductGroup>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_salesregion:Option<CSalesregion>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has many
    pub pp_forecastrunmaster:Option<Vec<PpForecastrunmaster>>,
}


#[derive(Debug)]
pub struct PpForecastrule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub calculationclass:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has many
    pub pp_forecastrun:Option<Vec<PpForecastrun>>,
}


#[derive(Debug)]
pub struct PpForecastrun {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrun_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehousesource_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub periodhistory:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_calendar_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastdefinition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_perioddefinition_id:f64,
    /// default: NULL::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ref_definitionperiod_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_forecastdefinition:Option<PpForecastdefinition>,
    /// has one
    pub pp_perioddefinition:Option<PpPerioddefinition>,
    /// has one
    pub pp_calendar:Option<PpCalendar>,
    /// has one
    pub ref_definitionperiod:Option<PpPerioddefinition>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_warehousesource:Option<MWarehouse>,
    /// has one
    pub pp_forecastrule:Option<PpForecastrule>,
    /// has many
    pub pp_forecastrundetail:Option<Vec<PpForecastrundetail>>,
    /// has many
    pub pp_forecastrunline:Option<Vec<PpForecastrunline>>,
    /// has many
    pub pp_forecastrunmaster:Option<Vec<PpForecastrunmaster>>,
    /// has many
    pub pp_forecastrunresult:Option<Vec<PpForecastrunresult>>,
}


#[derive(Debug)]
pub struct PpForecastrundetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrundetail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub periodno:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastrun_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrunmaster_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_period_id:f64,
    /// db data type: numeric
    pub qtycalculated:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_period:Option<PpPeriod>,
    /// has one
    pub pp_forecastrun:Option<PpForecastrun>,
    /// has one
    pub pp_forecastrunmaster:Option<PpForecastrunmaster>,
    /// has many
    pub pp_forecastrunline:Option<Vec<PpForecastrunline>>,
}


#[derive(Debug)]
pub struct PpForecastrunline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrunline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_saleshistory_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastrun_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastrundetail_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_period_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_saleshistory:Option<CSaleshistory>,
    /// has one
    pub pp_period:Option<PpPeriod>,
    /// has one
    pub pp_forecastrundetail:Option<PpForecastrundetail>,
    /// has one
    pub pp_forecastrun:Option<PpForecastrun>,
}


#[derive(Debug)]
pub struct PpForecastrunmaster {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrunmaster_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub factoralpha:Option<f64>,
    /// db data type: numeric
    pub factorbeta:Option<f64>,
    /// db data type: numeric
    pub factorgamma:Option<f64>,
    /// db data type: numeric
    pub factormultiplier:Option<f64>,
    /// db data type: numeric
    pub factorscale:Option<f64>,
    /// db data type: numeric
    pub factoruser:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastdefinitionline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastrun_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_forecastrun:Option<PpForecastrun>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_forecastdefinitionline:Option<PpForecastdefinitionline>,
    /// has many
    pub pp_forecastrundetail:Option<Vec<PpForecastrundetail>>,
    /// has many
    pub pp_forecastrunresult:Option<Vec<PpForecastrunresult>>,
}


#[derive(Debug)]
pub struct PpForecastrunresult {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrunresult_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub periodno:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_forecastrun_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_forecastrunmaster_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_period_id:Option<f64>,
    /// db data type: numeric
    pub qtyabnormal:Option<f64>,
    /// db data type: numeric
    pub qtycalculated:Option<f64>,
    /// db data type: numeric
    pub qtyplan:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_period:Option<PpPeriod>,
    /// has one
    pub pp_forecastrun:Option<PpForecastrun>,
    /// has one
    pub pp_forecastrunmaster:Option<PpForecastrunmaster>,
}


#[derive(Debug)]
pub struct PpMrp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_mrp_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateconfirm:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datefinishschedule:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateordered:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datepromised:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub datesimulation:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestart:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestartschedule:Option<NaiveDateTime>,
    /// db data type: numeric
    pub dd_order_id:Option<f64>,
    /// db data type: numeric
    pub dd_orderline_id:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub docstatus:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isavailable:Option<String>,
    /// db data type: numeric
    pub m_forecast_id:Option<f64>,
    /// db data type: numeric
    pub m_forecastline_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_requisition_id:Option<f64>,
    /// db data type: numeric
    pub m_requisitionline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character varying
    pub ordertype:Option<String>,
    /// db data type: numeric
    pub planner_id:Option<f64>,
    /// db data type: numeric
    pub pp_order_bomline_id:Option<f64>,
    /// db data type: numeric
    pub pp_order_id:Option<f64>,
    /// db data type: character varying
    pub priority:Option<String>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: character
    pub typemrp:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: numeric
    pub version:Option<f64>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub m_forecastline:Option<MForecastline>,
    /// has one
    pub m_forecast:Option<MForecast>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_requisitionline:Option<MRequisitionline>,
    /// has one
    pub m_requisition:Option<MRequisition>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_order_bomline:Option<PpOrderBomline>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub planner:Option<AdUser>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub dd_order:Option<DdOrder>,
    /// has one
    pub dd_orderline:Option<DdOrderline>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has many
    pub pp_mrp_detail:Option<Vec<PpMrpDetail>>,
}


#[derive(Debug)]
pub struct PpMrpDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_mrp_detail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub mrp_demand_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub mrp_supply_id:Option<f64>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub mrp_supply:Option<PpMrp>,
    /// has one
    pub mrp_demand:Option<PpMrp>,
}


#[derive(Debug)]
pub struct PpOrder {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// default: 0
    /// db data type: numeric
    pub assay:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub c_doctypetarget_id:f64,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateconfirm:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datedelivered:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datefinish:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datefinishschedule:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateordered:NaiveDateTime,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datepromised:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub datestart:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datestartschedule:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: '--'::bpchar
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// default: 'DR'::bpchar
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// db data type: numeric
    pub floatafter:Option<f64>,
    /// db data type: numeric
    pub floatbefored:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// db data type: character
    pub isqtypercentage:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselected:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: character varying
    pub lot:Option<String>,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: character varying
    pub ordertype:Option<String>,
    /// db data type: numeric
    pub planner_id:Option<f64>,
    /// db data type: character
    pub posted:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bom_id:f64,
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: numeric
    pub processedon:Option<f64>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qtybatchs:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtybatchsize:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtydelivered:f64,
    /// default: 1
    /// db data type: numeric
    pub qtyentered:Option<f64>,
    /// default: 1
    /// not nullable 
    /// db data type: numeric
    pub qtyordered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyreject:f64,
    /// db data type: numeric
    pub qtyreserved:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyscrap:f64,
    /// not nullable 
    /// db data type: numeric
    pub s_resource_id:f64,
    /// default: 'D'::character varying
    /// db data type: character varying
    pub scheduletype:Option<String>,
    /// db data type: character varying
    pub serno:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// default: 100
    /// not nullable 
    /// db data type: numeric
    pub yield_:f64,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_doctypetarget:Option<CDoctype>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has one
    pub planner:Option<AdUser>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order_bom:Option<Vec<PpOrderBom>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
    /// has many
    pub pp_order_cost:Option<Vec<PpOrderCost>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_node_asset:Option<Vec<PpOrderNodeAsset>>,
    /// has many
    pub pp_order_node_product:Option<Vec<PpOrderNodeProduct>>,
    /// has many
    pub pp_order_nodenext:Option<Vec<PpOrderNodenext>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
}


#[derive(Debug)]
pub struct PpOrderBom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character
    pub bomtype:Option<String>,
    /// db data type: character
    pub bomuse:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub revision:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has many
    pub pp_order_bom_trl:Option<Vec<PpOrderBomTrl>>,
    /// has many
    pub pp_order_bomline:Option<Vec<PpOrderBomline>>,
}


#[derive(Debug)]
pub struct PpOrderBomTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_order_bom:Option<PpOrderBom>,
}


#[derive(Debug)]
pub struct PpOrderBomline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_bomline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub assay:Option<f64>,
    /// db data type: character varying
    pub backflushgroup:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: 'CO'::bpchar
    /// db data type: character
    pub componenttype:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub costallocationperc:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datedelivered:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub feature:Option<String>,
    /// db data type: numeric
    pub forecast:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub iscritical:String,
    /// db data type: character
    pub isqtypercentage:Option<String>,
    /// db data type: character
    pub issuemethod:Option<String>,
    /// db data type: numeric
    pub leadtimeoffset:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtybatch:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtybom:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtydelivered:f64,
    /// db data type: numeric
    pub qtyentered:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub qtypost:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyreject:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyrequired:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyreserved:f64,
    /// not nullable 
    /// db data type: numeric
    pub qtyscrap:f64,
    /// db data type: numeric
    pub scrap:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_order_bom:Option<PpOrderBom>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order_bomline_trl:Option<Vec<PpOrderBomlineTrl>>,
}


#[derive(Debug)]
pub struct PpOrderBomlineTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_bomline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_order_bomline:Option<PpOrderBomline>,
}


#[derive(Debug)]
pub struct PpOrderCost {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_cost_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// default: 'x'::bpchar
    /// db data type: character
    pub costingmethod:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub cumulatedamt:Option<f64>,
    /// db data type: numeric
    pub cumulatedamtpost:Option<f64>,
    /// db data type: numeric
    pub cumulatedqty:Option<f64>,
    /// db data type: numeric
    pub cumulatedqtypost:Option<f64>,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: numeric
    pub currentcostpricell:Option<f64>,
    /// db data type: numeric
    pub currentqty:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_costelement_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_costtype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub c_acctschema:Option<CAcctschema>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_costelement:Option<MCostelement>,
    /// has one
    pub m_costtype:Option<MCosttype>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pp_order:Option<PpOrder>,
}


#[derive(Debug)]
pub struct PpOrderNode {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub action:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_column_id:Option<f64>,
    /// db data type: numeric
    pub ad_form_id:Option<f64>,
    /// db data type: numeric
    pub ad_image_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_process_id:Option<f64>,
    /// db data type: numeric
    pub ad_task_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_block_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// db data type: numeric
    pub ad_window_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// db data type: character varying
    pub attributename:Option<String>,
    /// db data type: character varying
    pub attributevalue:Option<String>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub cost:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datefinish:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datefinishschedule:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestart:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestartschedule:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub docaction:Option<String>,
    /// db data type: character
    pub docstatus:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub duration:Option<f64>,
    /// db data type: numeric
    pub durationreal:Option<f64>,
    /// db data type: numeric
    pub durationrequired:Option<f64>,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character
    pub finishmode:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub iscentrallymaintained:String,
    /// db data type: character
    pub ismilestone:Option<String>,
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// default: 'X'::bpchar
    /// not nullable 
    /// db data type: character
    pub joinelement:String,
    /// not nullable 
    /// db data type: numeric
    pub limit:f64,
    /// db data type: numeric
    pub movingtime:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub overlapunits:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub priority:f64,
    /// db data type: numeric
    pub qtydelivered:Option<f64>,
    /// db data type: numeric
    pub qtyreject:Option<f64>,
    /// db data type: numeric
    pub qtyrequired:Option<f64>,
    /// db data type: numeric
    pub qtyscrap:Option<f64>,
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// db data type: numeric
    pub setuptimereal:Option<f64>,
    /// db data type: numeric
    pub setuptimerequired:Option<f64>,
    /// default: 'X'::bpchar
    /// not nullable 
    /// db data type: character
    pub splitelement:String,
    /// db data type: character
    pub startmode:Option<String>,
    /// db data type: character
    pub subflowexecution:Option<String>,
    /// db data type: numeric
    pub unitscycles:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// not nullable 
    /// db data type: numeric
    pub waitingtime:f64,
    /// db data type: numeric
    pub workflow_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub workingtime:f64,
    /// not nullable 
    /// db data type: numeric
    pub xposition:f64,
    /// default: 100
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub yposition:f64,
    /// has one
    pub ad_column:Option<AdColumn>,
    /// has one
    pub ad_form:Option<AdForm>,
    /// has one
    pub ad_image:Option<AdImage>,
    /// has one
    pub ad_process:Option<AdProcess>,
    /// has one
    pub ad_task:Option<AdTask>,
    /// has one
    pub ad_wf_block:Option<AdWfBlock>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_window:Option<AdWindow>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_workflow:Option<PpOrderWorkflow>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub workflow:Option<AdWorkflow>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order_node_asset:Option<Vec<PpOrderNodeAsset>>,
    /// has many
    pub pp_order_node_product:Option<Vec<PpOrderNodeProduct>>,
    /// has many
    pub pp_order_node_trl:Option<Vec<PpOrderNodeTrl>>,
    /// has many
    pub pp_order_nodenext:Option<Vec<PpOrderNodenext>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
}


#[derive(Debug)]
pub struct PpOrderNodeAsset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_workflow_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
    /// has one
    pub pp_order_workflow:Option<PpOrderWorkflow>,
}


#[derive(Debug)]
pub struct PpOrderNodeProduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_workflow_id:f64,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
    /// has one
    pub pp_order_workflow:Option<PpOrderWorkflow>,
}


#[derive(Debug)]
pub struct PpOrderNodeTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
}


#[derive(Debug)]
pub struct PpOrderNodenext {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_nodenext_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_wf_next_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// db data type: timestamp without time zone
    pub created:Option<NaiveDateTime>,
    /// db data type: numeric
    pub createdby:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isstduserworkflow:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// db data type: numeric
    pub pp_order_next_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_node_id:f64,
    /// default: 10
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: character varying
    pub transitioncode:Option<String>,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_wf_next:Option<AdWfNode>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_next:Option<PpOrderNode>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
}


#[derive(Debug)]
pub struct PpOrderWorkflow {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_workflow_id:f64,
    /// not nullable 
    /// db data type: character
    pub accesslevel:String,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_node_id:Option<f64>,
    /// db data type: numeric
    pub ad_wf_responsible_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_workflow_id:f64,
    /// db data type: numeric
    pub ad_workflowprocessor_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub author:String,
    /// db data type: numeric
    pub cost:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub duration:f64,
    /// default: 'h'::bpchar
    /// not nullable 
    /// db data type: character
    pub durationunit:String,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isdefault:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub limit:f64,
    /// db data type: numeric
    pub movingtime:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub overlapunits:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub pp_order_id:f64,
    /// db data type: numeric
    pub pp_order_node_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub priority:f64,
    /// db data type: character
    pub processtype:Option<String>,
    /// default: 'U'::bpchar
    /// not nullable 
    /// db data type: character
    pub publishstatus:String,
    /// default: 1
    /// db data type: numeric
    pub qtybatchsize:Option<f64>,
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub setuptime:Option<f64>,
    /// db data type: numeric
    pub unitscycles:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character
    pub validateworkflow:Option<String>,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub version:f64,
    /// not nullable 
    /// db data type: numeric
    pub waitingtime:f64,
    /// default: 'M'::bpchar
    /// db data type: character
    pub workflowtype:Option<String>,
    /// db data type: numeric
    pub workingtime:Option<f64>,
    /// default: 100
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub ad_wf_responsible:Option<AdWfResponsible>,
    /// has one
    pub ad_workflowprocessor:Option<AdWorkflowprocessor>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub pp_order:Option<PpOrder>,
    /// has one
    pub pp_order_node:Option<PpOrderNode>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_node_asset:Option<Vec<PpOrderNodeAsset>>,
    /// has many
    pub pp_order_node_product:Option<Vec<PpOrderNodeProduct>>,
    /// has many
    pub pp_order_workflow_trl:Option<Vec<PpOrderWorkflowTrl>>,
}


#[derive(Debug)]
pub struct PpOrderWorkflowTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_order_workflow_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_order_workflow:Option<PpOrderWorkflow>,
}


#[derive(Debug)]
pub struct PpPeriod {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_period_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub name:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub periodno:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_perioddefinition_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_perioddefinition:Option<PpPerioddefinition>,
    /// has many
    pub m_forecastline:Option<Vec<MForecastline>>,
    /// has many
    pub pp_forecastrundetail:Option<Vec<PpForecastrundetail>>,
    /// has many
    pub pp_forecastrunline:Option<Vec<PpForecastrunline>>,
    /// has many
    pub pp_forecastrunresult:Option<Vec<PpForecastrunresult>>,
}


#[derive(Debug)]
pub struct PpPerioddefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_perioddefinition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub calendaryear:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub pp_calendar_id:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub pp_calendar:Option<PpCalendar>,
    /// has many
    pub m_forecast:Option<Vec<MForecast>>,
    /// has many
    pub pp_forecastrun:Option<Vec<PpForecastrun>>,
    /// has many
    pub pp_period:Option<Vec<PpPeriod>>,
}


#[derive(Debug)]
pub struct PpProductBom {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'A'::bpchar
    /// db data type: character
    pub bomtype:Option<String>,
    /// default: 'M'::bpchar
    /// db data type: character
    pub bomuse:Option<String>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: character
    pub copyfrom:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub documentno:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: character varying
    pub revision:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has many
    pub i_product_bom:Option<Vec<IProductBom>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub m_changerequest:Option<Vec<MChangerequest>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_product_bom_trl:Option<Vec<PpProductBomTrl>>,
    /// has many
    pub pp_product_bomline:Option<Vec<PpProductBomline>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub qm_specification:Option<Vec<QmSpecification>>,
    /// has many
    pub r_group:Option<Vec<RGroup>>,
}


#[derive(Debug)]
pub struct PpProductBomTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bom_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
}


#[derive(Debug)]
pub struct PpProductBomline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bomline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub assay:Option<f64>,
    /// db data type: character varying
    pub backflushgroup:Option<String>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: 'CO'::bpchar
    /// db data type: character
    pub componenttype:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub costallocationperc:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub feature:Option<String>,
    /// db data type: numeric
    pub forecast:Option<f64>,
    /// db data type: character varying
    pub help:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub iscritical:Option<String>,
    /// db data type: character
    pub isqtypercentage:Option<String>,
    /// default: '1'::bpchar
    /// not nullable 
    /// db data type: character
    pub issuemethod:String,
    /// db data type: numeric
    pub leadtimeoffset:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bom_id:f64,
    /// db data type: numeric
    pub qtybatch:Option<f64>,
    /// db data type: numeric
    pub qtybom:Option<f64>,
    /// db data type: numeric
    pub scrap:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub validfrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has many
    pub i_product_bom:Option<Vec<IProductBom>>,
    /// has many
    pub pp_product_bomline_trl:Option<Vec<PpProductBomlineTrl>>,
}


#[derive(Debug)]
pub struct PpProductBomlineTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_product_bomline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_language:Option<AdLanguage>,
    /// has one
    pub pp_product_bomline:Option<PpProductBomline>,
}


#[derive(Debug)]
pub struct PpProductPlanning {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_product_planning_id:f64,
    /// unique
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// unique
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// unique
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// unique
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// unique
    /// db data type: numeric
    pub s_resource_id:Option<f64>,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub dd_networkdistribution_id:Option<f64>,
    /// db data type: numeric
    pub deliverytime_promised:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iscreateplan:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isissue:String,
    /// db data type: character
    pub ismps:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isphantom:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isrequireddrp:String,
    /// not nullable 
    /// db data type: character
    pub isrequiredmrp:String,
    /// db data type: numeric
    pub order_max:Option<f64>,
    /// db data type: numeric
    pub order_min:Option<f64>,
    /// db data type: numeric
    pub order_pack:Option<f64>,
    /// db data type: numeric
    pub order_period:Option<f64>,
    /// db data type: character varying
    pub order_policy:Option<String>,
    /// db data type: numeric
    pub order_qty:Option<f64>,
    /// db data type: numeric
    pub planner_id:Option<f64>,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// db data type: numeric
    pub safetystock:Option<f64>,
    /// db data type: numeric
    pub timefence:Option<f64>,
    /// db data type: numeric
    pub transfertime:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub workingtime:Option<f64>,
    /// default: 100
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has one
    pub planner:Option<AdUser>,
    /// has one
    pub s_resource:Option<SResource>,
    /// has one
    pub dd_networkdistribution:Option<DdNetworkdistribution>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
}


#[derive(Debug)]
pub struct PpWfNodeAsset {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_wf_node_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub a_asset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub a_asset:Option<AAsset>,
}


#[derive(Debug)]
pub struct PpWfNodeProduct {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pp_wf_node_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_wf_node_id:f64,
    /// default: 'S'::bpchar
    /// db data type: character
    pub configurationlevel:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'U'::character varying
    /// not nullable 
    /// db data type: character varying
    pub entitytype:String,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub issubcontracting:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub yield_:Option<f64>,
    /// has one
    pub entitytype:Option<AdEntitytype>,
    /// has one
    pub ad_wf_node:Option<AdWfNode>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct QmSpecification {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub qm_specification_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_workflow_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributeset_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has one
    pub ad_workflow:Option<AdWorkflow>,
    /// has one
    pub m_attributeset:Option<MAttributeset>,
    /// has many
    pub qm_specificationline:Option<Vec<QmSpecificationline>>,
}


#[derive(Debug)]
pub struct QmSpecificationline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub qm_specificationline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub andor:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attribute_id:f64,
    /// not nullable 
    /// db data type: character
    pub operation:String,
    /// db data type: numeric
    pub qm_specification_id:Option<f64>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub validfrom:Option<String>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub m_attribute:Option<MAttribute>,
    /// has one
    pub qm_specification:Option<QmSpecification>,
}


#[derive(Debug)]
pub struct RCategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has many
    pub r_categoryupdates:Option<Vec<RCategoryupdates>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct RCategoryupdates {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_category_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_category:Option<RCategory>,
}


#[derive(Debug)]
pub struct RContactinterest {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_interestarea_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: timestamp without time zone
    pub optoutdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub subscribedate:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_interestarea:Option<RInterestarea>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct RGroup {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_bom_id:Option<f64>,
    /// db data type: numeric
    pub m_changenotice_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_bom:Option<MBom>,
    /// has one
    pub m_changenotice:Option<MChangenotice>,
    /// has one
    pub pp_product_bom:Option<PpProductBom>,
    /// has many
    pub r_groupupdates:Option<Vec<RGroupupdates>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct RGroupupdates {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_group_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_group:Option<RGroup>,
}


#[derive(Debug)]
pub struct RInterestarea {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_interestarea_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has many
    pub ad_ldapaccess:Option<Vec<AdLdapaccess>>,
    /// has many
    pub i_bpartner:Option<Vec<IBpartner>>,
    /// has many
    pub r_contactinterest:Option<Vec<RContactinterest>>,
}


#[derive(Debug)]
pub struct RIssueknown {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issueknown_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub issuestatus:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub issuesummary:String,
    /// default: 0
    /// db data type: numeric
    pub lineno:Option<f64>,
    /// db data type: character varying
    pub loggername:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub r_issuerecommendation_id:Option<f64>,
    /// db data type: numeric
    pub r_issuestatus_id:Option<f64>,
    /// db data type: numeric
    pub r_request_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub releaseno:String,
    /// db data type: character varying
    pub sourceclassname:Option<String>,
    /// db data type: character varying
    pub sourcemethodname:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_issuestatus:Option<RIssuestatus>,
    /// has one
    pub r_request:Option<RRequest>,
    /// has one
    pub r_issuerecommendation:Option<RIssuerecommendation>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
}


#[derive(Debug)]
pub struct RIssueproject {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issueproject_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character varying
    pub profileinfo:Option<String>,
    /// db data type: character varying
    pub statisticsinfo:Option<String>,
    /// not nullable 
    /// db data type: character
    pub systemstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub c_project:Option<CProject>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub r_issuesource:Option<Vec<RIssuesource>>,
}


#[derive(Debug)]
pub struct RIssuerecommendation {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issuerecommendation_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub r_issueknown:Option<Vec<RIssueknown>>,
}


#[derive(Debug)]
pub struct RIssuesource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issuesource_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub profileinfo:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub r_issueproject_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub r_issuesystem_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub r_issueuser_id:f64,
    /// db data type: character varying
    pub statisticsinfo:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_issuesystem:Option<RIssuesystem>,
    /// has one
    pub r_issueproject:Option<RIssueproject>,
    /// has one
    pub r_issueuser:Option<RIssueuser>,
}


#[derive(Debug)]
pub struct RIssuestatus {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issuestatus_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub r_issueknown:Option<Vec<RIssueknown>>,
}


#[derive(Debug)]
pub struct RIssuesystem {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issuesystem_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub dbaddress:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub profileinfo:Option<String>,
    /// db data type: character varying
    pub statisticsinfo:Option<String>,
    /// not nullable 
    /// db data type: character
    pub systemstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub r_issuesource:Option<Vec<RIssuesource>>,
}


#[derive(Debug)]
pub struct RIssueuser {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_issueuser_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub username:String,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub r_issuesource:Option<Vec<RIssuesource>>,
}


#[derive(Debug)]
pub struct RMailtext {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_mailtext_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub ishtml:String,
    /// db data type: character varying
    pub mailheader:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub mailtext:String,
    /// db data type: character varying
    pub mailtext2:Option<String>,
    /// db data type: character varying
    pub mailtext3:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub ad_printform:Option<Vec<AdPrintform>>,
    /// has many
    pub ad_usermail:Option<Vec<AdUsermail>>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub r_mailtext_trl:Option<Vec<RMailtextTrl>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
}


#[derive(Debug)]
pub struct RMailtextTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_mailtext_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// db data type: character varying
    pub mailheader:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub mailtext:String,
    /// db data type: character varying
    pub mailtext2:Option<String>,
    /// db data type: character varying
    pub mailtext3:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct RRequest {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_request_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_invoicerequest_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub closedate:Option<NaiveDateTime>,
    /// default: 'C'::bpchar
    /// not nullable 
    /// db data type: character
    pub confidentialtype:String,
    /// not nullable 
    /// db data type: character
    pub confidentialtypeentry:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datecompleteplan:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datelastaction:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datelastalert:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextaction:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestartplan:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// not nullable 
    /// db data type: character
    pub duetype:String,
    /// db data type: timestamp without time zone
    pub endtime:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isescalated:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// db data type: character varying
    pub lastresult:Option<String>,
    /// db data type: numeric
    pub m_changerequest_id:Option<f64>,
    /// db data type: numeric
    pub m_fixchangenotice_id:Option<f64>,
    /// db data type: numeric
    pub m_inout_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_productspent_id:Option<f64>,
    /// db data type: numeric
    pub m_rma_id:Option<f64>,
    /// db data type: character
    pub nextaction:Option<String>,
    /// not nullable 
    /// db data type: character
    pub priority:String,
    /// db data type: character
    pub priorityuser:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// db data type: numeric
    pub qtyinvoiced:Option<f64>,
    /// db data type: numeric
    pub qtyplan:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtyspent:Option<f64>,
    /// db data type: numeric
    pub r_category_id:Option<f64>,
    /// db data type: numeric
    pub r_group_id:Option<f64>,
    /// db data type: numeric
    pub r_mailtext_id:Option<f64>,
    /// db data type: numeric
    pub r_requestrelated_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub r_requesttype_id:f64,
    /// db data type: numeric
    pub r_resolution_id:Option<f64>,
    /// db data type: numeric
    pub r_standardresponse_id:Option<f64>,
    /// db data type: numeric
    pub r_status_id:Option<f64>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub requestamt:f64,
    /// db data type: character varying
    pub result:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub starttime:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: character varying
    pub summary:String,
    /// db data type: character
    pub taskstatus:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one
    pub r_group:Option<RGroup>,
    /// has one
    pub r_category:Option<RCategory>,
    /// has one
    pub r_status:Option<RStatus>,
    /// has one
    pub r_resolution:Option<RResolution>,
    /// has one, self referential
    pub r_requestrelated:Option<Box<RRequest>>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub m_rma:Option<MRma>,
    /// has one
    pub ad_table:Option<AdTable>,
    /// has one
    pub r_mailtext:Option<RMailtext>,
    /// has one
    pub r_standardresponse:Option<RStandardresponse>,
    /// has one
    pub m_productspent:Option<MProduct>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_invoicerequest:Option<CInvoice>,
    /// has one
    pub m_changerequest:Option<MChangerequest>,
    /// has one
    pub m_fixchangenotice:Option<MChangenotice>,
    /// has many
    pub ad_issue:Option<Vec<AdIssue>>,
    /// has many
    pub r_issueknown:Option<Vec<RIssueknown>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub r_requestupdate:Option<Vec<RRequestupdate>>,
    /// has many
    pub r_requestupdates:Option<Vec<RRequestupdates>>,
}


#[derive(Debug)]
pub struct RRequestaction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestaction_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_role_id:Option<f64>,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_invoice_id:Option<f64>,
    /// db data type: numeric
    pub c_order_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: character
    pub confidentialtype:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datecompleteplan:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextaction:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datestartplan:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub enddate:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character
    pub isescalated:Option<String>,
    /// db data type: character
    pub isinvoiced:Option<String>,
    /// db data type: character
    pub isselfservice:Option<String>,
    /// db data type: numeric
    pub m_inout_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub m_productspent_id:Option<f64>,
    /// db data type: numeric
    pub m_rma_id:Option<f64>,
    /// db data type: character varying
    pub nullcolumns:Option<String>,
    /// db data type: character
    pub priority:Option<String>,
    /// db data type: character
    pub priorityuser:Option<String>,
    /// db data type: numeric
    pub qtyinvoiced:Option<f64>,
    /// db data type: numeric
    pub qtyplan:Option<f64>,
    /// db data type: numeric
    pub qtyspent:Option<f64>,
    /// db data type: numeric
    pub r_category_id:Option<f64>,
    /// db data type: numeric
    pub r_group_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub r_request_id:f64,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// db data type: numeric
    pub r_resolution_id:Option<f64>,
    /// db data type: numeric
    pub r_status_id:Option<f64>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub startdate:Option<NaiveDateTime>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character
    pub taskstatus:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_request:Option<RRequest>,
    /// has one
    pub r_group:Option<RGroup>,
    /// has one
    pub r_category:Option<RCategory>,
    /// has one
    pub r_status:Option<RStatus>,
    /// has one
    pub r_resolution:Option<RResolution>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub c_order:Option<COrder>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub c_payment:Option<CPayment>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one
    pub a_asset:Option<AAsset>,
    /// has one
    pub m_inout:Option<MInout>,
    /// has one
    pub m_rma:Option<MRma>,
    /// has one
    pub m_productspent:Option<MProduct>,
}


#[derive(Debug)]
pub struct RRequestprocessor {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestprocessor_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub datelastrun:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub datenextrun:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub frequency:f64,
    /// not nullable 
    /// db data type: character
    pub frequencytype:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub inactivityalertdays:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub keeplogdays:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub overduealertdays:f64,
    /// not nullable 
    /// db data type: numeric
    pub overdueassigndays:f64,
    /// db data type: character
    pub processing:Option<String>,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// default: 7
    /// not nullable 
    /// db data type: numeric
    pub reminddays:f64,
    /// not nullable 
    /// db data type: numeric
    pub supervisor_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub supervisor:Option<AdUser>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
    /// has one, extension table
    pub r_requestprocessorlog:Option<Box<RRequestprocessorlog>>,
    /// has many
    pub r_requestprocessor_route:Option<Vec<RRequestprocessorRoute>>,
}


#[derive(Debug)]
pub struct RRequestprocessorRoute {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestprocessor_route_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: character varying
    pub keyword:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub r_requestprocessor_id:f64,
    /// db data type: numeric
    pub r_requesttype_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_requestprocessor:Option<RRequestprocessor>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
}


#[derive(Debug)]
pub struct RRequestprocessorlog {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestprocessor_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestprocessorlog_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub iserror:String,
    /// db data type: character varying
    pub reference:Option<String>,
    /// db data type: character varying
    pub summary:Option<String>,
    /// db data type: character varying
    pub textmsg:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_requestprocessor:Option<RRequestprocessor>,
}


#[derive(Debug)]
pub struct RRequesttype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requesttype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub autoduedatedays:Option<f64>,
    /// default: 'C'::bpchar
    /// not nullable 
    /// db data type: character
    pub confidentialtype:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 7
    /// not nullable 
    /// db data type: numeric
    pub duedatetolerance:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isautochangerequest:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isconfidentialinfo:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isemailwhendue:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isemailwhenoverdue:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isindexed:String,
    /// db data type: character
    pub isinvoiced:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub r_statuscategory_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_statuscategory:Option<RStatuscategory>,
    /// has many
    pub ad_userbpaccess:Option<Vec<AdUserbpaccess>>,
    /// has many
    pub k_index:Option<Vec<KIndex>>,
    /// has many
    pub k_indexstop:Option<Vec<KIndexstop>>,
    /// has many
    pub pa_measure:Option<Vec<PaMeasure>>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub r_requestprocessor:Option<Vec<RRequestprocessor>>,
    /// has many
    pub r_requestprocessor_route:Option<Vec<RRequestprocessorRoute>>,
    /// has many
    pub r_requesttypeupdates:Option<Vec<RRequesttypeupdates>>,
}


#[derive(Debug)]
pub struct RRequesttypeupdates {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requesttype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_requesttype:Option<RRequesttype>,
}


#[derive(Debug)]
pub struct RRequestupdate {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_requestupdate_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character
    pub confidentialtypeentry:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub endtime:Option<NaiveDateTime>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_productspent_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtyinvoiced:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtyspent:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub r_request_id:f64,
    /// db data type: character varying
    pub result:Option<String>,
    /// db data type: timestamp without time zone
    pub starttime:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub r_request:Option<RRequest>,
    /// has one
    pub m_productspent:Option<MProduct>,
}


#[derive(Debug)]
pub struct RRequestupdates {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_request_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub r_request:Option<RRequest>,
}


#[derive(Debug)]
pub struct RResolution {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_resolution_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
}


#[derive(Debug)]
pub struct RStandardresponse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_standardresponse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub responsetext:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
}


#[derive(Debug)]
pub struct RStatus {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_status_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isclosed:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isfinalclose:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isopen:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub iswebcanupdate:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub next_status_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub r_statuscategory_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// db data type: numeric
    pub timeoutdays:Option<f64>,
    /// db data type: numeric
    pub update_status_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one, self referential
    pub next_status:Option<Box<RStatus>>,
    /// has one, self referential
    pub update_status:Option<Box<RStatus>>,
    /// has one
    pub r_statuscategory:Option<RStatuscategory>,
    /// has many
    pub r_request:Option<Vec<RRequest>>,
    /// has many
    pub r_requestaction:Option<Vec<RRequestaction>>,
    /// has many
    pub r_status:Option<Vec<RStatus>>,
}


#[derive(Debug)]
pub struct RStatuscategory {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub r_statuscategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub r_requesttype:Option<Vec<RRequesttype>>,
    /// has many
    pub r_status:Option<Vec<RStatus>>,
}


#[derive(Debug)]
pub struct SExpensetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_expensetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
}


#[derive(Debug)]
pub struct SResource {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_resource_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub chargeableqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub dailycapacity:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isavailable:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub ismanufacturingresource:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: character
    pub manufacturingresourcetype:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 100
    /// not nullable 
    /// db data type: numeric
    pub percentutilization:f64,
    /// default: 0
    /// db data type: numeric
    pub planninghorizon:Option<f64>,
    /// db data type: numeric
    pub queuingtime:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub s_resourcetype_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// db data type: numeric
    pub waitingtime:Option<f64>,
    /// has one
    pub s_resourcetype:Option<SResourcetype>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub ad_wf_node:Option<Vec<AdWfNode>>,
    /// has many
    pub ad_workflow:Option<Vec<AdWorkflow>>,
    /// has many
    pub i_productplanning:Option<Vec<IProductplanning>>,
    /// has many
    pub i_workflow:Option<Vec<IWorkflow>>,
    /// has many
    pub m_product:Option<Vec<MProduct>>,
    /// has many
    pub pp_cost_collector:Option<Vec<PpCostCollector>>,
    /// has many
    pub pp_mrp:Option<Vec<PpMrp>>,
    /// has many
    pub pp_order:Option<Vec<PpOrder>>,
    /// has many
    pub pp_order_node:Option<Vec<PpOrderNode>>,
    /// has many
    pub pp_order_workflow:Option<Vec<PpOrderWorkflow>>,
    /// has many
    pub pp_product_planning:Option<Vec<PpProductPlanning>>,
    /// has many
    pub s_resourceassignment:Option<Vec<SResourceassignment>>,
    /// has many
    pub s_resourceunavailable:Option<Vec<SResourceunavailable>>,
}


#[derive(Debug)]
pub struct SResourceassignment {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_resourceassignment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub assigndatefrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub assigndateto:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isconfirmed:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub s_resource_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub s_resource:Option<SResource>,
    /// has many
    pub c_invoiceline:Option<Vec<CInvoiceline>>,
    /// has many
    pub c_orderline:Option<Vec<COrderline>>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
}


#[derive(Debug)]
pub struct SResourcetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_resourcetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub allowuomfractions:String,
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: 0
    /// db data type: numeric
    pub chargeableqty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdateslot:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub issingleassignment:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istimeslot:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub onfriday:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub onmonday:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub onsaturday:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub onsunday:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub onthursday:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ontuesday:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub onwednesday:String,
    /// db data type: timestamp without time zone
    pub timeslotend:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub timeslotstart:Option<NaiveDateTime>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: character varying
    pub value:String,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has many
    pub s_resource:Option<Vec<SResource>>,
}


#[derive(Debug)]
pub struct SResourceunavailable {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_resourceunavailable_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datefrom:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub dateto:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub s_resource_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub s_resource:Option<SResource>,
}


#[derive(Debug)]
pub struct STimeexpense {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_timeexpense_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub approvalamt:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datereport:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// not nullable 
    /// db data type: character
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
}


#[derive(Debug)]
pub struct STimeexpenseline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_timeexpenseline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_invoiceline_id:Option<f64>,
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub convertedamt:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateexpense:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub expenseamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub invoiceprice:Option<f64>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isinvoiced:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istimereport:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: character varying
    pub note:Option<String>,
    /// db data type: numeric
    pub priceinvoiced:Option<f64>,
    /// db data type: numeric
    pub pricereimbursed:Option<f64>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub qtyinvoiced:Option<f64>,
    /// db data type: numeric
    pub qtyreimbursed:Option<f64>,
    /// db data type: numeric
    pub s_resourceassignment_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub s_timeexpense_id:f64,
    /// db data type: numeric
    pub s_timetype_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub s_timeexpense:Option<STimeexpense>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub s_resourceassignment:Option<SResourceassignment>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_invoiceline:Option<CInvoiceline>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub s_timetype:Option<STimetype>,
    /// has many
    pub c_projectissue:Option<Vec<CProjectissue>>,
}


#[derive(Debug)]
pub struct STimetype {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_timetype_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub s_timeexpenseline:Option<Vec<STimeexpenseline>>,
}


#[derive(Debug)]
pub struct STraining {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_training_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_taxcategory_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub descriptionurl:Option<String>,
    /// db data type: character varying
    pub documentnote:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_category_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_taxcategory:Option<CTaxcategory>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has many
    pub s_training_class:Option<Vec<STrainingClass>>,
}


#[derive(Debug)]
pub struct STrainingClass {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub s_training_class_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub enddate:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub s_training_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub startdate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub s_training:Option<STraining>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct TAging {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub c_bankaccount_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// primary
    /// default: (0)::numeric
    /// not nullable 
    /// db data type: numeric
    pub c_cashflow_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoicepayschedule_id:f64,
    /// primary
    /// default: (0)::numeric
    /// not nullable 
    /// db data type: numeric
    pub c_order_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'N'::bpchar
    /// db data type: character
    pub dateacct:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub daysdue:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due0:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due0_30:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due0_7:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due1_7:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due31_60:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due31_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due61_90:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due61_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due8_30:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub due91_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub dueamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub duedate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub invoicedamt:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub islistinvoices:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue1_30:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue1_7:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue31_60:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue31_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue61_90:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue61_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue8_30:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdue91_plus:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub pastdueamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub statementdate:NaiveDateTime,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_activity:Option<CActivity>,
}


#[derive(Debug)]
pub struct TAlterColumn {
    /// db data type: name
    pub columnname:Option<String>,
    /// db data type: name
    pub datatype:Option<String>,
    /// db data type: character varying
    pub defaultclause:Option<String>,
    /// db data type: character varying
    pub nullclause:Option<String>,
    /// db data type: name
    pub tablename:Option<String>,
}


#[derive(Debug)]
pub struct TBomIndented {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_bom_indented_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_pinstance_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: numeric
    pub cost:Option<f64>,
    /// db data type: numeric
    pub costfuture:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: numeric
    pub currentcostpricell:Option<f64>,
    /// db data type: numeric
    pub futurecostprice:Option<f64>,
    /// db data type: numeric
    pub futurecostpricell:Option<f64>,
    /// default: NULL::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub levelno:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub levels:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_costelement_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub qtybom:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub sel_product_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct TBomline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_bomline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_pinstance_id:Option<f64>,
    /// db data type: numeric
    pub c_acctschema_id:Option<f64>,
    /// db data type: character varying
    pub cost:Option<String>,
    /// db data type: character
    pub costingmethod:Option<String>,
    /// db data type: numeric
    pub coststandard:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: numeric
    pub currentcostprice:Option<f64>,
    /// db data type: numeric
    pub currentcostpricell:Option<f64>,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// db data type: numeric
    pub futurecostprice:Option<f64>,
    /// db data type: numeric
    pub futurecostpricell:Option<f64>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub implosion:Option<String>,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: character
    pub iscostfrozen:Option<String>,
    /// db data type: numeric
    pub levelno:Option<f64>,
    /// db data type: character varying
    pub levels:Option<String>,
    /// db data type: numeric
    pub m_costelement_id:Option<f64>,
    /// db data type: numeric
    pub m_costtype_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: numeric
    pub pp_product_bom_id:Option<f64>,
    /// db data type: numeric
    pub pp_product_bomline_id:Option<f64>,
    /// db data type: numeric
    pub qtybom:Option<f64>,
    /// db data type: numeric
    pub qtyrequired:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub sel_product_id:f64,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct TCombinedaging {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_currency_id:f64,
    /// primary
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// primary
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub c_invoicepayschedule_id:f64,
    /// primary
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub c_payment_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_bp_group_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub daysdue:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub due0:f64,
    /// not nullable 
    /// db data type: numeric
    pub due0_30:f64,
    /// not nullable 
    /// db data type: numeric
    pub due0_7:f64,
    /// not nullable 
    /// db data type: numeric
    pub due1_7:f64,
    /// not nullable 
    /// db data type: numeric
    pub due31_60:f64,
    /// not nullable 
    /// db data type: numeric
    pub due31_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub due61_90:f64,
    /// not nullable 
    /// db data type: numeric
    pub due61_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub due8_30:f64,
    /// not nullable 
    /// db data type: numeric
    pub due91_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub dueamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub duedate:NaiveDateTime,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub isincludepayments:Option<String>,
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// not nullable 
    /// db data type: character
    pub listsources:String,
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue1_30:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue1_7:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue31_60:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue31_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue61_90:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue61_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue8_30:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdue91_plus:f64,
    /// not nullable 
    /// db data type: numeric
    pub pastdueamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub statementdate:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub trxamt:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct TDistributionrundetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlist_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionlistline_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionrun_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_distributionrunline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_location_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub minqty:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// not nullable 
    /// db data type: numeric
    pub ratio:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_distributionrun:Option<MDistributionrun>,
    /// has one
    pub m_distributionrunline:Option<MDistributionrunline>,
    /// has one
    pub m_distributionlist:Option<MDistributionlist>,
    /// has one
    pub m_distributionlistline:Option<MDistributionlistline>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bpartner_location:Option<CBpartnerLocation>,
}


#[derive(Debug)]
pub struct TInventoryvalue {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_costelement_id:f64,
    /// primary
    /// default: NULL::numeric
    /// not nullable 
    /// db data type: numeric
    pub m_costtype_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: numeric
    pub ad_client_id:Option<f64>,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub classification:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub cost:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub costamt:Option<f64>,
    /// db data type: numeric
    pub costamtll:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub coststandard:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub coststandardamt:Option<f64>,
    /// db data type: numeric
    pub cumulatedamt:Option<f64>,
    /// db data type: timestamp without time zone
    pub datevalue:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub group1:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub group2:Option<String>,
    /// db data type: numeric
    pub m_pricelist_version_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelimit:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelimitamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelist:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricelistamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricepo:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricepoamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricestd:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub pricestdamt:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub qtyonhand:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_pricelist_version:Option<MPricelistVersion>,
    /// has one
    pub c_currency:Option<CCurrency>,
    /// has one
    pub m_costelement:Option<MCostelement>,
}


#[derive(Debug)]
pub struct TInvoicegl {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub c_invoice_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtacctbalance:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtrevalcr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtrevalcrdiff:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtrevaldr:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtrevaldrdiff:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub amtsourcebalance:f64,
    /// db data type: character
    pub apar:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_conversiontypereval_id:f64,
    /// db data type: numeric
    pub c_doctypereval_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub datereval:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub grandtotal:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isallcurrencies:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub openamt:f64,
    /// db data type: numeric
    pub percent:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub c_invoice:Option<CInvoice>,
    /// has one
    pub fact_acct:Option<FactAcct>,
    /// has one
    pub c_conversiontypereval:Option<CConversiontype>,
    /// has one
    pub c_doctypereval:Option<CDoctype>,
}


#[derive(Debug)]
pub struct TMrpCrp {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_mrp_crp_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_pinstance_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct TReconciliation {
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub matchcode:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct TReplenish {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// db data type: numeric
    pub c_doctype_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub level_max:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub level_min:f64,
    /// db data type: numeric
    pub m_warehousesource_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub order_min:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub order_pack:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyonhand:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyordered:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtyreserved:f64,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qtytoorder:f64,
    /// db data type: character
    pub replenishmentcreate:Option<String>,
    /// not nullable 
    /// db data type: character
    pub replenishtype:String,
    /// db data type: timestamp without time zone
    pub updated:Option<NaiveDateTime>,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_warehousesource:Option<MWarehouse>,
    /// has one
    pub c_doctype:Option<CDoctype>,
}


#[derive(Debug)]
pub struct TReport {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub pa_reportline_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub record_id:f64,
    /// db data type: character
    pub accounttype:Option<String>,
    /// db data type: character
    pub ax_case:Option<String>,
    /// db data type: numeric
    pub col_0:Option<f64>,
    /// db data type: numeric
    pub col_1:Option<f64>,
    /// db data type: numeric
    pub col_10:Option<f64>,
    /// db data type: numeric
    pub col_11:Option<f64>,
    /// db data type: numeric
    pub col_12:Option<f64>,
    /// db data type: numeric
    pub col_13:Option<f64>,
    /// db data type: numeric
    pub col_14:Option<f64>,
    /// db data type: numeric
    pub col_15:Option<f64>,
    /// db data type: numeric
    pub col_16:Option<f64>,
    /// db data type: numeric
    pub col_17:Option<f64>,
    /// db data type: numeric
    pub col_18:Option<f64>,
    /// db data type: numeric
    pub col_19:Option<f64>,
    /// db data type: numeric
    pub col_2:Option<f64>,
    /// db data type: numeric
    pub col_20:Option<f64>,
    /// db data type: numeric
    pub col_3:Option<f64>,
    /// db data type: numeric
    pub col_4:Option<f64>,
    /// db data type: numeric
    pub col_5:Option<f64>,
    /// db data type: numeric
    pub col_6:Option<f64>,
    /// db data type: numeric
    pub col_7:Option<f64>,
    /// db data type: numeric
    pub col_8:Option<f64>,
    /// db data type: numeric
    pub col_9:Option<f64>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub fixedpercentage:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub levelno:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: character
    pub reportlinestyle:Option<String>,
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// db data type: numeric
    pub tablevel:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub pa_reportline:Option<PaReportline>,
}


#[derive(Debug)]
pub struct TReportstatement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// default: 0
    /// db data type: numeric
    pub amtacctcr:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub amtacctdr:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub balance:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub levelno:f64,
    /// db data type: character varying
    pub name:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub qty:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
}


#[derive(Debug)]
pub struct TSelection {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_selection_id:f64,
}


#[derive(Debug)]
pub struct TSelection2 {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub query_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_selection_id:f64,
}


#[derive(Debug)]
pub struct TSelectionBrowse {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub columnname:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub t_selection_id:f64,
    /// db data type: character varying
    pub info:Option<String>,
    /// db data type: timestamp without time zone
    pub value_date:Option<NaiveDateTime>,
    /// db data type: numeric
    pub value_number:Option<f64>,
    /// db data type: character varying
    pub value_string:Option<String>,
}


#[derive(Debug)]
pub struct TSpool {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: character varying
    pub msgtext:String,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
}


#[derive(Debug)]
pub struct TTransaction {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub m_transaction_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_projectissue_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_attributesetinstance_id:f64,
    /// db data type: numeric
    pub m_inout_id:Option<f64>,
    /// db data type: numeric
    pub m_inoutline_id:Option<f64>,
    /// db data type: numeric
    pub m_inventory_id:Option<f64>,
    /// db data type: numeric
    pub m_inventoryline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// db data type: numeric
    pub m_movement_id:Option<f64>,
    /// db data type: numeric
    pub m_movementline_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_product_id:f64,
    /// db data type: numeric
    pub m_production_id:Option<f64>,
    /// db data type: numeric
    pub m_productionline_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub movementdate:NaiveDateTime,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// not nullable 
    /// db data type: character
    pub movementtype:String,
    /// db data type: numeric
    pub search_inout_id:Option<f64>,
    /// db data type: numeric
    pub search_invoice_id:Option<f64>,
    /// db data type: numeric
    pub search_order_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
    /// has one
    pub m_transaction:Option<MTransaction>,
    /// has one
    pub m_locator:Option<MLocator>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_attributesetinstance:Option<MAttributesetinstance>,
    /// has one
    pub m_inoutline:Option<MInoutline>,
    /// has one
    pub m_movementline:Option<MMovementline>,
    /// has one
    pub m_inventoryline:Option<MInventoryline>,
    /// has one
    pub m_productionline:Option<MProductionline>,
    /// has one
    pub c_projectissue:Option<CProjectissue>,
}


#[derive(Debug)]
pub struct TTrialbalance {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub ad_pinstance_id:f64,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub fact_acct_id:f64,
    /// db data type: numeric
    pub a_asset_id:Option<f64>,
    /// db data type: numeric
    pub account_id:Option<f64>,
    /// db data type: character varying
    pub accountvalue:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// db data type: numeric
    pub ad_org_id:Option<f64>,
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// db data type: numeric
    pub ad_table_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub amtacctbalance:f64,
    /// not nullable 
    /// db data type: numeric
    pub amtacctcr:f64,
    /// not nullable 
    /// db data type: numeric
    pub amtacctdr:f64,
    /// db data type: numeric
    pub amtsourcebalance:Option<f64>,
    /// db data type: numeric
    pub amtsourcecr:Option<f64>,
    /// db data type: numeric
    pub amtsourcedr:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_acctschema_id:f64,
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_locfrom_id:Option<f64>,
    /// db data type: numeric
    pub c_locto_id:Option<f64>,
    /// db data type: numeric
    pub c_period_id:Option<f64>,
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// db data type: numeric
    pub c_salesregion_id:Option<f64>,
    /// db data type: numeric
    pub c_tax_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub dateacct:NaiveDateTime,
    /// db data type: timestamp without time zone
    pub datetrx:Option<NaiveDateTime>,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: numeric
    pub gl_budget_id:Option<f64>,
    /// db data type: numeric
    pub gl_category_id:Option<f64>,
    /// db data type: numeric
    pub line_id:Option<f64>,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub postingtype:String,
    /// db data type: numeric
    pub qty:Option<f64>,
    /// db data type: numeric
    pub record_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// has one
    pub ad_pinstance:Option<AdPinstance>,
}


#[derive(Debug)]
pub struct Test {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub test_id:f64,
    /// db data type: numeric
    pub account_acct:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: bytea
    pub binarydata:Option<Vec<u8>>,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// db data type: numeric
    pub c_currency_id:Option<f64>,
    /// db data type: numeric
    pub c_location_id:Option<f64>,
    /// db data type: numeric
    pub c_payment_id:Option<f64>,
    /// db data type: numeric
    pub c_uom_id:Option<f64>,
    /// db data type: text
    pub characterdata:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub processed:Option<String>,
    /// db data type: character
    pub processing:Option<String>,
    /// default: 0
    /// db data type: numeric
    pub t_amount:Option<f64>,
    /// db data type: timestamp without time zone
    pub t_date:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub t_datetime:Option<NaiveDateTime>,
    /// db data type: numeric
    pub t_integer:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub t_number:Option<f64>,
    /// default: 0
    /// db data type: numeric
    pub t_qty:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub account_acct:Option<CValidcombination>,
}


#[derive(Debug)]
pub struct UBlacklistcheque {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub u_blacklistcheque_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub bankname:String,
    /// not nullable 
    /// db data type: character varying
    pub chequeno:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct UPosterminal {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub u_posterminal_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub autolock:String,
    /// not nullable 
    /// db data type: numeric
    pub c_cashbook_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub c_cashbpartner_id:f64,
    /// db data type: numeric
    pub c_templatebpartner_id:Option<f64>,
    /// db data type: numeric
    pub card_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub cardtransferbankaccount_id:Option<f64>,
    /// db data type: numeric
    pub cardtransfercashbook_id:Option<f64>,
    /// db data type: character
    pub cardtransfertype:Option<String>,
    /// not nullable 
    /// db data type: character
    pub cashbooktransfertype:String,
    /// db data type: numeric
    pub cashtransferbankaccount_id:Option<f64>,
    /// db data type: numeric
    pub cashtransfercashbook_id:Option<f64>,
    /// db data type: numeric
    pub check_bankaccount_id:Option<f64>,
    /// db data type: numeric
    pub checktransferbankaccount_id:Option<f64>,
    /// db data type: numeric
    pub checktransfercashbook_id:Option<f64>,
    /// db data type: character
    pub checktransfertype:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// db data type: character
    pub isactive:Option<String>,
    /// db data type: timestamp without time zone
    pub lastlocktime:Option<NaiveDateTime>,
    /// default: 'N'::bpchar
    /// db data type: character
    pub locked:Option<String>,
    /// db data type: numeric
    pub locktime:Option<f64>,
    /// db data type: numeric
    pub m_warehouse_id:Option<f64>,
    /// db data type: character varying
    pub name:Option<String>,
    /// db data type: numeric
    pub po_pricelist_id:Option<f64>,
    /// db data type: character varying
    pub printername:Option<String>,
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// db data type: numeric
    pub so_pricelist_id:Option<f64>,
    /// db data type: timestamp without time zone
    pub unlockingtime:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// db data type: numeric
    pub updatedby:Option<f64>,
    /// db data type: character varying
    pub value:Option<String>,
    /// has one
    pub card_bankaccount:Option<CBankaccount>,
    /// has one
    pub cardtransferbankaccount:Option<CBankaccount>,
    /// has one
    pub cardtransfercashbook:Option<CCashbook>,
    /// has one
    pub cashtransferbankaccount:Option<CBankaccount>,
    /// has one
    pub cashtransfercashbook:Option<CCashbook>,
    /// has one
    pub c_cashbook:Option<CCashbook>,
    /// has one
    pub c_cashbpartner:Option<CBpartner>,
    /// has one
    pub check_bankaccount:Option<CBankaccount>,
    /// has one
    pub checktransferbankaccount:Option<CBankaccount>,
    /// has one
    pub checktransfercashbook:Option<CCashbook>,
    /// has one
    pub c_templatebpartner:Option<CBpartner>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub po_pricelist:Option<MPricelist>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub so_pricelist:Option<MPricelist>,
}


#[derive(Debug)]
pub struct URolemenu {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub u_rolemenu_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_role_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub u_webmenu_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_role:Option<AdRole>,
    /// has one
    pub u_webmenu:Option<UWebmenu>,
}


#[derive(Debug)]
pub struct UWebProperties {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub u_web_properties_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub u_key:String,
    /// not nullable 
    /// db data type: character varying
    pub u_value:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
}


#[derive(Debug)]
pub struct UWebmenu {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub u_webmenu_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: character varying
    pub category:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub hassubmenu:String,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub imagelink:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub menulink:String,
    /// not nullable 
    /// db data type: character varying
    pub module:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: numeric
    pub parentmenu_id:Option<f64>,
    /// db data type: character varying
    pub position:Option<String>,
    /// db data type: numeric
    pub sequence:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one, self referential
    pub parentmenu:Option<Box<UWebmenu>>,
    /// has many
    pub u_rolemenu:Option<Vec<URolemenu>>,
    /// has many
    pub u_webmenu:Option<Vec<UWebmenu>>,
}


#[derive(Debug)]
pub struct WAdvertisement {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_advertisement_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// db data type: character varying
    pub adtext:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub c_bpartner_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// db data type: character varying
    pub imageurl:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isselfservice:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// db data type: character
    pub processing:Option<String>,
    /// not nullable 
    /// db data type: character
    pub publishstatus:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: timestamp without time zone
    pub validfrom:Option<NaiveDateTime>,
    /// db data type: timestamp without time zone
    pub validto:Option<NaiveDateTime>,
    /// db data type: numeric
    pub version:Option<f64>,
    /// db data type: numeric
    pub w_clickcount_id:Option<f64>,
    /// db data type: numeric
    pub w_countercount_id:Option<f64>,
    /// db data type: character varying
    pub webparam1:Option<String>,
    /// db data type: character varying
    pub webparam2:Option<String>,
    /// db data type: character varying
    pub webparam3:Option<String>,
    /// db data type: character varying
    pub webparam4:Option<String>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has one
    pub w_clickcount:Option<WClickcount>,
    /// has one
    pub w_countercount:Option<WCountercount>,
}


#[derive(Debug)]
pub struct WBasket {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_basket_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_user_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// db data type: numeric
    pub m_pricelist_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub session_id:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub ad_user:Option<AdUser>,
    /// has many
    pub w_basketline:Option<Vec<WBasketline>>,
}


#[derive(Debug)]
pub struct WBasketline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_basketline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// not nullable 
    /// db data type: character varying
    pub description:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub price:f64,
    /// not nullable 
    /// db data type: character varying
    pub product:String,
    /// default: 0
    /// not nullable 
    /// db data type: numeric
    pub qty:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_basket_id:f64,
    /// has one
    pub w_basket:Option<WBasket>,
    /// has one
    pub m_product:Option<MProduct>,
}


#[derive(Debug)]
pub struct WClick {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_click_id:f64,
    /// db data type: character varying
    pub acceptlanguage:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub referrer:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// db data type: character varying
    pub targeturl:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub useragent:Option<String>,
    /// db data type: numeric
    pub w_clickcount_id:Option<f64>,
    /// has one
    pub w_clickcount:Option<WClickcount>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct WClickcount {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_clickcount_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub targeturl:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has many
    pub w_advertisement:Option<Vec<WAdvertisement>>,
    /// has many
    pub w_click:Option<Vec<WClick>>,
}


#[derive(Debug)]
pub struct WCounter {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_counter_id:f64,
    /// db data type: character varying
    pub acceptlanguage:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub ad_user_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub email:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub pageurl:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: character varying
    pub referrer:Option<String>,
    /// db data type: character varying
    pub remote_addr:Option<String>,
    /// db data type: character varying
    pub remote_host:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub useragent:Option<String>,
    /// db data type: numeric
    pub w_countercount_id:Option<f64>,
    /// has one
    pub w_countercount:Option<WCountercount>,
    /// has one
    pub ad_user:Option<AdUser>,
}


#[derive(Debug)]
pub struct WCountercount {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_countercount_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub pageurl:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has many
    pub w_advertisement:Option<Vec<WAdvertisement>>,
    /// has many
    pub w_counter:Option<Vec<WCounter>>,
}


#[derive(Debug)]
pub struct WMailmsg {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_mailmsg_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub mailmsgtype:String,
    /// not nullable 
    /// db data type: character varying
    pub message:String,
    /// db data type: character varying
    pub message2:Option<String>,
    /// db data type: character varying
    pub message3:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: character varying
    pub subject:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub w_store_id:f64,
    /// has one
    pub w_store:Option<WStore>,
    /// has many
    pub ad_usermail:Option<Vec<AdUsermail>>,
    /// has many
    pub w_mailmsg_trl:Option<Vec<WMailmsgTrl>>,
}


#[derive(Debug)]
pub struct WMailmsgTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_mailmsg_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// not nullable 
    /// db data type: character varying
    pub message:String,
    /// db data type: character varying
    pub message2:Option<String>,
    /// db data type: character varying
    pub message3:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub subject:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub w_mailmsg:Option<WMailmsg>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct WStore {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_store_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// db data type: numeric
    pub c_paymentterm_id:Option<f64>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub description:Option<String>,
    /// db data type: character varying
    pub emailfooter:Option<String>,
    /// db data type: character varying
    pub emailheader:Option<String>,
    /// db data type: character varying
    pub help:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdefault:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenuassets:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenucontact:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenuinterests:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenuinvoices:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenuorders:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenupayments:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenuregistrations:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenurequests:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenurfqs:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub ismenushipments:String,
    /// not nullable 
    /// db data type: numeric
    pub m_pricelist_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: numeric
    pub salesrep_id:f64,
    /// db data type: character varying
    pub stylesheet:Option<String>,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: 'http://localhost'::character varying
    /// not nullable 
    /// db data type: character varying
    pub url:String,
    /// not nullable 
    /// db data type: character varying
    pub webcontext:String,
    /// db data type: character varying
    pub webinfo:Option<String>,
    /// db data type: character varying
    pub weborderemail:Option<String>,
    /// db data type: character varying
    pub webparam1:Option<String>,
    /// db data type: character varying
    pub webparam2:Option<String>,
    /// db data type: character varying
    pub webparam3:Option<String>,
    /// db data type: character varying
    pub webparam4:Option<String>,
    /// db data type: character varying
    pub webparam5:Option<String>,
    /// db data type: character varying
    pub webparam6:Option<String>,
    /// db data type: character varying
    pub wstoreemail:Option<String>,
    /// db data type: character varying
    pub wstoreuser:Option<String>,
    /// db data type: character varying
    pub wstoreuserpw:Option<String>,
    /// has one
    pub ad_client:Option<AdClient>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub m_pricelist:Option<MPricelist>,
    /// has one
    pub c_paymentterm:Option<CPaymentterm>,
    /// has many
    pub w_mailmsg:Option<Vec<WMailmsg>>,
    /// has many
    pub w_store_trl:Option<Vec<WStoreTrl>>,
}


#[derive(Debug)]
pub struct WStoreTrl {
    /// primary
    /// not nullable 
    /// db data type: character varying
    pub ad_language:String,
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub w_store_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: character varying
    pub emailfooter:Option<String>,
    /// db data type: character varying
    pub emailheader:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub istranslated:String,
    /// default: now()
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// db data type: character varying
    pub webinfo:Option<String>,
    /// db data type: character varying
    pub webparam1:Option<String>,
    /// db data type: character varying
    pub webparam2:Option<String>,
    /// db data type: character varying
    pub webparam3:Option<String>,
    /// db data type: character varying
    pub webparam4:Option<String>,
    /// db data type: character varying
    pub webparam5:Option<String>,
    /// db data type: character varying
    pub webparam6:Option<String>,
    /// has one
    pub w_store:Option<WStore>,
    /// has one
    pub ad_language:Option<AdLanguage>,
}


#[derive(Debug)]
pub struct WmArea {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_area_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub wm_area_type_id:f64,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub wm_area_type:Option<WmAreaType>,
    /// has many
    pub wm_section:Option<Vec<WmSection>>,
}


#[derive(Debug)]
pub struct WmAreaType {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_area_type_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub wm_area:Option<Vec<WmArea>>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
}


#[derive(Debug)]
pub struct WmDefinition {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_definition_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bp_group_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_bpartner_id:Option<f64>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub classification:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub group1:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub group2:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_locator_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_category_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub priorityrule:Option<String>,
    /// not nullable 
    /// db data type: numeric
    pub seqno:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub wm_area_type_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub wm_section_type_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub wm_strategy_id:f64,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub m_product_category:Option<MProductCategory>,
    /// has one
    pub c_bpartner:Option<CBpartner>,
    /// has one
    pub c_bp_group:Option<CBpGroup>,
    /// has one
    pub wm_strategy:Option<WmStrategy>,
    /// has one
    pub wm_area_type:Option<WmAreaType>,
    /// has one
    pub wm_section_type:Option<WmSectionType>,
}


#[derive(Debug)]
pub struct WmInoutbound {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_inoutbound_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_doctype_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// db data type: timestamp without time zone
    pub dateprinted:Option<NaiveDateTime>,
    /// default: 'A'::bpchar
    /// not nullable 
    /// db data type: character
    pub deliveryrule:String,
    /// default: 'P'::bpchar
    /// not nullable 
    /// db data type: character
    pub deliveryviarule:String,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'CO'::bpchar
    /// not nullable 
    /// db data type: character
    pub docaction:String,
    /// default: 'DR'::character varying
    /// not nullable 
    /// db data type: character varying
    pub docstatus:String,
    /// not nullable 
    /// db data type: character varying
    pub documentno:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub dropship_bpartner_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub dropship_location_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub dropship_user_id:Option<f64>,
    /// db data type: numeric
    pub freightamt:Option<f64>,
    /// default: 'I'::bpchar
    /// not nullable 
    /// db data type: character
    pub freightcostrule:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character
    pub isapproved:String,
    /// default: 'N'::bpchar
    /// db data type: character
    pub isdropship:Option<String>,
    /// not nullable 
    /// db data type: character
    pub isintransit:String,
    /// not nullable 
    /// db data type: character
    pub isprinted:String,
    /// not nullable 
    /// db data type: character
    pub issotrx:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_shipper_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// db data type: timestamp without time zone
    pub pickdate:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub poreference:Option<String>,
    /// default: '5'::bpchar
    /// not nullable 
    /// db data type: character
    pub priorityrule:String,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// default: NULL::bpchar
    /// db data type: character
    pub processing:Option<String>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub salesrep_id:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub sendemail:String,
    /// db data type: timestamp without time zone
    pub shipdate:Option<NaiveDateTime>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub trackingno:Option<String>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// db data type: numeric
    pub volume:Option<f64>,
    /// db data type: numeric
    pub weight:Option<f64>,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_doctype:Option<CDoctype>,
    /// has one
    pub dropship_bpartner:Option<CBpartner>,
    /// has one
    pub dropship_location:Option<CBpartnerLocation>,
    /// has one
    pub dropship_user:Option<AdUser>,
    /// has one
    pub m_shipper:Option<MShipper>,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has one
    pub salesrep:Option<AdUser>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has many
    pub wm_inoutboundline:Option<Vec<WmInoutboundline>>,
}


#[derive(Debug)]
pub struct WmInoutboundline {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_inoutboundline_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_orgtrx_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_activity_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_campaign_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_charge_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_orderline_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_project_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projectphase_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub c_projecttask_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub c_uom_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: 'N'::bpchar
    /// not nullable 
    /// db data type: character
    pub isdescription:String,
    /// not nullable 
    /// db data type: numeric
    pub line:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_attributesetinstance_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub m_product_id:Option<f64>,
    /// default: (1)::numeric
    /// not nullable 
    /// db data type: numeric
    pub movementqty:f64,
    /// db data type: timestamp without time zone
    pub pickdate:Option<NaiveDateTime>,
    /// db data type: numeric
    pub pickedqty:Option<f64>,
    /// not nullable 
    /// db data type: character
    pub processed:String,
    /// db data type: timestamp without time zone
    pub shipdate:Option<NaiveDateTime>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user1_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub user2_id:Option<f64>,
    /// not nullable 
    /// db data type: numeric
    pub wm_inoutbound_id:f64,
    /// has one
    pub ad_orgtrx:Option<AdOrg>,
    /// has one
    pub c_activity:Option<CActivity>,
    /// has one
    pub c_campaign:Option<CCampaign>,
    /// has one
    pub c_charge:Option<CCharge>,
    /// has one
    pub c_orderline:Option<COrderline>,
    /// has one
    pub c_projectphase:Option<CProjectphase>,
    /// has one
    pub c_projecttask:Option<CProjecttask>,
    /// has one
    pub c_project:Option<CProject>,
    /// has one
    pub c_uom:Option<CUom>,
    /// has one
    pub wm_inoutbound:Option<WmInoutbound>,
    /// has one
    pub m_product:Option<MProduct>,
    /// has one
    pub user1:Option<CElementvalue>,
    /// has one
    pub user2:Option<CElementvalue>,
    /// has many
    pub dd_orderline:Option<Vec<DdOrderline>>,
}


#[derive(Debug)]
pub struct WmRule {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_rule_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub ad_rule_id:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: NULL::character varying
    /// db data type: character varying
    pub inoutboundclass:Option<String>,
    /// not nullable 
    /// db data type: character varying
    pub inoutboundrule:String,
    /// not nullable 
    /// db data type: character
    pub inoutboundtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub ad_rule:Option<AdRule>,
    /// has many
    pub wm_strategy_detail:Option<Vec<WmStrategyDetail>>,
}


#[derive(Debug)]
pub struct WmSection {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_section_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub wm_area_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub wm_section_type_id:f64,
    /// has one
    pub wm_area:Option<WmArea>,
    /// has one
    pub wm_section_type:Option<WmSectionType>,
    /// has many
    pub wm_section_detail:Option<Vec<WmSectionDetail>>,
}


#[derive(Debug)]
pub struct WmSectionDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_section_detail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_locator_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// not nullable 
    /// db data type: numeric
    pub wm_section_id:f64,
    /// has one
    pub wm_section:Option<WmSection>,
}


#[derive(Debug)]
pub struct WmSectionType {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_section_type_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub inoutboundtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
    /// has many
    pub wm_section:Option<Vec<WmSection>>,
}


#[derive(Debug)]
pub struct WmStrategy {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_strategy_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: NULL::character varying
    /// db data type: character varying
    pub description:Option<String>,
    /// not nullable 
    /// db data type: character
    pub inoutboundtype:String,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// not nullable 
    /// db data type: numeric
    pub m_warehouse_id:f64,
    /// not nullable 
    /// db data type: character varying
    pub name:String,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// has one
    pub m_warehouse:Option<MWarehouse>,
    /// has many
    pub wm_definition:Option<Vec<WmDefinition>>,
    /// has many
    pub wm_strategy_detail:Option<Vec<WmStrategyDetail>>,
}


#[derive(Debug)]
pub struct WmStrategyDetail {
    /// primary
    /// not nullable 
    /// db data type: numeric
    pub wm_strategy_detail_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_client_id:f64,
    /// not nullable 
    /// db data type: numeric
    pub ad_org_id:f64,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub created:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub createdby:f64,
    /// default: 'Y'::bpchar
    /// not nullable 
    /// db data type: character
    pub isactive:String,
    /// default: NULL::numeric
    /// db data type: numeric
    pub seqno:Option<f64>,
    /// not nullable 
    /// db data type: timestamp without time zone
    pub updated:NaiveDateTime,
    /// not nullable 
    /// db data type: numeric
    pub updatedby:f64,
    /// default: NULL::numeric
    /// db data type: numeric
    pub wm_rule_id:Option<f64>,
    /// default: NULL::numeric
    /// db data type: numeric
    pub wm_strategy_id:Option<f64>,
    /// has one
    pub wm_rule:Option<WmRule>,
    /// has one
    pub wm_strategy:Option<WmStrategy>,
}
